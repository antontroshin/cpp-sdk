// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/common/v1/common.proto

#include "dapr/proto/common/v1/common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigurationItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace dapr {
namespace proto {
namespace common {
namespace v1 {
class HTTPExtensionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HTTPExtension> _instance;
} _HTTPExtension_default_instance_;
class InvokeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeRequest> _instance;
} _InvokeRequest_default_instance_;
class InvokeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeResponse> _instance;
} _InvokeResponse_default_instance_;
class StreamPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamPayload> _instance;
} _StreamPayload_default_instance_;
class StateItem_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateItem_MetadataEntry_DoNotUse> _instance;
} _StateItem_MetadataEntry_DoNotUse_default_instance_;
class StateItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateItem> _instance;
} _StateItem_default_instance_;
class EtagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Etag> _instance;
} _Etag_default_instance_;
class StateOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateOptions> _instance;
} _StateOptions_default_instance_;
class ConfigurationItem_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigurationItem_MetadataEntry_DoNotUse> _instance;
} _ConfigurationItem_MetadataEntry_DoNotUse_default_instance_;
class ConfigurationItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigurationItem> _instance;
} _ConfigurationItem_default_instance_;
}  // namespace v1
}  // namespace common
}  // namespace proto
}  // namespace dapr
static void InitDefaultsscc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_ConfigurationItem_default_instance_;
    new (ptr) ::dapr::proto::common::v1::ConfigurationItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::ConfigurationItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {
      &scc_info_ConfigurationItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_ConfigurationItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_ConfigurationItem_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigurationItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigurationItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {}};

static void InitDefaultsscc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_Etag_default_instance_;
    new (ptr) ::dapr::proto::common::v1::Etag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::Etag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {}};

static void InitDefaultsscc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_HTTPExtension_default_instance_;
    new (ptr) ::dapr::proto::common::v1::HTTPExtension();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::HTTPExtension::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {}};

static void InitDefaultsscc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_InvokeRequest_default_instance_;
    new (ptr) ::dapr::proto::common::v1::InvokeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::InvokeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_InvokeResponse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_InvokeResponse_default_instance_;
    new (ptr) ::dapr::proto::common::v1::InvokeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::InvokeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InvokeResponse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InvokeResponse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_StateItem_default_instance_;
    new (ptr) ::dapr::proto::common::v1::StateItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::StateItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {
      &scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
      &scc_info_StateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
      &scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_StateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_StateItem_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {}};

static void InitDefaultsscc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_StateOptions_default_instance_;
    new (ptr) ::dapr::proto::common::v1::StateOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::StateOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {}};

static void InitDefaultsscc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::common::v1::_StreamPayload_default_instance_;
    new (ptr) ::dapr::proto::common::v1::StreamPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::common::v1::StreamPayload::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::HTTPExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::HTTPExtension, verb_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::HTTPExtension, querystring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeRequest, method_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeRequest, content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeRequest, http_extension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeResponse, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::InvokeResponse, content_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StreamPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StreamPayload, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StreamPayload, seq_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem, value_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateItem, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::Etag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::Etag, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateOptions, concurrency_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::StateOptions, consistency_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem, value_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem, version_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::common::v1::ConfigurationItem, metadata_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dapr::proto::common::v1::HTTPExtension)},
  { 7, -1, sizeof(::dapr::proto::common::v1::InvokeRequest)},
  { 16, -1, sizeof(::dapr::proto::common::v1::InvokeResponse)},
  { 23, -1, sizeof(::dapr::proto::common::v1::StreamPayload)},
  { 30, 37, sizeof(::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse)},
  { 39, -1, sizeof(::dapr::proto::common::v1::StateItem)},
  { 49, -1, sizeof(::dapr::proto::common::v1::Etag)},
  { 55, -1, sizeof(::dapr::proto::common::v1::StateOptions)},
  { 62, 69, sizeof(::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse)},
  { 71, -1, sizeof(::dapr::proto::common::v1::ConfigurationItem)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_HTTPExtension_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_InvokeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_InvokeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_StreamPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_StateItem_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_StateItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_Etag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_StateOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_ConfigurationItem_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::common::v1::_ConfigurationItem_default_instance_),
};

const char descriptor_table_protodef_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!dapr/proto/common/v1/common.proto\022\024dap"
  "r.proto.common.v1\032\031google/protobuf/any.p"
  "roto\"\320\001\n\rHTTPExtension\0226\n\004verb\030\001 \001(\0162(.d"
  "apr.proto.common.v1.HTTPExtension.Verb\022\023"
  "\n\013querystring\030\002 \001(\t\"r\n\004Verb\022\010\n\004NONE\020\000\022\007\n"
  "\003GET\020\001\022\010\n\004HEAD\020\002\022\010\n\004POST\020\003\022\007\n\003PUT\020\004\022\n\n\006D"
  "ELETE\020\005\022\013\n\007CONNECT\020\006\022\013\n\007OPTIONS\020\007\022\t\n\005TRA"
  "CE\020\010\022\t\n\005PATCH\020\t\"\226\001\n\rInvokeRequest\022\016\n\006met"
  "hod\030\001 \001(\t\022\"\n\004data\030\002 \001(\0132\024.google.protobu"
  "f.Any\022\024\n\014content_type\030\003 \001(\t\022;\n\016http_exte"
  "nsion\030\004 \001(\0132#.dapr.proto.common.v1.HTTPE"
  "xtension\"J\n\016InvokeResponse\022\"\n\004data\030\001 \001(\013"
  "2\024.google.protobuf.Any\022\024\n\014content_type\030\002"
  " \001(\t\"*\n\rStreamPayload\022\014\n\004data\030\001 \001(\014\022\013\n\003s"
  "eq\030\002 \001(\004\"\370\001\n\tStateItem\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\014\022(\n\004etag\030\003 \001(\0132\032.dapr.proto.co"
  "mmon.v1.Etag\022\?\n\010metadata\030\004 \003(\0132-.dapr.pr"
  "oto.common.v1.StateItem.MetadataEntry\0223\n"
  "\007options\030\005 \001(\0132\".dapr.proto.common.v1.St"
  "ateOptions\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
  "\022\r\n\005value\030\002 \001(\t:\0028\001\"\025\n\004Etag\022\r\n\005value\030\001 \001"
  "(\t\"\357\002\n\014StateOptions\022H\n\013concurrency\030\001 \001(\016"
  "23.dapr.proto.common.v1.StateOptions.Sta"
  "teConcurrency\022H\n\013consistency\030\002 \001(\01623.dap"
  "r.proto.common.v1.StateOptions.StateCons"
  "istency\"h\n\020StateConcurrency\022\033\n\027CONCURREN"
  "CY_UNSPECIFIED\020\000\022\033\n\027CONCURRENCY_FIRST_WR"
  "ITE\020\001\022\032\n\026CONCURRENCY_LAST_WRITE\020\002\"a\n\020Sta"
  "teConsistency\022\033\n\027CONSISTENCY_UNSPECIFIED"
  "\020\000\022\030\n\024CONSISTENCY_EVENTUAL\020\001\022\026\n\022CONSISTE"
  "NCY_STRONG\020\002\"\255\001\n\021ConfigurationItem\022\r\n\005va"
  "lue\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022G\n\010metadata\030\003"
  " \003(\01325.dapr.proto.common.v1.Configuratio"
  "nItem.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003"
  "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001Bi\n\nio.dapr."
  "v1B\014CommonProtosZ/github.com/dapr/dapr/p"
  "kg/proto/common/v1;common\252\002\033Dapr.Client."
  "Autogen.Grpc.v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto_sccs[10] = {
  &scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_ConfigurationItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_InvokeResponse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_StateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
  &scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto = {
  false, false, descriptor_table_protodef_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto, "dapr/proto/common/v1/common.proto", 1503,
  &descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto_once, descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto_sccs, descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto_deps, 10, 1,
  schemas, file_default_instances, TableStruct_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto::offsets,
  file_level_metadata_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto, 10, file_level_enum_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto, file_level_service_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto)), true);
namespace dapr {
namespace proto {
namespace common {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HTTPExtension_Verb_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto[0];
}
bool HTTPExtension_Verb_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr HTTPExtension_Verb HTTPExtension::NONE;
constexpr HTTPExtension_Verb HTTPExtension::GET;
constexpr HTTPExtension_Verb HTTPExtension::HEAD;
constexpr HTTPExtension_Verb HTTPExtension::POST;
constexpr HTTPExtension_Verb HTTPExtension::PUT;
constexpr HTTPExtension_Verb HTTPExtension::DELETE;
constexpr HTTPExtension_Verb HTTPExtension::CONNECT;
constexpr HTTPExtension_Verb HTTPExtension::OPTIONS;
constexpr HTTPExtension_Verb HTTPExtension::TRACE;
constexpr HTTPExtension_Verb HTTPExtension::PATCH;
constexpr HTTPExtension_Verb HTTPExtension::Verb_MIN;
constexpr HTTPExtension_Verb HTTPExtension::Verb_MAX;
constexpr int HTTPExtension::Verb_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StateOptions_StateConcurrency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto[1];
}
bool StateOptions_StateConcurrency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr StateOptions_StateConcurrency StateOptions::CONCURRENCY_UNSPECIFIED;
constexpr StateOptions_StateConcurrency StateOptions::CONCURRENCY_FIRST_WRITE;
constexpr StateOptions_StateConcurrency StateOptions::CONCURRENCY_LAST_WRITE;
constexpr StateOptions_StateConcurrency StateOptions::StateConcurrency_MIN;
constexpr StateOptions_StateConcurrency StateOptions::StateConcurrency_MAX;
constexpr int StateOptions::StateConcurrency_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StateOptions_StateConsistency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto[2];
}
bool StateOptions_StateConsistency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr StateOptions_StateConsistency StateOptions::CONSISTENCY_UNSPECIFIED;
constexpr StateOptions_StateConsistency StateOptions::CONSISTENCY_EVENTUAL;
constexpr StateOptions_StateConsistency StateOptions::CONSISTENCY_STRONG;
constexpr StateOptions_StateConsistency StateOptions::StateConsistency_MIN;
constexpr StateOptions_StateConsistency StateOptions::StateConsistency_MAX;
constexpr int StateOptions::StateConsistency_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void HTTPExtension::InitAsDefaultInstance() {
}
class HTTPExtension::_Internal {
 public:
};

HTTPExtension::HTTPExtension(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.HTTPExtension)
}
HTTPExtension::HTTPExtension(const HTTPExtension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  querystring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_querystring().empty()) {
    querystring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_querystring(),
      GetArena());
  }
  verb_ = from.verb_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.HTTPExtension)
}

void HTTPExtension::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  querystring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  verb_ = 0;
}

HTTPExtension::~HTTPExtension() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.HTTPExtension)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HTTPExtension::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  querystring_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HTTPExtension::ArenaDtor(void* object) {
  HTTPExtension* _this = reinterpret_cast< HTTPExtension* >(object);
  (void)_this;
}
void HTTPExtension::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HTTPExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HTTPExtension& HTTPExtension::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void HTTPExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.HTTPExtension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  querystring_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  verb_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HTTPExtension::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.common.v1.HTTPExtension.Verb verb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_verb(static_cast<::dapr::proto::common::v1::HTTPExtension_Verb>(val));
        } else goto handle_unusual;
        continue;
      // string querystring = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_querystring();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.HTTPExtension.querystring"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HTTPExtension::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.HTTPExtension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.common.v1.HTTPExtension.Verb verb = 1;
  if (this->verb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_verb(), target);
  }

  // string querystring = 2;
  if (this->querystring().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_querystring().data(), static_cast<int>(this->_internal_querystring().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.HTTPExtension.querystring");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_querystring(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.HTTPExtension)
  return target;
}

size_t HTTPExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.HTTPExtension)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string querystring = 2;
  if (this->querystring().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_querystring());
  }

  // .dapr.proto.common.v1.HTTPExtension.Verb verb = 1;
  if (this->verb() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_verb());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTTPExtension::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.HTTPExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPExtension* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HTTPExtension>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.HTTPExtension)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.HTTPExtension)
    MergeFrom(*source);
  }
}

void HTTPExtension::MergeFrom(const HTTPExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.HTTPExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.querystring().size() > 0) {
    _internal_set_querystring(from._internal_querystring());
  }
  if (from.verb() != 0) {
    _internal_set_verb(from._internal_verb());
  }
}

void HTTPExtension::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.HTTPExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPExtension::CopyFrom(const HTTPExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.HTTPExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPExtension::IsInitialized() const {
  return true;
}

void HTTPExtension::InternalSwap(HTTPExtension* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  querystring_.Swap(&other->querystring_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(verb_, other->verb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HTTPExtension::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InvokeRequest::InitAsDefaultInstance() {
  ::dapr::proto::common::v1::_InvokeRequest_default_instance_._instance.get_mutable()->data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
  ::dapr::proto::common::v1::_InvokeRequest_default_instance_._instance.get_mutable()->http_extension_ = const_cast< ::dapr::proto::common::v1::HTTPExtension*>(
      ::dapr::proto::common::v1::HTTPExtension::internal_default_instance());
}
class InvokeRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& data(const InvokeRequest* msg);
  static const ::dapr::proto::common::v1::HTTPExtension& http_extension(const InvokeRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
InvokeRequest::_Internal::data(const InvokeRequest* msg) {
  return *msg->data_;
}
const ::dapr::proto::common::v1::HTTPExtension&
InvokeRequest::_Internal::http_extension(const InvokeRequest* msg) {
  return *msg->http_extension_;
}
void InvokeRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
InvokeRequest::InvokeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.InvokeRequest)
}
InvokeRequest::InvokeRequest(const InvokeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content_type().empty()) {
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content_type(),
      GetArena());
  }
  if (from._internal_has_data()) {
    data_ = new PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from._internal_has_http_extension()) {
    http_extension_ = new ::dapr::proto::common::v1::HTTPExtension(*from.http_extension_);
  } else {
    http_extension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.InvokeRequest)
}

void InvokeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_extension_) -
      reinterpret_cast<char*>(&data_)) + sizeof(http_extension_));
}

InvokeRequest::~InvokeRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.InvokeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete http_extension_;
}

void InvokeRequest::ArenaDtor(void* object) {
  InvokeRequest* _this = reinterpret_cast< InvokeRequest* >(object);
  (void)_this;
}
void InvokeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeRequest& InvokeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void InvokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.InvokeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  if (GetArena() == nullptr && http_extension_ != nullptr) {
    delete http_extension_;
  }
  http_extension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.InvokeRequest.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.InvokeRequest.content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.HTTPExtension http_extension = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_http_extension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.InvokeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.InvokeRequest.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.InvokeRequest.content_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content_type(), target);
  }

  // .dapr.proto.common.v1.HTTPExtension http_extension = 4;
  if (this->has_http_extension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::http_extension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.InvokeRequest)
  return target;
}

size_t InvokeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.InvokeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .dapr.proto.common.v1.HTTPExtension http_extension = 4;
  if (this->has_http_extension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *http_extension_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.InvokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.InvokeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.InvokeRequest)
    MergeFrom(*source);
  }
}

void InvokeRequest::MergeFrom(const InvokeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.InvokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.content_type().size() > 0) {
    _internal_set_content_type(from._internal_content_type());
  }
  if (from.has_data()) {
    _internal_mutable_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  if (from.has_http_extension()) {
    _internal_mutable_http_extension()->::dapr::proto::common::v1::HTTPExtension::MergeFrom(from._internal_http_extension());
  }
}

void InvokeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.InvokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeRequest::CopyFrom(const InvokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.InvokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeRequest::IsInitialized() const {
  return true;
}

void InvokeRequest::InternalSwap(InvokeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.Swap(&other->content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeRequest, http_extension_)
      + sizeof(InvokeRequest::http_extension_)
      - PROTOBUF_FIELD_OFFSET(InvokeRequest, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InvokeResponse::InitAsDefaultInstance() {
  ::dapr::proto::common::v1::_InvokeResponse_default_instance_._instance.get_mutable()->data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class InvokeResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& data(const InvokeResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
InvokeResponse::_Internal::data(const InvokeResponse* msg) {
  return *msg->data_;
}
void InvokeResponse::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
InvokeResponse::InvokeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.InvokeResponse)
}
InvokeResponse::InvokeResponse(const InvokeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content_type().empty()) {
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content_type(),
      GetArena());
  }
  if (from._internal_has_data()) {
    data_ = new PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.InvokeResponse)
}

void InvokeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeResponse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_ = nullptr;
}

InvokeResponse::~InvokeResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.InvokeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void InvokeResponse::ArenaDtor(void* object) {
  InvokeResponse* _this = reinterpret_cast< InvokeResponse* >(object);
  (void)_this;
}
void InvokeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeResponse& InvokeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeResponse_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void InvokeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.InvokeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.InvokeResponse.content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.InvokeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // string content_type = 2;
  if (this->content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.InvokeResponse.content_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.InvokeResponse)
  return target;
}

size_t InvokeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.InvokeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content_type = 2;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.InvokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.InvokeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.InvokeResponse)
    MergeFrom(*source);
  }
}

void InvokeResponse::MergeFrom(const InvokeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.InvokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content_type().size() > 0) {
    _internal_set_content_type(from._internal_content_type());
  }
  if (from.has_data()) {
    _internal_mutable_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
}

void InvokeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.InvokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeResponse::CopyFrom(const InvokeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.InvokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeResponse::IsInitialized() const {
  return true;
}

void InvokeResponse::InternalSwap(InvokeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  content_type_.Swap(&other->content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamPayload::InitAsDefaultInstance() {
}
class StreamPayload::_Internal {
 public:
};

StreamPayload::StreamPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.StreamPayload)
}
StreamPayload::StreamPayload(const StreamPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.StreamPayload)
}

void StreamPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seq_ = PROTOBUF_ULONGLONG(0);
}

StreamPayload::~StreamPayload() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.StreamPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamPayload::ArenaDtor(void* object) {
  StreamPayload* _this = reinterpret_cast< StreamPayload* >(object);
  (void)_this;
}
void StreamPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamPayload& StreamPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void StreamPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.StreamPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  seq_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 seq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.StreamPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // uint64 seq = 2;
  if (this->seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_seq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.StreamPayload)
  return target;
}

size_t StreamPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.StreamPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint64 seq = 2;
  if (this->seq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_seq());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.StreamPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.StreamPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.StreamPayload)
    MergeFrom(*source);
  }
}

void StreamPayload::MergeFrom(const StreamPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.StreamPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
}

void StreamPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.StreamPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamPayload::CopyFrom(const StreamPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.StreamPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamPayload::IsInitialized() const {
  return true;
}

void StreamPayload::InternalSwap(StreamPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(seq_, other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StateItem_MetadataEntry_DoNotUse::StateItem_MetadataEntry_DoNotUse() {}
StateItem_MetadataEntry_DoNotUse::StateItem_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StateItem_MetadataEntry_DoNotUse::MergeFrom(const StateItem_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StateItem_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void StateItem_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void StateItem::InitAsDefaultInstance() {
  ::dapr::proto::common::v1::_StateItem_default_instance_._instance.get_mutable()->etag_ = const_cast< ::dapr::proto::common::v1::Etag*>(
      ::dapr::proto::common::v1::Etag::internal_default_instance());
  ::dapr::proto::common::v1::_StateItem_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::proto::common::v1::StateOptions*>(
      ::dapr::proto::common::v1::StateOptions::internal_default_instance());
}
class StateItem::_Internal {
 public:
  static const ::dapr::proto::common::v1::Etag& etag(const StateItem* msg);
  static const ::dapr::proto::common::v1::StateOptions& options(const StateItem* msg);
};

const ::dapr::proto::common::v1::Etag&
StateItem::_Internal::etag(const StateItem* msg) {
  return *msg->etag_;
}
const ::dapr::proto::common::v1::StateOptions&
StateItem::_Internal::options(const StateItem* msg) {
  return *msg->options_;
}
StateItem::StateItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.StateItem)
}
StateItem::StateItem(const StateItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  if (from._internal_has_etag()) {
    etag_ = new ::dapr::proto::common::v1::Etag(*from.etag_);
  } else {
    etag_ = nullptr;
  }
  if (from._internal_has_options()) {
    options_ = new ::dapr::proto::common::v1::StateOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.StateItem)
}

void StateItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&etag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&etag_)) + sizeof(options_));
}

StateItem::~StateItem() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.StateItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete etag_;
  if (this != internal_default_instance()) delete options_;
}

void StateItem::ArenaDtor(void* object) {
  StateItem* _this = reinterpret_cast< StateItem* >(object);
  (void)_this;
}
void StateItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateItem& StateItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void StateItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.StateItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && etag_ != nullptr) {
    delete etag_;
  }
  etag_ = nullptr;
  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.StateItem.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.Etag etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_etag(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StateOptions options = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.StateItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.StateItem.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  // .dapr.proto.common.v1.Etag etag = 3;
  if (this->has_etag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::etag(this), target, stream);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.common.v1.StateItem.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.common.v1.StateItem.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = StateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .dapr.proto.common.v1.StateOptions options = 5;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.StateItem)
  return target;
}

size_t StateItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.StateItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += StateItem_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // .dapr.proto.common.v1.Etag etag = 3;
  if (this->has_etag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *etag_);
  }

  // .dapr.proto.common.v1.StateOptions options = 5;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.StateItem)
  GOOGLE_DCHECK_NE(&from, this);
  const StateItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.StateItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.StateItem)
    MergeFrom(*source);
  }
}

void StateItem::MergeFrom(const StateItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.StateItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.has_etag()) {
    _internal_mutable_etag()->::dapr::proto::common::v1::Etag::MergeFrom(from._internal_etag());
  }
  if (from.has_options()) {
    _internal_mutable_options()->::dapr::proto::common::v1::StateOptions::MergeFrom(from._internal_options());
  }
}

void StateItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.StateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateItem::CopyFrom(const StateItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.StateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateItem::IsInitialized() const {
  return true;
}

void StateItem::InternalSwap(StateItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateItem, options_)
      + sizeof(StateItem::options_)
      - PROTOBUF_FIELD_OFFSET(StateItem, etag_)>(
          reinterpret_cast<char*>(&etag_),
          reinterpret_cast<char*>(&other->etag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StateItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Etag::InitAsDefaultInstance() {
}
class Etag::_Internal {
 public:
};

Etag::Etag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.Etag)
}
Etag::Etag(const Etag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.Etag)
}

void Etag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Etag::~Etag() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.Etag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Etag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Etag::ArenaDtor(void* object) {
  Etag* _this = reinterpret_cast< Etag* >(object);
  (void)_this;
}
void Etag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Etag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Etag& Etag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void Etag::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.Etag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Etag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.Etag.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Etag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.Etag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.Etag.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.Etag)
  return target;
}

size_t Etag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.Etag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Etag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.Etag)
  GOOGLE_DCHECK_NE(&from, this);
  const Etag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Etag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.Etag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.Etag)
    MergeFrom(*source);
  }
}

void Etag::MergeFrom(const Etag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.Etag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void Etag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.Etag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Etag::CopyFrom(const Etag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.Etag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Etag::IsInitialized() const {
  return true;
}

void Etag::InternalSwap(Etag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Etag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StateOptions::InitAsDefaultInstance() {
}
class StateOptions::_Internal {
 public:
};

StateOptions::StateOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.StateOptions)
}
StateOptions::StateOptions(const StateOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&concurrency_, &from.concurrency_,
    static_cast<size_t>(reinterpret_cast<char*>(&consistency_) -
    reinterpret_cast<char*>(&concurrency_)) + sizeof(consistency_));
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.StateOptions)
}

void StateOptions::SharedCtor() {
  ::memset(&concurrency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consistency_) -
      reinterpret_cast<char*>(&concurrency_)) + sizeof(consistency_));
}

StateOptions::~StateOptions() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.StateOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StateOptions::ArenaDtor(void* object) {
  StateOptions* _this = reinterpret_cast< StateOptions* >(object);
  (void)_this;
}
void StateOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateOptions& StateOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void StateOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.StateOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&concurrency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consistency_) -
      reinterpret_cast<char*>(&concurrency_)) + sizeof(consistency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.common.v1.StateOptions.StateConcurrency concurrency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_concurrency(static_cast<::dapr::proto::common::v1::StateOptions_StateConcurrency>(val));
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_consistency(static_cast<::dapr::proto::common::v1::StateOptions_StateConsistency>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.StateOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.common.v1.StateOptions.StateConcurrency concurrency = 1;
  if (this->concurrency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_concurrency(), target);
  }

  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 2;
  if (this->consistency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_consistency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.StateOptions)
  return target;
}

size_t StateOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.StateOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.common.v1.StateOptions.StateConcurrency concurrency = 1;
  if (this->concurrency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_concurrency());
  }

  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 2;
  if (this->consistency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_consistency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.StateOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const StateOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.StateOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.StateOptions)
    MergeFrom(*source);
  }
}

void StateOptions::MergeFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.StateOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.concurrency() != 0) {
    _internal_set_concurrency(from._internal_concurrency());
  }
  if (from.consistency() != 0) {
    _internal_set_consistency(from._internal_consistency());
  }
}

void StateOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateOptions::CopyFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateOptions::IsInitialized() const {
  return true;
}

void StateOptions::InternalSwap(StateOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateOptions, consistency_)
      + sizeof(StateOptions::consistency_)
      - PROTOBUF_FIELD_OFFSET(StateOptions, concurrency_)>(
          reinterpret_cast<char*>(&concurrency_),
          reinterpret_cast<char*>(&other->concurrency_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StateOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ConfigurationItem_MetadataEntry_DoNotUse::ConfigurationItem_MetadataEntry_DoNotUse() {}
ConfigurationItem_MetadataEntry_DoNotUse::ConfigurationItem_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ConfigurationItem_MetadataEntry_DoNotUse::MergeFrom(const ConfigurationItem_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationItem_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ConfigurationItem_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ConfigurationItem::InitAsDefaultInstance() {
}
class ConfigurationItem::_Internal {
 public:
};

ConfigurationItem::ConfigurationItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.common.v1.ConfigurationItem)
}
ConfigurationItem::ConfigurationItem(const ConfigurationItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.common.v1.ConfigurationItem)
}

void ConfigurationItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConfigurationItem::~ConfigurationItem() {
  // @@protoc_insertion_point(destructor:dapr.proto.common.v1.ConfigurationItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigurationItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigurationItem::ArenaDtor(void* object) {
  ConfigurationItem* _this = reinterpret_cast< ConfigurationItem* >(object);
  (void)_this;
}
void ConfigurationItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigurationItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigurationItem& ConfigurationItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base);
  return *internal_default_instance();
}


void ConfigurationItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.common.v1.ConfigurationItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigurationItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.ConfigurationItem.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.common.v1.ConfigurationItem.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigurationItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.common.v1.ConfigurationItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.ConfigurationItem.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.common.v1.ConfigurationItem.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.common.v1.ConfigurationItem.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.common.v1.ConfigurationItem.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ConfigurationItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = ConfigurationItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.common.v1.ConfigurationItem)
  return target;
}

size_t ConfigurationItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.common.v1.ConfigurationItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += ConfigurationItem_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigurationItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.common.v1.ConfigurationItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigurationItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigurationItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.common.v1.ConfigurationItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.common.v1.ConfigurationItem)
    MergeFrom(*source);
  }
}

void ConfigurationItem::MergeFrom(const ConfigurationItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.common.v1.ConfigurationItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ConfigurationItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.common.v1.ConfigurationItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationItem::CopyFrom(const ConfigurationItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.common.v1.ConfigurationItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationItem::IsInitialized() const {
  return true;
}

void ConfigurationItem::InternalSwap(ConfigurationItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationItem::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
}  // namespace proto
}  // namespace dapr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::HTTPExtension* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::HTTPExtension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::HTTPExtension >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::InvokeRequest* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::InvokeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::InvokeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::InvokeResponse* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::InvokeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::InvokeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::StreamPayload* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::StreamPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::StreamPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::StateItem_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::StateItem* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::StateItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::StateItem >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::Etag* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::Etag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::Etag >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::StateOptions* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::StateOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::StateOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::ConfigurationItem_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::common::v1::ConfigurationItem* Arena::CreateMaybeMessage< ::dapr::proto::common::v1::ConfigurationItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::common::v1::ConfigurationItem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
