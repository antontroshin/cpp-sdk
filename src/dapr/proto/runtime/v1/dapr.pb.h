// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/runtime/v1/dapr.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "dapr/proto/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
class ActiveActorsCount;
struct ActiveActorsCountDefaultTypeInternal;
extern ActiveActorsCountDefaultTypeInternal _ActiveActorsCount_default_instance_;
class ActorRuntime;
struct ActorRuntimeDefaultTypeInternal;
extern ActorRuntimeDefaultTypeInternal _ActorRuntime_default_instance_;
class AppConnectionHealthProperties;
struct AppConnectionHealthPropertiesDefaultTypeInternal;
extern AppConnectionHealthPropertiesDefaultTypeInternal _AppConnectionHealthProperties_default_instance_;
class AppConnectionProperties;
struct AppConnectionPropertiesDefaultTypeInternal;
extern AppConnectionPropertiesDefaultTypeInternal _AppConnectionProperties_default_instance_;
class BulkPublishRequest;
struct BulkPublishRequestDefaultTypeInternal;
extern BulkPublishRequestDefaultTypeInternal _BulkPublishRequest_default_instance_;
class BulkPublishRequestEntry;
struct BulkPublishRequestEntryDefaultTypeInternal;
extern BulkPublishRequestEntryDefaultTypeInternal _BulkPublishRequestEntry_default_instance_;
class BulkPublishRequestEntry_MetadataEntry_DoNotUse;
struct BulkPublishRequestEntry_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkPublishRequestEntry_MetadataEntry_DoNotUseDefaultTypeInternal _BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_;
class BulkPublishRequest_MetadataEntry_DoNotUse;
struct BulkPublishRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkPublishRequest_MetadataEntry_DoNotUseDefaultTypeInternal _BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_;
class BulkPublishResponse;
struct BulkPublishResponseDefaultTypeInternal;
extern BulkPublishResponseDefaultTypeInternal _BulkPublishResponse_default_instance_;
class BulkPublishResponseFailedEntry;
struct BulkPublishResponseFailedEntryDefaultTypeInternal;
extern BulkPublishResponseFailedEntryDefaultTypeInternal _BulkPublishResponseFailedEntry_default_instance_;
class BulkStateItem;
struct BulkStateItemDefaultTypeInternal;
extern BulkStateItemDefaultTypeInternal _BulkStateItem_default_instance_;
class BulkStateItem_MetadataEntry_DoNotUse;
struct BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal _BulkStateItem_MetadataEntry_DoNotUse_default_instance_;
class DecryptRequest;
struct DecryptRequestDefaultTypeInternal;
extern DecryptRequestDefaultTypeInternal _DecryptRequest_default_instance_;
class DecryptRequestOptions;
struct DecryptRequestOptionsDefaultTypeInternal;
extern DecryptRequestOptionsDefaultTypeInternal _DecryptRequestOptions_default_instance_;
class DecryptResponse;
struct DecryptResponseDefaultTypeInternal;
extern DecryptResponseDefaultTypeInternal _DecryptResponse_default_instance_;
class DeleteBulkStateRequest;
struct DeleteBulkStateRequestDefaultTypeInternal;
extern DeleteBulkStateRequestDefaultTypeInternal _DeleteBulkStateRequest_default_instance_;
class DeleteStateRequest;
struct DeleteStateRequestDefaultTypeInternal;
extern DeleteStateRequestDefaultTypeInternal _DeleteStateRequest_default_instance_;
class DeleteStateRequest_MetadataEntry_DoNotUse;
struct DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_;
class EncryptRequest;
struct EncryptRequestDefaultTypeInternal;
extern EncryptRequestDefaultTypeInternal _EncryptRequest_default_instance_;
class EncryptRequestOptions;
struct EncryptRequestOptionsDefaultTypeInternal;
extern EncryptRequestOptionsDefaultTypeInternal _EncryptRequestOptions_default_instance_;
class EncryptResponse;
struct EncryptResponseDefaultTypeInternal;
extern EncryptResponseDefaultTypeInternal _EncryptResponse_default_instance_;
class ExecuteActorStateTransactionRequest;
struct ExecuteActorStateTransactionRequestDefaultTypeInternal;
extern ExecuteActorStateTransactionRequestDefaultTypeInternal _ExecuteActorStateTransactionRequest_default_instance_;
class ExecuteStateTransactionRequest;
struct ExecuteStateTransactionRequestDefaultTypeInternal;
extern ExecuteStateTransactionRequestDefaultTypeInternal _ExecuteStateTransactionRequest_default_instance_;
class ExecuteStateTransactionRequest_MetadataEntry_DoNotUse;
struct ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal _ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_;
class GetActorStateRequest;
struct GetActorStateRequestDefaultTypeInternal;
extern GetActorStateRequestDefaultTypeInternal _GetActorStateRequest_default_instance_;
class GetActorStateResponse;
struct GetActorStateResponseDefaultTypeInternal;
extern GetActorStateResponseDefaultTypeInternal _GetActorStateResponse_default_instance_;
class GetActorStateResponse_MetadataEntry_DoNotUse;
struct GetActorStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetActorStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetActorStateResponse_MetadataEntry_DoNotUse_default_instance_;
class GetBulkSecretRequest;
struct GetBulkSecretRequestDefaultTypeInternal;
extern GetBulkSecretRequestDefaultTypeInternal _GetBulkSecretRequest_default_instance_;
class GetBulkSecretRequest_MetadataEntry_DoNotUse;
struct GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkSecretResponse;
struct GetBulkSecretResponseDefaultTypeInternal;
extern GetBulkSecretResponseDefaultTypeInternal _GetBulkSecretResponse_default_instance_;
class GetBulkSecretResponse_DataEntry_DoNotUse;
struct GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal _GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetBulkStateRequest;
struct GetBulkStateRequestDefaultTypeInternal;
extern GetBulkStateRequestDefaultTypeInternal _GetBulkStateRequest_default_instance_;
class GetBulkStateRequest_MetadataEntry_DoNotUse;
struct GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkStateResponse;
struct GetBulkStateResponseDefaultTypeInternal;
extern GetBulkStateResponseDefaultTypeInternal _GetBulkStateResponse_default_instance_;
class GetConfigurationRequest;
struct GetConfigurationRequestDefaultTypeInternal;
extern GetConfigurationRequestDefaultTypeInternal _GetConfigurationRequest_default_instance_;
class GetConfigurationRequest_MetadataEntry_DoNotUse;
struct GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
class GetConfigurationResponse;
struct GetConfigurationResponseDefaultTypeInternal;
extern GetConfigurationResponseDefaultTypeInternal _GetConfigurationResponse_default_instance_;
class GetConfigurationResponse_ItemsEntry_DoNotUse;
struct GetConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal;
extern GetConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal _GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
class GetMetadataRequest;
struct GetMetadataRequestDefaultTypeInternal;
extern GetMetadataRequestDefaultTypeInternal _GetMetadataRequest_default_instance_;
class GetMetadataResponse;
struct GetMetadataResponseDefaultTypeInternal;
extern GetMetadataResponseDefaultTypeInternal _GetMetadataResponse_default_instance_;
class GetMetadataResponse_ExtendedMetadataEntry_DoNotUse;
struct GetMetadataResponse_ExtendedMetadataEntry_DoNotUseDefaultTypeInternal;
extern GetMetadataResponse_ExtendedMetadataEntry_DoNotUseDefaultTypeInternal _GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_;
class GetSecretRequest;
struct GetSecretRequestDefaultTypeInternal;
extern GetSecretRequestDefaultTypeInternal _GetSecretRequest_default_instance_;
class GetSecretRequest_MetadataEntry_DoNotUse;
struct GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetSecretResponse;
struct GetSecretResponseDefaultTypeInternal;
extern GetSecretResponseDefaultTypeInternal _GetSecretResponse_default_instance_;
class GetSecretResponse_DataEntry_DoNotUse;
struct GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal _GetSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetStateRequest;
struct GetStateRequestDefaultTypeInternal;
extern GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
class GetStateRequest_MetadataEntry_DoNotUse;
struct GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetStateResponse;
struct GetStateResponseDefaultTypeInternal;
extern GetStateResponseDefaultTypeInternal _GetStateResponse_default_instance_;
class GetStateResponse_MetadataEntry_DoNotUse;
struct GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateResponse_MetadataEntry_DoNotUse_default_instance_;
class GetWorkflowRequest;
struct GetWorkflowRequestDefaultTypeInternal;
extern GetWorkflowRequestDefaultTypeInternal _GetWorkflowRequest_default_instance_;
class GetWorkflowResponse;
struct GetWorkflowResponseDefaultTypeInternal;
extern GetWorkflowResponseDefaultTypeInternal _GetWorkflowResponse_default_instance_;
class GetWorkflowResponse_PropertiesEntry_DoNotUse;
struct GetWorkflowResponse_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern GetWorkflowResponse_PropertiesEntry_DoNotUseDefaultTypeInternal _GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_;
class InvokeActorRequest;
struct InvokeActorRequestDefaultTypeInternal;
extern InvokeActorRequestDefaultTypeInternal _InvokeActorRequest_default_instance_;
class InvokeActorRequest_MetadataEntry_DoNotUse;
struct InvokeActorRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeActorRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeActorResponse;
struct InvokeActorResponseDefaultTypeInternal;
extern InvokeActorResponseDefaultTypeInternal _InvokeActorResponse_default_instance_;
class InvokeBindingRequest;
struct InvokeBindingRequestDefaultTypeInternal;
extern InvokeBindingRequestDefaultTypeInternal _InvokeBindingRequest_default_instance_;
class InvokeBindingRequest_MetadataEntry_DoNotUse;
struct InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingResponse;
struct InvokeBindingResponseDefaultTypeInternal;
extern InvokeBindingResponseDefaultTypeInternal _InvokeBindingResponse_default_instance_;
class InvokeBindingResponse_MetadataEntry_DoNotUse;
struct InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceRequest;
struct InvokeServiceRequestDefaultTypeInternal;
extern InvokeServiceRequestDefaultTypeInternal _InvokeServiceRequest_default_instance_;
class MetadataHTTPEndpoint;
struct MetadataHTTPEndpointDefaultTypeInternal;
extern MetadataHTTPEndpointDefaultTypeInternal _MetadataHTTPEndpoint_default_instance_;
class PauseWorkflowRequest;
struct PauseWorkflowRequestDefaultTypeInternal;
extern PauseWorkflowRequestDefaultTypeInternal _PauseWorkflowRequest_default_instance_;
class PublishEventRequest;
struct PublishEventRequestDefaultTypeInternal;
extern PublishEventRequestDefaultTypeInternal _PublishEventRequest_default_instance_;
class PublishEventRequest_MetadataEntry_DoNotUse;
struct PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal _PublishEventRequest_MetadataEntry_DoNotUse_default_instance_;
class PubsubSubscription;
struct PubsubSubscriptionDefaultTypeInternal;
extern PubsubSubscriptionDefaultTypeInternal _PubsubSubscription_default_instance_;
class PubsubSubscriptionRule;
struct PubsubSubscriptionRuleDefaultTypeInternal;
extern PubsubSubscriptionRuleDefaultTypeInternal _PubsubSubscriptionRule_default_instance_;
class PubsubSubscriptionRules;
struct PubsubSubscriptionRulesDefaultTypeInternal;
extern PubsubSubscriptionRulesDefaultTypeInternal _PubsubSubscriptionRules_default_instance_;
class PubsubSubscription_MetadataEntry_DoNotUse;
struct PubsubSubscription_MetadataEntry_DoNotUseDefaultTypeInternal;
extern PubsubSubscription_MetadataEntry_DoNotUseDefaultTypeInternal _PubsubSubscription_MetadataEntry_DoNotUse_default_instance_;
class PurgeWorkflowRequest;
struct PurgeWorkflowRequestDefaultTypeInternal;
extern PurgeWorkflowRequestDefaultTypeInternal _PurgeWorkflowRequest_default_instance_;
class QueryStateItem;
struct QueryStateItemDefaultTypeInternal;
extern QueryStateItemDefaultTypeInternal _QueryStateItem_default_instance_;
class QueryStateRequest;
struct QueryStateRequestDefaultTypeInternal;
extern QueryStateRequestDefaultTypeInternal _QueryStateRequest_default_instance_;
class QueryStateRequest_MetadataEntry_DoNotUse;
struct QueryStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern QueryStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _QueryStateRequest_MetadataEntry_DoNotUse_default_instance_;
class QueryStateResponse;
struct QueryStateResponseDefaultTypeInternal;
extern QueryStateResponseDefaultTypeInternal _QueryStateResponse_default_instance_;
class QueryStateResponse_MetadataEntry_DoNotUse;
struct QueryStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern QueryStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _QueryStateResponse_MetadataEntry_DoNotUse_default_instance_;
class RaiseEventWorkflowRequest;
struct RaiseEventWorkflowRequestDefaultTypeInternal;
extern RaiseEventWorkflowRequestDefaultTypeInternal _RaiseEventWorkflowRequest_default_instance_;
class RegisterActorReminderRequest;
struct RegisterActorReminderRequestDefaultTypeInternal;
extern RegisterActorReminderRequestDefaultTypeInternal _RegisterActorReminderRequest_default_instance_;
class RegisterActorTimerRequest;
struct RegisterActorTimerRequestDefaultTypeInternal;
extern RegisterActorTimerRequestDefaultTypeInternal _RegisterActorTimerRequest_default_instance_;
class RegisteredComponents;
struct RegisteredComponentsDefaultTypeInternal;
extern RegisteredComponentsDefaultTypeInternal _RegisteredComponents_default_instance_;
class ResumeWorkflowRequest;
struct ResumeWorkflowRequestDefaultTypeInternal;
extern ResumeWorkflowRequestDefaultTypeInternal _ResumeWorkflowRequest_default_instance_;
class SaveStateRequest;
struct SaveStateRequestDefaultTypeInternal;
extern SaveStateRequestDefaultTypeInternal _SaveStateRequest_default_instance_;
class SecretResponse;
struct SecretResponseDefaultTypeInternal;
extern SecretResponseDefaultTypeInternal _SecretResponse_default_instance_;
class SecretResponse_SecretsEntry_DoNotUse;
struct SecretResponse_SecretsEntry_DoNotUseDefaultTypeInternal;
extern SecretResponse_SecretsEntry_DoNotUseDefaultTypeInternal _SecretResponse_SecretsEntry_DoNotUse_default_instance_;
class SetMetadataRequest;
struct SetMetadataRequestDefaultTypeInternal;
extern SetMetadataRequestDefaultTypeInternal _SetMetadataRequest_default_instance_;
class ShutdownRequest;
struct ShutdownRequestDefaultTypeInternal;
extern ShutdownRequestDefaultTypeInternal _ShutdownRequest_default_instance_;
class StartWorkflowRequest;
struct StartWorkflowRequestDefaultTypeInternal;
extern StartWorkflowRequestDefaultTypeInternal _StartWorkflowRequest_default_instance_;
class StartWorkflowRequest_OptionsEntry_DoNotUse;
struct StartWorkflowRequest_OptionsEntry_DoNotUseDefaultTypeInternal;
extern StartWorkflowRequest_OptionsEntry_DoNotUseDefaultTypeInternal _StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_;
class StartWorkflowResponse;
struct StartWorkflowResponseDefaultTypeInternal;
extern StartWorkflowResponseDefaultTypeInternal _StartWorkflowResponse_default_instance_;
class SubscribeConfigurationRequest;
struct SubscribeConfigurationRequestDefaultTypeInternal;
extern SubscribeConfigurationRequestDefaultTypeInternal _SubscribeConfigurationRequest_default_instance_;
class SubscribeConfigurationRequest_MetadataEntry_DoNotUse;
struct SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
class SubscribeConfigurationResponse;
struct SubscribeConfigurationResponseDefaultTypeInternal;
extern SubscribeConfigurationResponseDefaultTypeInternal _SubscribeConfigurationResponse_default_instance_;
class SubscribeConfigurationResponse_ItemsEntry_DoNotUse;
struct SubscribeConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal;
extern SubscribeConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal _SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
class SubtleDecryptRequest;
struct SubtleDecryptRequestDefaultTypeInternal;
extern SubtleDecryptRequestDefaultTypeInternal _SubtleDecryptRequest_default_instance_;
class SubtleDecryptResponse;
struct SubtleDecryptResponseDefaultTypeInternal;
extern SubtleDecryptResponseDefaultTypeInternal _SubtleDecryptResponse_default_instance_;
class SubtleEncryptRequest;
struct SubtleEncryptRequestDefaultTypeInternal;
extern SubtleEncryptRequestDefaultTypeInternal _SubtleEncryptRequest_default_instance_;
class SubtleEncryptResponse;
struct SubtleEncryptResponseDefaultTypeInternal;
extern SubtleEncryptResponseDefaultTypeInternal _SubtleEncryptResponse_default_instance_;
class SubtleGetKeyRequest;
struct SubtleGetKeyRequestDefaultTypeInternal;
extern SubtleGetKeyRequestDefaultTypeInternal _SubtleGetKeyRequest_default_instance_;
class SubtleGetKeyResponse;
struct SubtleGetKeyResponseDefaultTypeInternal;
extern SubtleGetKeyResponseDefaultTypeInternal _SubtleGetKeyResponse_default_instance_;
class SubtleSignRequest;
struct SubtleSignRequestDefaultTypeInternal;
extern SubtleSignRequestDefaultTypeInternal _SubtleSignRequest_default_instance_;
class SubtleSignResponse;
struct SubtleSignResponseDefaultTypeInternal;
extern SubtleSignResponseDefaultTypeInternal _SubtleSignResponse_default_instance_;
class SubtleUnwrapKeyRequest;
struct SubtleUnwrapKeyRequestDefaultTypeInternal;
extern SubtleUnwrapKeyRequestDefaultTypeInternal _SubtleUnwrapKeyRequest_default_instance_;
class SubtleUnwrapKeyResponse;
struct SubtleUnwrapKeyResponseDefaultTypeInternal;
extern SubtleUnwrapKeyResponseDefaultTypeInternal _SubtleUnwrapKeyResponse_default_instance_;
class SubtleVerifyRequest;
struct SubtleVerifyRequestDefaultTypeInternal;
extern SubtleVerifyRequestDefaultTypeInternal _SubtleVerifyRequest_default_instance_;
class SubtleVerifyResponse;
struct SubtleVerifyResponseDefaultTypeInternal;
extern SubtleVerifyResponseDefaultTypeInternal _SubtleVerifyResponse_default_instance_;
class SubtleWrapKeyRequest;
struct SubtleWrapKeyRequestDefaultTypeInternal;
extern SubtleWrapKeyRequestDefaultTypeInternal _SubtleWrapKeyRequest_default_instance_;
class SubtleWrapKeyResponse;
struct SubtleWrapKeyResponseDefaultTypeInternal;
extern SubtleWrapKeyResponseDefaultTypeInternal _SubtleWrapKeyResponse_default_instance_;
class TerminateWorkflowRequest;
struct TerminateWorkflowRequestDefaultTypeInternal;
extern TerminateWorkflowRequestDefaultTypeInternal _TerminateWorkflowRequest_default_instance_;
class TransactionalActorStateOperation;
struct TransactionalActorStateOperationDefaultTypeInternal;
extern TransactionalActorStateOperationDefaultTypeInternal _TransactionalActorStateOperation_default_instance_;
class TransactionalActorStateOperation_MetadataEntry_DoNotUse;
struct TransactionalActorStateOperation_MetadataEntry_DoNotUseDefaultTypeInternal;
extern TransactionalActorStateOperation_MetadataEntry_DoNotUseDefaultTypeInternal _TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_;
class TransactionalStateOperation;
struct TransactionalStateOperationDefaultTypeInternal;
extern TransactionalStateOperationDefaultTypeInternal _TransactionalStateOperation_default_instance_;
class TryLockRequest;
struct TryLockRequestDefaultTypeInternal;
extern TryLockRequestDefaultTypeInternal _TryLockRequest_default_instance_;
class TryLockResponse;
struct TryLockResponseDefaultTypeInternal;
extern TryLockResponseDefaultTypeInternal _TryLockResponse_default_instance_;
class UnlockRequest;
struct UnlockRequestDefaultTypeInternal;
extern UnlockRequestDefaultTypeInternal _UnlockRequest_default_instance_;
class UnlockResponse;
struct UnlockResponseDefaultTypeInternal;
extern UnlockResponseDefaultTypeInternal _UnlockResponse_default_instance_;
class UnregisterActorReminderRequest;
struct UnregisterActorReminderRequestDefaultTypeInternal;
extern UnregisterActorReminderRequestDefaultTypeInternal _UnregisterActorReminderRequest_default_instance_;
class UnregisterActorTimerRequest;
struct UnregisterActorTimerRequestDefaultTypeInternal;
extern UnregisterActorTimerRequestDefaultTypeInternal _UnregisterActorTimerRequest_default_instance_;
class UnsubscribeConfigurationRequest;
struct UnsubscribeConfigurationRequestDefaultTypeInternal;
extern UnsubscribeConfigurationRequestDefaultTypeInternal _UnsubscribeConfigurationRequest_default_instance_;
class UnsubscribeConfigurationResponse;
struct UnsubscribeConfigurationResponseDefaultTypeInternal;
extern UnsubscribeConfigurationResponseDefaultTypeInternal _UnsubscribeConfigurationResponse_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
enum ActorRuntime_ActorRuntimeStatus : int {
  ActorRuntime_ActorRuntimeStatus_INITIALIZING = 0,
  ActorRuntime_ActorRuntimeStatus_DISABLED = 1,
  ActorRuntime_ActorRuntimeStatus_RUNNING = 2,
  ActorRuntime_ActorRuntimeStatus_ActorRuntime_ActorRuntimeStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ActorRuntime_ActorRuntimeStatus_ActorRuntime_ActorRuntimeStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ActorRuntime_ActorRuntimeStatus_IsValid(int value);
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime_ActorRuntimeStatus_ActorRuntimeStatus_MIN = static_cast<ActorRuntime_ActorRuntimeStatus>(0);
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime_ActorRuntimeStatus_ActorRuntimeStatus_MAX = static_cast<ActorRuntime_ActorRuntimeStatus>(2);
constexpr int ActorRuntime_ActorRuntimeStatus_ActorRuntimeStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ActorRuntime_ActorRuntimeStatus_descriptor();
template <typename T>
const std::string& ActorRuntime_ActorRuntimeStatus_Name(T value) {
  static_assert(std::is_same<T, ActorRuntime_ActorRuntimeStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ActorRuntimeStatus_Name().");
  return ActorRuntime_ActorRuntimeStatus_Name(static_cast<ActorRuntime_ActorRuntimeStatus>(value));
}
template <>
inline const std::string& ActorRuntime_ActorRuntimeStatus_Name(ActorRuntime_ActorRuntimeStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ActorRuntime_ActorRuntimeStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ActorRuntime_ActorRuntimeStatus_Parse(absl::string_view name, ActorRuntime_ActorRuntimeStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActorRuntime_ActorRuntimeStatus>(
      ActorRuntime_ActorRuntimeStatus_descriptor(), name, value);
}
enum UnlockResponse_Status : int {
  UnlockResponse_Status_SUCCESS = 0,
  UnlockResponse_Status_LOCK_DOES_NOT_EXIST = 1,
  UnlockResponse_Status_LOCK_BELONGS_TO_OTHERS = 2,
  UnlockResponse_Status_INTERNAL_ERROR = 3,
  UnlockResponse_Status_UnlockResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UnlockResponse_Status_UnlockResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UnlockResponse_Status_IsValid(int value);
constexpr UnlockResponse_Status UnlockResponse_Status_Status_MIN = static_cast<UnlockResponse_Status>(0);
constexpr UnlockResponse_Status UnlockResponse_Status_Status_MAX = static_cast<UnlockResponse_Status>(3);
constexpr int UnlockResponse_Status_Status_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
UnlockResponse_Status_descriptor();
template <typename T>
const std::string& UnlockResponse_Status_Name(T value) {
  static_assert(std::is_same<T, UnlockResponse_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return UnlockResponse_Status_Name(static_cast<UnlockResponse_Status>(value));
}
template <>
inline const std::string& UnlockResponse_Status_Name(UnlockResponse_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UnlockResponse_Status_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool UnlockResponse_Status_Parse(absl::string_view name, UnlockResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockResponse_Status>(
      UnlockResponse_Status_descriptor(), name, value);
}
enum SubtleGetKeyRequest_KeyFormat : int {
  SubtleGetKeyRequest_KeyFormat_PEM = 0,
  SubtleGetKeyRequest_KeyFormat_JSON = 1,
  SubtleGetKeyRequest_KeyFormat_SubtleGetKeyRequest_KeyFormat_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SubtleGetKeyRequest_KeyFormat_SubtleGetKeyRequest_KeyFormat_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SubtleGetKeyRequest_KeyFormat_IsValid(int value);
constexpr SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest_KeyFormat_KeyFormat_MIN = static_cast<SubtleGetKeyRequest_KeyFormat>(0);
constexpr SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest_KeyFormat_KeyFormat_MAX = static_cast<SubtleGetKeyRequest_KeyFormat>(1);
constexpr int SubtleGetKeyRequest_KeyFormat_KeyFormat_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
SubtleGetKeyRequest_KeyFormat_descriptor();
template <typename T>
const std::string& SubtleGetKeyRequest_KeyFormat_Name(T value) {
  static_assert(std::is_same<T, SubtleGetKeyRequest_KeyFormat>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to KeyFormat_Name().");
  return SubtleGetKeyRequest_KeyFormat_Name(static_cast<SubtleGetKeyRequest_KeyFormat>(value));
}
template <>
inline const std::string& SubtleGetKeyRequest_KeyFormat_Name(SubtleGetKeyRequest_KeyFormat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SubtleGetKeyRequest_KeyFormat_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool SubtleGetKeyRequest_KeyFormat_Parse(absl::string_view name, SubtleGetKeyRequest_KeyFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubtleGetKeyRequest_KeyFormat>(
      SubtleGetKeyRequest_KeyFormat_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class InvokeServiceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeServiceRequest) */ {
 public:
  inline InvokeServiceRequest() : InvokeServiceRequest(nullptr) {}
  ~InvokeServiceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeServiceRequest(::google::protobuf::internal::ConstantInitialized);

  InvokeServiceRequest(const InvokeServiceRequest& from);
  InvokeServiceRequest(InvokeServiceRequest&& from) noexcept
    : InvokeServiceRequest() {
    *this = ::std::move(from);
  }

  inline InvokeServiceRequest& operator=(const InvokeServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvokeServiceRequest& operator=(InvokeServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvokeServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvokeServiceRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeServiceRequest*>(
               &_InvokeServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InvokeServiceRequest& a, InvokeServiceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InvokeServiceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvokeServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvokeServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvokeServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvokeServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvokeServiceRequest& from) {
    InvokeServiceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeServiceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.InvokeServiceRequest";
  }
  protected:
  explicit InvokeServiceRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kMessageFieldNumber = 3,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .dapr.proto.common.v1.InvokeRequest message = 3;
  bool has_message() const;
  void clear_message() ;
  const ::dapr::proto::common::v1::InvokeRequest& message() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::InvokeRequest* release_message();
  ::dapr::proto::common::v1::InvokeRequest* mutable_message();
  void set_allocated_message(::dapr::proto::common::v1::InvokeRequest* value);
  void unsafe_arena_set_allocated_message(::dapr::proto::common::v1::InvokeRequest* value);
  ::dapr::proto::common::v1::InvokeRequest* unsafe_arena_release_message();

  private:
  const ::dapr::proto::common::v1::InvokeRequest& _internal_message() const;
  ::dapr::proto::common::v1::InvokeRequest* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeServiceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 2, 1, 53, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::dapr::proto::common::v1::InvokeRequest* message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetStateRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetStateRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStateRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetStateRequest_MetadataEntry_DoNotUse& other);
  static const GetStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetStateRequest_MetadataEntry_DoNotUse*>(&_GetStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetStateRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetStateRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetStateRequest) */ {
 public:
  inline GetStateRequest() : GetStateRequest(nullptr) {}
  ~GetStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStateRequest(::google::protobuf::internal::ConstantInitialized);

  GetStateRequest(const GetStateRequest& from);
  GetStateRequest(GetStateRequest&& from) noexcept
    : GetStateRequest() {
    *this = ::std::move(from);
  }

  inline GetStateRequest& operator=(const GetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStateRequest& operator=(GetStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetStateRequest*>(
               &_GetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetStateRequest& a, GetStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStateRequest& from) {
    GetStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetStateRequest";
  }
  protected:
  explicit GetStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 4,
    kStoreNameFieldNumber = 1,
    kKeyFieldNumber = 2,
    kConsistencyFieldNumber = 3,
  };
  // map<string, string> metadata = 4;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
  void clear_consistency() ;
  ::dapr::proto::common::v1::StateOptions_StateConsistency consistency() const;
  void set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value);

  private:
  ::dapr::proto::common::v1::StateOptions_StateConsistency _internal_consistency() const;
  void _internal_set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 67, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetStateRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    int consistency_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetBulkStateRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetBulkStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetBulkStateRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkStateRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetBulkStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkStateRequest_MetadataEntry_DoNotUse& other);
  static const GetBulkStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkStateRequest_MetadataEntry_DoNotUse*>(&_GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetBulkStateRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetBulkStateRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetBulkStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkStateRequest) */ {
 public:
  inline GetBulkStateRequest() : GetBulkStateRequest(nullptr) {}
  ~GetBulkStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkStateRequest(::google::protobuf::internal::ConstantInitialized);

  GetBulkStateRequest(const GetBulkStateRequest& from);
  GetBulkStateRequest(GetBulkStateRequest&& from) noexcept
    : GetBulkStateRequest() {
    *this = ::std::move(from);
  }

  inline GetBulkStateRequest& operator=(const GetBulkStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBulkStateRequest& operator=(GetBulkStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBulkStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBulkStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetBulkStateRequest*>(
               &_GetBulkStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetBulkStateRequest& a, GetBulkStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBulkStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBulkStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBulkStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetBulkStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBulkStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetBulkStateRequest& from) {
    GetBulkStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetBulkStateRequest";
  }
  protected:
  explicit GetBulkStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kMetadataFieldNumber = 4,
    kStoreNameFieldNumber = 1,
    kParallelismFieldNumber = 3,
  };
  // repeated string keys = 2;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  const std::string& keys(int index) const;
  std::string* mutable_keys(int index);
  void set_keys(int index, const std::string& value);
  void set_keys(int index, std::string&& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, std::size_t size);
  void set_keys(int index, absl::string_view value);
  std::string* add_keys();
  void add_keys(const std::string& value);
  void add_keys(std::string&& value);
  void add_keys(const char* value);
  void add_keys(const char* value, std::size_t size);
  void add_keys(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keys();

  public:
  // map<string, string> metadata = 4;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // int32 parallelism = 3;
  void clear_parallelism() ;
  ::int32_t parallelism() const;
  void set_parallelism(::int32_t value);

  private:
  ::int32_t _internal_parallelism() const;
  void _internal_set_parallelism(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 72, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> keys_;
    ::google::protobuf::internal::MapField<GetBulkStateRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::int32_t parallelism_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetBulkStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkStateResponse) */ {
 public:
  inline GetBulkStateResponse() : GetBulkStateResponse(nullptr) {}
  ~GetBulkStateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkStateResponse(::google::protobuf::internal::ConstantInitialized);

  GetBulkStateResponse(const GetBulkStateResponse& from);
  GetBulkStateResponse(GetBulkStateResponse&& from) noexcept
    : GetBulkStateResponse() {
    *this = ::std::move(from);
  }

  inline GetBulkStateResponse& operator=(const GetBulkStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBulkStateResponse& operator=(GetBulkStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBulkStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBulkStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetBulkStateResponse*>(
               &_GetBulkStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetBulkStateResponse& a, GetBulkStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBulkStateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBulkStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBulkStateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetBulkStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBulkStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetBulkStateResponse& from) {
    GetBulkStateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkStateResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetBulkStateResponse";
  }
  protected:
  explicit GetBulkStateResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::dapr::proto::runtime::v1::BulkStateItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkStateItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkStateItem>* _internal_mutable_items();
  public:
  const ::dapr::proto::runtime::v1::BulkStateItem& items(int index) const;
  ::dapr::proto::runtime::v1::BulkStateItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >&
      items() const;
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkStateResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class BulkStateItem_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<BulkStateItem_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkStateItem_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  BulkStateItem_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BulkStateItem_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BulkStateItem_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkStateItem_MetadataEntry_DoNotUse& other);
  static const BulkStateItem_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkStateItem_MetadataEntry_DoNotUse*>(&_BulkStateItem_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.BulkStateItem.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.BulkStateItem.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class BulkStateItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkStateItem) */ {
 public:
  inline BulkStateItem() : BulkStateItem(nullptr) {}
  ~BulkStateItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BulkStateItem(::google::protobuf::internal::ConstantInitialized);

  BulkStateItem(const BulkStateItem& from);
  BulkStateItem(BulkStateItem&& from) noexcept
    : BulkStateItem() {
    *this = ::std::move(from);
  }

  inline BulkStateItem& operator=(const BulkStateItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline BulkStateItem& operator=(BulkStateItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BulkStateItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const BulkStateItem* internal_default_instance() {
    return reinterpret_cast<const BulkStateItem*>(
               &_BulkStateItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BulkStateItem& a, BulkStateItem& b) {
    a.Swap(&b);
  }
  inline void Swap(BulkStateItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BulkStateItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BulkStateItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BulkStateItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BulkStateItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BulkStateItem& from) {
    BulkStateItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkStateItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.BulkStateItem";
  }
  protected:
  explicit BulkStateItem(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 5,
    kKeyFieldNumber = 1,
    kDataFieldNumber = 2,
    kEtagFieldNumber = 3,
    kErrorFieldNumber = 4,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string etag = 3;
  void clear_etag() ;
  const std::string& etag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_etag(Arg_&& arg, Args_... args);
  std::string* mutable_etag();
  PROTOBUF_NODISCARD std::string* release_etag();
  void set_allocated_etag(std::string* ptr);

  private:
  const std::string& _internal_etag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_etag(
      const std::string& value);
  std::string* _internal_mutable_etag();

  public:
  // string error = 4;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* ptr);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkStateItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 1, 64, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<BulkStateItem_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr etag_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetStateResponse_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetStateResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetStateResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetStateResponse_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStateResponse_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetStateResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetStateResponse_MetadataEntry_DoNotUse& other);
  static const GetStateResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetStateResponse_MetadataEntry_DoNotUse*>(&_GetStateResponse_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetStateResponse.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetStateResponse.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetStateResponse) */ {
 public:
  inline GetStateResponse() : GetStateResponse(nullptr) {}
  ~GetStateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStateResponse(::google::protobuf::internal::ConstantInitialized);

  GetStateResponse(const GetStateResponse& from);
  GetStateResponse(GetStateResponse&& from) noexcept
    : GetStateResponse() {
    *this = ::std::move(from);
  }

  inline GetStateResponse& operator=(const GetStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStateResponse& operator=(GetStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetStateResponse*>(
               &_GetStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetStateResponse& a, GetStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStateResponse& from) {
    GetStateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetStateResponse";
  }
  protected:
  explicit GetStateResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 3,
    kDataFieldNumber = 1,
    kEtagFieldNumber = 2,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string etag = 2;
  void clear_etag() ;
  const std::string& etag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_etag(Arg_&& arg, Args_... args);
  std::string* mutable_etag();
  PROTOBUF_NODISCARD std::string* release_etag();
  void set_allocated_etag(std::string* ptr);

  private:
  const std::string& _internal_etag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_etag(
      const std::string& value);
  std::string* _internal_mutable_etag();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetStateResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 1, 59, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetStateResponse_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr etag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class DeleteStateRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<DeleteStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<DeleteStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  DeleteStateRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteStateRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DeleteStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DeleteStateRequest_MetadataEntry_DoNotUse& other);
  static const DeleteStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DeleteStateRequest_MetadataEntry_DoNotUse*>(&_DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.DeleteStateRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.DeleteStateRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class DeleteStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DeleteStateRequest) */ {
 public:
  inline DeleteStateRequest() : DeleteStateRequest(nullptr) {}
  ~DeleteStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteStateRequest(::google::protobuf::internal::ConstantInitialized);

  DeleteStateRequest(const DeleteStateRequest& from);
  DeleteStateRequest(DeleteStateRequest&& from) noexcept
    : DeleteStateRequest() {
    *this = ::std::move(from);
  }

  inline DeleteStateRequest& operator=(const DeleteStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteStateRequest& operator=(DeleteStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteStateRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteStateRequest*>(
               &_DeleteStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DeleteStateRequest& a, DeleteStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteStateRequest& from) {
    DeleteStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.DeleteStateRequest";
  }
  protected:
  explicit DeleteStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 5,
    kStoreNameFieldNumber = 1,
    kKeyFieldNumber = 2,
    kEtagFieldNumber = 3,
    kOptionsFieldNumber = 4,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .dapr.proto.common.v1.Etag etag = 3;
  bool has_etag() const;
  void clear_etag() ;
  const ::dapr::proto::common::v1::Etag& etag() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::Etag* release_etag();
  ::dapr::proto::common::v1::Etag* mutable_etag();
  void set_allocated_etag(::dapr::proto::common::v1::Etag* value);
  void unsafe_arena_set_allocated_etag(::dapr::proto::common::v1::Etag* value);
  ::dapr::proto::common::v1::Etag* unsafe_arena_release_etag();

  private:
  const ::dapr::proto::common::v1::Etag& _internal_etag() const;
  ::dapr::proto::common::v1::Etag* _internal_mutable_etag();

  public:
  // .dapr.proto.common.v1.StateOptions options = 4;
  bool has_options() const;
  void clear_options() ;
  const ::dapr::proto::common::v1::StateOptions& options() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::StateOptions* release_options();
  ::dapr::proto::common::v1::StateOptions* mutable_options();
  void set_allocated_options(::dapr::proto::common::v1::StateOptions* value);
  void unsafe_arena_set_allocated_options(::dapr::proto::common::v1::StateOptions* value);
  ::dapr::proto::common::v1::StateOptions* unsafe_arena_release_options();

  private:
  const ::dapr::proto::common::v1::StateOptions& _internal_options() const;
  ::dapr::proto::common::v1::StateOptions* _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DeleteStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 3, 70, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<DeleteStateRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::dapr::proto::common::v1::Etag* etag_;
    ::dapr::proto::common::v1::StateOptions* options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class DeleteBulkStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DeleteBulkStateRequest) */ {
 public:
  inline DeleteBulkStateRequest() : DeleteBulkStateRequest(nullptr) {}
  ~DeleteBulkStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteBulkStateRequest(::google::protobuf::internal::ConstantInitialized);

  DeleteBulkStateRequest(const DeleteBulkStateRequest& from);
  DeleteBulkStateRequest(DeleteBulkStateRequest&& from) noexcept
    : DeleteBulkStateRequest() {
    *this = ::std::move(from);
  }

  inline DeleteBulkStateRequest& operator=(const DeleteBulkStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteBulkStateRequest& operator=(DeleteBulkStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteBulkStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteBulkStateRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBulkStateRequest*>(
               &_DeleteBulkStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DeleteBulkStateRequest& a, DeleteBulkStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteBulkStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteBulkStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteBulkStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteBulkStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteBulkStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteBulkStateRequest& from) {
    DeleteBulkStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteBulkStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.DeleteBulkStateRequest";
  }
  protected:
  explicit DeleteBulkStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 2,
    kStoreNameFieldNumber = 1,
  };
  // repeated .dapr.proto.common.v1.StateItem states = 2;
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  ::dapr::proto::common::v1::StateItem* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
      mutable_states();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>& _internal_states() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>* _internal_mutable_states();
  public:
  const ::dapr::proto::common::v1::StateItem& states(int index) const;
  ::dapr::proto::common::v1::StateItem* add_states();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
      states() const;
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DeleteBulkStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 63, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem > states_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SaveStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SaveStateRequest) */ {
 public:
  inline SaveStateRequest() : SaveStateRequest(nullptr) {}
  ~SaveStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SaveStateRequest(::google::protobuf::internal::ConstantInitialized);

  SaveStateRequest(const SaveStateRequest& from);
  SaveStateRequest(SaveStateRequest&& from) noexcept
    : SaveStateRequest() {
    *this = ::std::move(from);
  }

  inline SaveStateRequest& operator=(const SaveStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveStateRequest& operator=(SaveStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveStateRequest* internal_default_instance() {
    return reinterpret_cast<const SaveStateRequest*>(
               &_SaveStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SaveStateRequest& a, SaveStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SaveStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SaveStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SaveStateRequest& from) {
    SaveStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SaveStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SaveStateRequest";
  }
  protected:
  explicit SaveStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 2,
    kStoreNameFieldNumber = 1,
  };
  // repeated .dapr.proto.common.v1.StateItem states = 2;
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  ::dapr::proto::common::v1::StateItem* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
      mutable_states();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>& _internal_states() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>* _internal_mutable_states();
  public:
  const ::dapr::proto::common::v1::StateItem& states(int index) const;
  ::dapr::proto::common::v1::StateItem* add_states();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
      states() const;
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SaveStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem > states_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class QueryStateRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<QueryStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<QueryStateRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  QueryStateRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStateRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit QueryStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const QueryStateRequest_MetadataEntry_DoNotUse& other);
  static const QueryStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const QueryStateRequest_MetadataEntry_DoNotUse*>(&_QueryStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.QueryStateRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.QueryStateRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class QueryStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.QueryStateRequest) */ {
 public:
  inline QueryStateRequest() : QueryStateRequest(nullptr) {}
  ~QueryStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStateRequest(::google::protobuf::internal::ConstantInitialized);

  QueryStateRequest(const QueryStateRequest& from);
  QueryStateRequest(QueryStateRequest&& from) noexcept
    : QueryStateRequest() {
    *this = ::std::move(from);
  }

  inline QueryStateRequest& operator=(const QueryStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStateRequest& operator=(QueryStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStateRequest* internal_default_instance() {
    return reinterpret_cast<const QueryStateRequest*>(
               &_QueryStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(QueryStateRequest& a, QueryStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryStateRequest& from) {
    QueryStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.QueryStateRequest";
  }
  protected:
  explicit QueryStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 3,
    kStoreNameFieldNumber = 1,
    kQueryFieldNumber = 2,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1 [json_name = "storeName"];
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string query = 2;
  void clear_query() ;
  const std::string& query() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_query(Arg_&& arg, Args_... args);
  std::string* mutable_query();
  PROTOBUF_NODISCARD std::string* release_query();
  void set_allocated_query(std::string* ptr);

  private:
  const std::string& _internal_query() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query(
      const std::string& value);
  std::string* _internal_mutable_query();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.QueryStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 1, 71, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<QueryStateRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr query_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class QueryStateItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.QueryStateItem) */ {
 public:
  inline QueryStateItem() : QueryStateItem(nullptr) {}
  ~QueryStateItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStateItem(::google::protobuf::internal::ConstantInitialized);

  QueryStateItem(const QueryStateItem& from);
  QueryStateItem(QueryStateItem&& from) noexcept
    : QueryStateItem() {
    *this = ::std::move(from);
  }

  inline QueryStateItem& operator=(const QueryStateItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStateItem& operator=(QueryStateItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryStateItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStateItem* internal_default_instance() {
    return reinterpret_cast<const QueryStateItem*>(
               &_QueryStateItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(QueryStateItem& a, QueryStateItem& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStateItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStateItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryStateItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryStateItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryStateItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryStateItem& from) {
    QueryStateItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStateItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.QueryStateItem";
  }
  protected:
  explicit QueryStateItem(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kDataFieldNumber = 2,
    kEtagFieldNumber = 3,
    kErrorFieldNumber = 4,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string etag = 3;
  void clear_etag() ;
  const std::string& etag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_etag(Arg_&& arg, Args_... args);
  std::string* mutable_etag();
  PROTOBUF_NODISCARD std::string* release_etag();
  void set_allocated_etag(std::string* ptr);

  private:
  const std::string& _internal_etag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_etag(
      const std::string& value);
  std::string* _internal_mutable_etag();

  public:
  // string error = 4;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* ptr);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.QueryStateItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr etag_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class QueryStateResponse_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<QueryStateResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<QueryStateResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  QueryStateResponse_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStateResponse_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit QueryStateResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const QueryStateResponse_MetadataEntry_DoNotUse& other);
  static const QueryStateResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const QueryStateResponse_MetadataEntry_DoNotUse*>(&_QueryStateResponse_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.QueryStateResponse.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.QueryStateResponse.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class QueryStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.QueryStateResponse) */ {
 public:
  inline QueryStateResponse() : QueryStateResponse(nullptr) {}
  ~QueryStateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStateResponse(::google::protobuf::internal::ConstantInitialized);

  QueryStateResponse(const QueryStateResponse& from);
  QueryStateResponse(QueryStateResponse&& from) noexcept
    : QueryStateResponse() {
    *this = ::std::move(from);
  }

  inline QueryStateResponse& operator=(const QueryStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStateResponse& operator=(QueryStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStateResponse* internal_default_instance() {
    return reinterpret_cast<const QueryStateResponse*>(
               &_QueryStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(QueryStateResponse& a, QueryStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryStateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryStateResponse& from) {
    QueryStateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStateResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.QueryStateResponse";
  }
  protected:
  explicit QueryStateResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 1,
    kMetadataFieldNumber = 3,
    kTokenFieldNumber = 2,
  };
  // repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::dapr::proto::runtime::v1::QueryStateItem* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >*
      mutable_results();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::QueryStateItem>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::QueryStateItem>* _internal_mutable_results();
  public:
  const ::dapr::proto::runtime::v1::QueryStateItem& results(int index) const;
  ::dapr::proto::runtime::v1::QueryStateItem* add_results();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >&
      results() const;
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* ptr);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.QueryStateResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 2, 62, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem > results_;
    ::google::protobuf::internal::MapField<QueryStateResponse_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class PublishEventRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<PublishEventRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<PublishEventRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  PublishEventRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEventRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PublishEventRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PublishEventRequest_MetadataEntry_DoNotUse& other);
  static const PublishEventRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PublishEventRequest_MetadataEntry_DoNotUse*>(&_PublishEventRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.PublishEventRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.PublishEventRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class PublishEventRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PublishEventRequest) */ {
 public:
  inline PublishEventRequest() : PublishEventRequest(nullptr) {}
  ~PublishEventRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEventRequest(::google::protobuf::internal::ConstantInitialized);

  PublishEventRequest(const PublishEventRequest& from);
  PublishEventRequest(PublishEventRequest&& from) noexcept
    : PublishEventRequest() {
    *this = ::std::move(from);
  }

  inline PublishEventRequest& operator=(const PublishEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEventRequest& operator=(PublishEventRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEventRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishEventRequest* internal_default_instance() {
    return reinterpret_cast<const PublishEventRequest*>(
               &_PublishEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(PublishEventRequest& a, PublishEventRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PublishEventRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEventRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEventRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PublishEventRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishEventRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PublishEventRequest& from) {
    PublishEventRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishEventRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.PublishEventRequest";
  }
  protected:
  explicit PublishEventRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 5,
    kPubsubNameFieldNumber = 1,
    kTopicFieldNumber = 2,
    kDataFieldNumber = 3,
    kDataContentTypeFieldNumber = 4,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string pubsub_name = 1;
  void clear_pubsub_name() ;
  const std::string& pubsub_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubsub_name(Arg_&& arg, Args_... args);
  std::string* mutable_pubsub_name();
  PROTOBUF_NODISCARD std::string* release_pubsub_name();
  void set_allocated_pubsub_name(std::string* ptr);

  private:
  const std::string& _internal_pubsub_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubsub_name(
      const std::string& value);
  std::string* _internal_mutable_pubsub_name();

  public:
  // string topic = 2;
  void clear_topic() ;
  const std::string& topic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  std::string* mutable_topic();
  PROTOBUF_NODISCARD std::string* release_topic();
  void set_allocated_topic(std::string* ptr);

  private:
  const std::string& _internal_topic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_topic(
      const std::string& value);
  std::string* _internal_mutable_topic();

  public:
  // bytes data = 3;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string data_content_type = 4;
  void clear_data_content_type() ;
  const std::string& data_content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_data_content_type();
  PROTOBUF_NODISCARD std::string* release_data_content_type();
  void set_allocated_data_content_type(std::string* ptr);

  private:
  const std::string& _internal_data_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_content_type(
      const std::string& value);
  std::string* _internal_mutable_data_content_type();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PublishEventRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 1, 91, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<PublishEventRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr data_content_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class BulkPublishRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<BulkPublishRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkPublishRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  BulkPublishRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BulkPublishRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BulkPublishRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkPublishRequest_MetadataEntry_DoNotUse& other);
  static const BulkPublishRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkPublishRequest_MetadataEntry_DoNotUse*>(&_BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.BulkPublishRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.BulkPublishRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class BulkPublishRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishRequest) */ {
 public:
  inline BulkPublishRequest() : BulkPublishRequest(nullptr) {}
  ~BulkPublishRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BulkPublishRequest(::google::protobuf::internal::ConstantInitialized);

  BulkPublishRequest(const BulkPublishRequest& from);
  BulkPublishRequest(BulkPublishRequest&& from) noexcept
    : BulkPublishRequest() {
    *this = ::std::move(from);
  }

  inline BulkPublishRequest& operator=(const BulkPublishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BulkPublishRequest& operator=(BulkPublishRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BulkPublishRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BulkPublishRequest* internal_default_instance() {
    return reinterpret_cast<const BulkPublishRequest*>(
               &_BulkPublishRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(BulkPublishRequest& a, BulkPublishRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BulkPublishRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BulkPublishRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BulkPublishRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BulkPublishRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BulkPublishRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BulkPublishRequest& from) {
    BulkPublishRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.BulkPublishRequest";
  }
  protected:
  explicit BulkPublishRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 3,
    kMetadataFieldNumber = 4,
    kPubsubNameFieldNumber = 1,
    kTopicFieldNumber = 2,
  };
  // repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >*
      mutable_entries();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishRequestEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishRequestEntry>* _internal_mutable_entries();
  public:
  const ::dapr::proto::runtime::v1::BulkPublishRequestEntry& entries(int index) const;
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >&
      entries() const;
  // map<string, string> metadata = 4;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string pubsub_name = 1;
  void clear_pubsub_name() ;
  const std::string& pubsub_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubsub_name(Arg_&& arg, Args_... args);
  std::string* mutable_pubsub_name();
  PROTOBUF_NODISCARD std::string* release_pubsub_name();
  void set_allocated_pubsub_name(std::string* ptr);

  private:
  const std::string& _internal_pubsub_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubsub_name(
      const std::string& value);
  std::string* _internal_mutable_pubsub_name();

  public:
  // string topic = 2;
  void clear_topic() ;
  const std::string& topic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  std::string* mutable_topic();
  PROTOBUF_NODISCARD std::string* release_topic();
  void set_allocated_topic(std::string* ptr);

  private:
  const std::string& _internal_topic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_topic(
      const std::string& value);
  std::string* _internal_mutable_topic();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 73, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry > entries_;
    ::google::protobuf::internal::MapField<BulkPublishRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class BulkPublishRequestEntry_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<BulkPublishRequestEntry_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkPublishRequestEntry_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  BulkPublishRequestEntry_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BulkPublishRequestEntry_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BulkPublishRequestEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkPublishRequestEntry_MetadataEntry_DoNotUse& other);
  static const BulkPublishRequestEntry_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkPublishRequestEntry_MetadataEntry_DoNotUse*>(&_BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.BulkPublishRequestEntry.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.BulkPublishRequestEntry.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class BulkPublishRequestEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishRequestEntry) */ {
 public:
  inline BulkPublishRequestEntry() : BulkPublishRequestEntry(nullptr) {}
  ~BulkPublishRequestEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BulkPublishRequestEntry(::google::protobuf::internal::ConstantInitialized);

  BulkPublishRequestEntry(const BulkPublishRequestEntry& from);
  BulkPublishRequestEntry(BulkPublishRequestEntry&& from) noexcept
    : BulkPublishRequestEntry() {
    *this = ::std::move(from);
  }

  inline BulkPublishRequestEntry& operator=(const BulkPublishRequestEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline BulkPublishRequestEntry& operator=(BulkPublishRequestEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BulkPublishRequestEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const BulkPublishRequestEntry* internal_default_instance() {
    return reinterpret_cast<const BulkPublishRequestEntry*>(
               &_BulkPublishRequestEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(BulkPublishRequestEntry& a, BulkPublishRequestEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(BulkPublishRequestEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BulkPublishRequestEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BulkPublishRequestEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BulkPublishRequestEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BulkPublishRequestEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BulkPublishRequestEntry& from) {
    BulkPublishRequestEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishRequestEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.BulkPublishRequestEntry";
  }
  protected:
  explicit BulkPublishRequestEntry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 4,
    kEntryIdFieldNumber = 1,
    kEventFieldNumber = 2,
    kContentTypeFieldNumber = 3,
  };
  // map<string, string> metadata = 4;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string entry_id = 1;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* ptr);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // bytes event = 2;
  void clear_event() ;
  const std::string& event() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event(Arg_&& arg, Args_... args);
  std::string* mutable_event();
  PROTOBUF_NODISCARD std::string* release_event();
  void set_allocated_event(std::string* ptr);

  private:
  const std::string& _internal_event() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event(
      const std::string& value);
  std::string* _internal_mutable_event();

  public:
  // string content_type = 3;
  void clear_content_type() ;
  const std::string& content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_content_type();
  PROTOBUF_NODISCARD std::string* release_content_type();
  void set_allocated_content_type(std::string* ptr);

  private:
  const std::string& _internal_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_type(
      const std::string& value);
  std::string* _internal_mutable_content_type();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishRequestEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 82, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<BulkPublishRequestEntry_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    ::google::protobuf::internal::ArenaStringPtr event_;
    ::google::protobuf::internal::ArenaStringPtr content_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class BulkPublishResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishResponse) */ {
 public:
  inline BulkPublishResponse() : BulkPublishResponse(nullptr) {}
  ~BulkPublishResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BulkPublishResponse(::google::protobuf::internal::ConstantInitialized);

  BulkPublishResponse(const BulkPublishResponse& from);
  BulkPublishResponse(BulkPublishResponse&& from) noexcept
    : BulkPublishResponse() {
    *this = ::std::move(from);
  }

  inline BulkPublishResponse& operator=(const BulkPublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BulkPublishResponse& operator=(BulkPublishResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BulkPublishResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BulkPublishResponse* internal_default_instance() {
    return reinterpret_cast<const BulkPublishResponse*>(
               &_BulkPublishResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(BulkPublishResponse& a, BulkPublishResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BulkPublishResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BulkPublishResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BulkPublishResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BulkPublishResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BulkPublishResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BulkPublishResponse& from) {
    BulkPublishResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.BulkPublishResponse";
  }
  protected:
  explicit BulkPublishResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFailedEntriesFieldNumber = 1,
  };
  // repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
  int failedentries_size() const;
  private:
  int _internal_failedentries_size() const;

  public:
  void clear_failedentries() ;
  ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* mutable_failedentries(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >*
      mutable_failedentries();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry>& _internal_failedentries() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry>* _internal_mutable_failedentries();
  public:
  const ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry& failedentries(int index) const;
  ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* add_failedentries();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >&
      failedentries() const;
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry > failedentries_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class BulkPublishResponseFailedEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry) */ {
 public:
  inline BulkPublishResponseFailedEntry() : BulkPublishResponseFailedEntry(nullptr) {}
  ~BulkPublishResponseFailedEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BulkPublishResponseFailedEntry(::google::protobuf::internal::ConstantInitialized);

  BulkPublishResponseFailedEntry(const BulkPublishResponseFailedEntry& from);
  BulkPublishResponseFailedEntry(BulkPublishResponseFailedEntry&& from) noexcept
    : BulkPublishResponseFailedEntry() {
    *this = ::std::move(from);
  }

  inline BulkPublishResponseFailedEntry& operator=(const BulkPublishResponseFailedEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline BulkPublishResponseFailedEntry& operator=(BulkPublishResponseFailedEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BulkPublishResponseFailedEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const BulkPublishResponseFailedEntry* internal_default_instance() {
    return reinterpret_cast<const BulkPublishResponseFailedEntry*>(
               &_BulkPublishResponseFailedEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(BulkPublishResponseFailedEntry& a, BulkPublishResponseFailedEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(BulkPublishResponseFailedEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BulkPublishResponseFailedEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BulkPublishResponseFailedEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BulkPublishResponseFailedEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BulkPublishResponseFailedEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BulkPublishResponseFailedEntry& from) {
    BulkPublishResponseFailedEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishResponseFailedEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.BulkPublishResponseFailedEntry";
  }
  protected:
  explicit BulkPublishResponseFailedEntry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntryIdFieldNumber = 1,
    kErrorFieldNumber = 2,
  };
  // string entry_id = 1;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* ptr);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // string error = 2;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* ptr);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 74, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class InvokeBindingRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<InvokeBindingRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  InvokeBindingRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeBindingRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit InvokeBindingRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingRequest_MetadataEntry_DoNotUse& other);
  static const InvokeBindingRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingRequest_MetadataEntry_DoNotUse*>(&_InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.InvokeBindingRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.InvokeBindingRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class InvokeBindingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeBindingRequest) */ {
 public:
  inline InvokeBindingRequest() : InvokeBindingRequest(nullptr) {}
  ~InvokeBindingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeBindingRequest(::google::protobuf::internal::ConstantInitialized);

  InvokeBindingRequest(const InvokeBindingRequest& from);
  InvokeBindingRequest(InvokeBindingRequest&& from) noexcept
    : InvokeBindingRequest() {
    *this = ::std::move(from);
  }

  inline InvokeBindingRequest& operator=(const InvokeBindingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvokeBindingRequest& operator=(InvokeBindingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvokeBindingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvokeBindingRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingRequest*>(
               &_InvokeBindingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(InvokeBindingRequest& a, InvokeBindingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InvokeBindingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvokeBindingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvokeBindingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvokeBindingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvokeBindingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvokeBindingRequest& from) {
    InvokeBindingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.InvokeBindingRequest";
  }
  protected:
  explicit InvokeBindingRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 3,
    kNameFieldNumber = 1,
    kDataFieldNumber = 2,
    kOperationFieldNumber = 4,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string operation = 4;
  void clear_operation() ;
  const std::string& operation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_operation(Arg_&& arg, Args_... args);
  std::string* mutable_operation();
  PROTOBUF_NODISCARD std::string* release_operation();
  void set_allocated_operation(std::string* ptr);

  private:
  const std::string& _internal_operation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_operation(
      const std::string& value);
  std::string* _internal_mutable_operation();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeBindingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 72, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<InvokeBindingRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr operation_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class InvokeBindingResponse_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<InvokeBindingResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  InvokeBindingResponse_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeBindingResponse_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit InvokeBindingResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingResponse_MetadataEntry_DoNotUse& other);
  static const InvokeBindingResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingResponse_MetadataEntry_DoNotUse*>(&_InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.InvokeBindingResponse.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.InvokeBindingResponse.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class InvokeBindingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeBindingResponse) */ {
 public:
  inline InvokeBindingResponse() : InvokeBindingResponse(nullptr) {}
  ~InvokeBindingResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeBindingResponse(::google::protobuf::internal::ConstantInitialized);

  InvokeBindingResponse(const InvokeBindingResponse& from);
  InvokeBindingResponse(InvokeBindingResponse&& from) noexcept
    : InvokeBindingResponse() {
    *this = ::std::move(from);
  }

  inline InvokeBindingResponse& operator=(const InvokeBindingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvokeBindingResponse& operator=(InvokeBindingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvokeBindingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvokeBindingResponse* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingResponse*>(
               &_InvokeBindingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(InvokeBindingResponse& a, InvokeBindingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InvokeBindingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvokeBindingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvokeBindingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvokeBindingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvokeBindingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvokeBindingResponse& from) {
    InvokeBindingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.InvokeBindingResponse";
  }
  protected:
  explicit InvokeBindingResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 2,
    kDataFieldNumber = 1,
  };
  // map<string, string> metadata = 2;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeBindingResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 1, 60, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<InvokeBindingResponse_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetSecretRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetSecretRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetSecretRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSecretRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetSecretRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretRequest_MetadataEntry_DoNotUse& other);
  static const GetSecretRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretRequest_MetadataEntry_DoNotUse*>(&_GetSecretRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetSecretRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetSecretRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetSecretRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetSecretRequest) */ {
 public:
  inline GetSecretRequest() : GetSecretRequest(nullptr) {}
  ~GetSecretRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSecretRequest(::google::protobuf::internal::ConstantInitialized);

  GetSecretRequest(const GetSecretRequest& from);
  GetSecretRequest(GetSecretRequest&& from) noexcept
    : GetSecretRequest() {
    *this = ::std::move(from);
  }

  inline GetSecretRequest& operator=(const GetSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSecretRequest& operator=(GetSecretRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetSecretRequest*>(
               &_GetSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(GetSecretRequest& a, GetSecretRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSecretRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSecretRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSecretRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSecretRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSecretRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSecretRequest& from) {
    GetSecretRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetSecretRequest";
  }
  protected:
  explicit GetSecretRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 3,
    kStoreNameFieldNumber = 1,
    kKeyFieldNumber = 2,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1 [json_name = "storeName"];
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetSecretRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 1, 68, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetSecretRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetSecretResponse_DataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetSecretResponse_DataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretResponse_DataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetSecretResponse_DataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSecretResponse_DataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetSecretResponse_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretResponse_DataEntry_DoNotUse& other);
  static const GetSecretResponse_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretResponse_DataEntry_DoNotUse*>(&_GetSecretResponse_DataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetSecretResponse.DataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetSecretResponse.DataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetSecretResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetSecretResponse) */ {
 public:
  inline GetSecretResponse() : GetSecretResponse(nullptr) {}
  ~GetSecretResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSecretResponse(::google::protobuf::internal::ConstantInitialized);

  GetSecretResponse(const GetSecretResponse& from);
  GetSecretResponse(GetSecretResponse&& from) noexcept
    : GetSecretResponse() {
    *this = ::std::move(from);
  }

  inline GetSecretResponse& operator=(const GetSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSecretResponse& operator=(GetSecretResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetSecretResponse*>(
               &_GetSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(GetSecretResponse& a, GetSecretResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSecretResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSecretResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSecretResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSecretResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSecretResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSecretResponse& from) {
    GetSecretResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetSecretResponse";
  }
  protected:
  explicit GetSecretResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // map<string, string> data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  const ::google::protobuf::Map<std::string, std::string>& data() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_data();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_data() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetSecretResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetSecretResponse_DataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetBulkSecretRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetBulkSecretRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkSecretRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetBulkSecretRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkSecretRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetBulkSecretRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkSecretRequest_MetadataEntry_DoNotUse& other);
  static const GetBulkSecretRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkSecretRequest_MetadataEntry_DoNotUse*>(&_GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetBulkSecretRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetBulkSecretRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetBulkSecretRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkSecretRequest) */ {
 public:
  inline GetBulkSecretRequest() : GetBulkSecretRequest(nullptr) {}
  ~GetBulkSecretRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkSecretRequest(::google::protobuf::internal::ConstantInitialized);

  GetBulkSecretRequest(const GetBulkSecretRequest& from);
  GetBulkSecretRequest(GetBulkSecretRequest&& from) noexcept
    : GetBulkSecretRequest() {
    *this = ::std::move(from);
  }

  inline GetBulkSecretRequest& operator=(const GetBulkSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBulkSecretRequest& operator=(GetBulkSecretRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBulkSecretRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBulkSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetBulkSecretRequest*>(
               &_GetBulkSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(GetBulkSecretRequest& a, GetBulkSecretRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBulkSecretRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBulkSecretRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBulkSecretRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetBulkSecretRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBulkSecretRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetBulkSecretRequest& from) {
    GetBulkSecretRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkSecretRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetBulkSecretRequest";
  }
  protected:
  explicit GetBulkSecretRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 2,
    kStoreNameFieldNumber = 1,
  };
  // map<string, string> metadata = 2;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1 [json_name = "storeName"];
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkSecretRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 1, 69, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetBulkSecretRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SecretResponse_SecretsEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<SecretResponse_SecretsEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<SecretResponse_SecretsEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  SecretResponse_SecretsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SecretResponse_SecretsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SecretResponse_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SecretResponse_SecretsEntry_DoNotUse& other);
  static const SecretResponse_SecretsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SecretResponse_SecretsEntry_DoNotUse*>(&_SecretResponse_SecretsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.SecretResponse.SecretsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.SecretResponse.SecretsEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class SecretResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SecretResponse) */ {
 public:
  inline SecretResponse() : SecretResponse(nullptr) {}
  ~SecretResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SecretResponse(::google::protobuf::internal::ConstantInitialized);

  SecretResponse(const SecretResponse& from);
  SecretResponse(SecretResponse&& from) noexcept
    : SecretResponse() {
    *this = ::std::move(from);
  }

  inline SecretResponse& operator=(const SecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SecretResponse& operator=(SecretResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SecretResponse* internal_default_instance() {
    return reinterpret_cast<const SecretResponse*>(
               &_SecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(SecretResponse& a, SecretResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SecretResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SecretResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SecretResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SecretResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SecretResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SecretResponse& from) {
    SecretResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SecretResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SecretResponse";
  }
  protected:
  explicit SecretResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kSecretsFieldNumber = 1,
  };
  // map<string, string> secrets = 1;
  int secrets_size() const;
  private:
  int _internal_secrets_size() const;

  public:
  void clear_secrets() ;
  const ::google::protobuf::Map<std::string, std::string>& secrets() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_secrets();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_secrets() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_secrets();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SecretResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<SecretResponse_SecretsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        secrets_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetBulkSecretResponse_DataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetBulkSecretResponse_DataEntry_DoNotUse, 
    std::string, ::dapr::proto::runtime::v1::SecretResponse,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkSecretResponse_DataEntry_DoNotUse, 
    std::string, ::dapr::proto::runtime::v1::SecretResponse,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetBulkSecretResponse_DataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkSecretResponse_DataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetBulkSecretResponse_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkSecretResponse_DataEntry_DoNotUse& other);
  static const GetBulkSecretResponse_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkSecretResponse_DataEntry_DoNotUse*>(&_GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetBulkSecretResponse.DataEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetBulkSecretResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkSecretResponse) */ {
 public:
  inline GetBulkSecretResponse() : GetBulkSecretResponse(nullptr) {}
  ~GetBulkSecretResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetBulkSecretResponse(::google::protobuf::internal::ConstantInitialized);

  GetBulkSecretResponse(const GetBulkSecretResponse& from);
  GetBulkSecretResponse(GetBulkSecretResponse&& from) noexcept
    : GetBulkSecretResponse() {
    *this = ::std::move(from);
  }

  inline GetBulkSecretResponse& operator=(const GetBulkSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBulkSecretResponse& operator=(GetBulkSecretResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBulkSecretResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBulkSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetBulkSecretResponse*>(
               &_GetBulkSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(GetBulkSecretResponse& a, GetBulkSecretResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBulkSecretResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBulkSecretResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBulkSecretResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetBulkSecretResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBulkSecretResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetBulkSecretResponse& from) {
    GetBulkSecretResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkSecretResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetBulkSecretResponse";
  }
  protected:
  explicit GetBulkSecretResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  const ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>& data() const;
  ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>* mutable_data();

  private:
  const ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>& _internal_data() const;
  ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkSecretResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 2, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetBulkSecretResponse_DataEntry_DoNotUse, std::string, ::dapr::proto::runtime::v1::SecretResponse,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class TransactionalStateOperation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TransactionalStateOperation) */ {
 public:
  inline TransactionalStateOperation() : TransactionalStateOperation(nullptr) {}
  ~TransactionalStateOperation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TransactionalStateOperation(::google::protobuf::internal::ConstantInitialized);

  TransactionalStateOperation(const TransactionalStateOperation& from);
  TransactionalStateOperation(TransactionalStateOperation&& from) noexcept
    : TransactionalStateOperation() {
    *this = ::std::move(from);
  }

  inline TransactionalStateOperation& operator=(const TransactionalStateOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransactionalStateOperation& operator=(TransactionalStateOperation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransactionalStateOperation& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransactionalStateOperation* internal_default_instance() {
    return reinterpret_cast<const TransactionalStateOperation*>(
               &_TransactionalStateOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(TransactionalStateOperation& a, TransactionalStateOperation& b) {
    a.Swap(&b);
  }
  inline void Swap(TransactionalStateOperation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransactionalStateOperation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransactionalStateOperation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransactionalStateOperation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransactionalStateOperation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TransactionalStateOperation& from) {
    TransactionalStateOperation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionalStateOperation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.TransactionalStateOperation";
  }
  protected:
  explicit TransactionalStateOperation(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationTypeFieldNumber = 1,
    kRequestFieldNumber = 2,
  };
  // string operationType = 1;
  void clear_operationtype() ;
  const std::string& operationtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_operationtype(Arg_&& arg, Args_... args);
  std::string* mutable_operationtype();
  PROTOBUF_NODISCARD std::string* release_operationtype();
  void set_allocated_operationtype(std::string* ptr);

  private:
  const std::string& _internal_operationtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_operationtype(
      const std::string& value);
  std::string* _internal_mutable_operationtype();

  public:
  // .dapr.proto.common.v1.StateItem request = 2;
  bool has_request() const;
  void clear_request() ;
  const ::dapr::proto::common::v1::StateItem& request() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::StateItem* release_request();
  ::dapr::proto::common::v1::StateItem* mutable_request();
  void set_allocated_request(::dapr::proto::common::v1::StateItem* value);
  void unsafe_arena_set_allocated_request(::dapr::proto::common::v1::StateItem* value);
  ::dapr::proto::common::v1::StateItem* unsafe_arena_release_request();

  private:
  const ::dapr::proto::common::v1::StateItem& _internal_request() const;
  ::dapr::proto::common::v1::StateItem* _internal_mutable_request();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TransactionalStateOperation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 71, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr operationtype_;
    ::dapr::proto::common::v1::StateItem* request_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class ExecuteStateTransactionRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  ExecuteStateTransactionRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse& other);
  static const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse*>(&_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.ExecuteStateTransactionRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.ExecuteStateTransactionRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class ExecuteStateTransactionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ExecuteStateTransactionRequest) */ {
 public:
  inline ExecuteStateTransactionRequest() : ExecuteStateTransactionRequest(nullptr) {}
  ~ExecuteStateTransactionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExecuteStateTransactionRequest(::google::protobuf::internal::ConstantInitialized);

  ExecuteStateTransactionRequest(const ExecuteStateTransactionRequest& from);
  ExecuteStateTransactionRequest(ExecuteStateTransactionRequest&& from) noexcept
    : ExecuteStateTransactionRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteStateTransactionRequest& operator=(const ExecuteStateTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecuteStateTransactionRequest& operator=(ExecuteStateTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecuteStateTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecuteStateTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteStateTransactionRequest*>(
               &_ExecuteStateTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(ExecuteStateTransactionRequest& a, ExecuteStateTransactionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecuteStateTransactionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecuteStateTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecuteStateTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExecuteStateTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecuteStateTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExecuteStateTransactionRequest& from) {
    ExecuteStateTransactionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteStateTransactionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.ExecuteStateTransactionRequest";
  }
  protected:
  explicit ExecuteStateTransactionRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOperationsFieldNumber = 2,
    kMetadataFieldNumber = 3,
    kStoreNameFieldNumber = 1,
  };
  // repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
  int operations_size() const;
  private:
  int _internal_operations_size() const;

  public:
  void clear_operations() ;
  ::dapr::proto::runtime::v1::TransactionalStateOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >*
      mutable_operations();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalStateOperation>& _internal_operations() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalStateOperation>* _internal_mutable_operations();
  public:
  const ::dapr::proto::runtime::v1::TransactionalStateOperation& operations(int index) const;
  ::dapr::proto::runtime::v1::TransactionalStateOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >&
      operations() const;
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string storeName = 1;
  void clear_storename() ;
  const std::string& storename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_storename(Arg_&& arg, Args_... args);
  std::string* mutable_storename();
  PROTOBUF_NODISCARD std::string* release_storename();
  void set_allocated_storename(std::string* ptr);

  private:
  const std::string& _internal_storename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_storename(
      const std::string& value);
  std::string* _internal_mutable_storename();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 2, 78, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation > operations_;
    ::google::protobuf::internal::MapField<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr storename_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class RegisterActorTimerRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisterActorTimerRequest) */ {
 public:
  inline RegisterActorTimerRequest() : RegisterActorTimerRequest(nullptr) {}
  ~RegisterActorTimerRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterActorTimerRequest(::google::protobuf::internal::ConstantInitialized);

  RegisterActorTimerRequest(const RegisterActorTimerRequest& from);
  RegisterActorTimerRequest(RegisterActorTimerRequest&& from) noexcept
    : RegisterActorTimerRequest() {
    *this = ::std::move(from);
  }

  inline RegisterActorTimerRequest& operator=(const RegisterActorTimerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterActorTimerRequest& operator=(RegisterActorTimerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterActorTimerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterActorTimerRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterActorTimerRequest*>(
               &_RegisterActorTimerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(RegisterActorTimerRequest& a, RegisterActorTimerRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterActorTimerRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterActorTimerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterActorTimerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterActorTimerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterActorTimerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterActorTimerRequest& from) {
    RegisterActorTimerRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterActorTimerRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.RegisterActorTimerRequest";
  }
  protected:
  explicit RegisterActorTimerRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
    kNameFieldNumber = 3,
    kDueTimeFieldNumber = 4,
    kPeriodFieldNumber = 5,
    kCallbackFieldNumber = 6,
    kDataFieldNumber = 7,
    kTtlFieldNumber = 8,
  };
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string due_time = 4;
  void clear_due_time() ;
  const std::string& due_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_due_time(Arg_&& arg, Args_... args);
  std::string* mutable_due_time();
  PROTOBUF_NODISCARD std::string* release_due_time();
  void set_allocated_due_time(std::string* ptr);

  private:
  const std::string& _internal_due_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_due_time(
      const std::string& value);
  std::string* _internal_mutable_due_time();

  public:
  // string period = 5;
  void clear_period() ;
  const std::string& period() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_period(Arg_&& arg, Args_... args);
  std::string* mutable_period();
  PROTOBUF_NODISCARD std::string* release_period();
  void set_allocated_period(std::string* ptr);

  private:
  const std::string& _internal_period() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_period(
      const std::string& value);
  std::string* _internal_mutable_period();

  public:
  // string callback = 6;
  void clear_callback() ;
  const std::string& callback() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_callback(Arg_&& arg, Args_... args);
  std::string* mutable_callback();
  PROTOBUF_NODISCARD std::string* release_callback();
  void set_allocated_callback(std::string* ptr);

  private:
  const std::string& _internal_callback() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_callback(
      const std::string& value);
  std::string* _internal_mutable_callback();

  public:
  // bytes data = 7;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string ttl = 8;
  void clear_ttl() ;
  const std::string& ttl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ttl(Arg_&& arg, Args_... args);
  std::string* mutable_ttl();
  PROTOBUF_NODISCARD std::string* release_ttl();
  void set_allocated_ttl(std::string* ptr);

  private:
  const std::string& _internal_ttl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ttl(
      const std::string& value);
  std::string* _internal_mutable_ttl();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisterActorTimerRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8, 0, 111, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr due_time_;
    ::google::protobuf::internal::ArenaStringPtr period_;
    ::google::protobuf::internal::ArenaStringPtr callback_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr ttl_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class UnregisterActorTimerRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnregisterActorTimerRequest) */ {
 public:
  inline UnregisterActorTimerRequest() : UnregisterActorTimerRequest(nullptr) {}
  ~UnregisterActorTimerRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnregisterActorTimerRequest(::google::protobuf::internal::ConstantInitialized);

  UnregisterActorTimerRequest(const UnregisterActorTimerRequest& from);
  UnregisterActorTimerRequest(UnregisterActorTimerRequest&& from) noexcept
    : UnregisterActorTimerRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterActorTimerRequest& operator=(const UnregisterActorTimerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnregisterActorTimerRequest& operator=(UnregisterActorTimerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnregisterActorTimerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnregisterActorTimerRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterActorTimerRequest*>(
               &_UnregisterActorTimerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(UnregisterActorTimerRequest& a, UnregisterActorTimerRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnregisterActorTimerRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnregisterActorTimerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnregisterActorTimerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnregisterActorTimerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnregisterActorTimerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnregisterActorTimerRequest& from) {
    UnregisterActorTimerRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterActorTimerRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.UnregisterActorTimerRequest";
  }
  protected:
  explicit UnregisterActorTimerRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
    kNameFieldNumber = 3,
  };
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 80, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class RegisterActorReminderRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisterActorReminderRequest) */ {
 public:
  inline RegisterActorReminderRequest() : RegisterActorReminderRequest(nullptr) {}
  ~RegisterActorReminderRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterActorReminderRequest(::google::protobuf::internal::ConstantInitialized);

  RegisterActorReminderRequest(const RegisterActorReminderRequest& from);
  RegisterActorReminderRequest(RegisterActorReminderRequest&& from) noexcept
    : RegisterActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline RegisterActorReminderRequest& operator=(const RegisterActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterActorReminderRequest& operator=(RegisterActorReminderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterActorReminderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterActorReminderRequest*>(
               &_RegisterActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(RegisterActorReminderRequest& a, RegisterActorReminderRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterActorReminderRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterActorReminderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterActorReminderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterActorReminderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterActorReminderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterActorReminderRequest& from) {
    RegisterActorReminderRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterActorReminderRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.RegisterActorReminderRequest";
  }
  protected:
  explicit RegisterActorReminderRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
    kNameFieldNumber = 3,
    kDueTimeFieldNumber = 4,
    kPeriodFieldNumber = 5,
    kDataFieldNumber = 6,
    kTtlFieldNumber = 7,
  };
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string due_time = 4;
  void clear_due_time() ;
  const std::string& due_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_due_time(Arg_&& arg, Args_... args);
  std::string* mutable_due_time();
  PROTOBUF_NODISCARD std::string* release_due_time();
  void set_allocated_due_time(std::string* ptr);

  private:
  const std::string& _internal_due_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_due_time(
      const std::string& value);
  std::string* _internal_mutable_due_time();

  public:
  // string period = 5;
  void clear_period() ;
  const std::string& period() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_period(Arg_&& arg, Args_... args);
  std::string* mutable_period();
  PROTOBUF_NODISCARD std::string* release_period();
  void set_allocated_period(std::string* ptr);

  private:
  const std::string& _internal_period() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_period(
      const std::string& value);
  std::string* _internal_mutable_period();

  public:
  // bytes data = 6;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string ttl = 7;
  void clear_ttl() ;
  const std::string& ttl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ttl(Arg_&& arg, Args_... args);
  std::string* mutable_ttl();
  PROTOBUF_NODISCARD std::string* release_ttl();
  void set_allocated_ttl(std::string* ptr);

  private:
  const std::string& _internal_ttl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ttl(
      const std::string& value);
  std::string* _internal_mutable_ttl();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisterActorReminderRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 98, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr due_time_;
    ::google::protobuf::internal::ArenaStringPtr period_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr ttl_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class UnregisterActorReminderRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnregisterActorReminderRequest) */ {
 public:
  inline UnregisterActorReminderRequest() : UnregisterActorReminderRequest(nullptr) {}
  ~UnregisterActorReminderRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnregisterActorReminderRequest(::google::protobuf::internal::ConstantInitialized);

  UnregisterActorReminderRequest(const UnregisterActorReminderRequest& from);
  UnregisterActorReminderRequest(UnregisterActorReminderRequest&& from) noexcept
    : UnregisterActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterActorReminderRequest& operator=(const UnregisterActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnregisterActorReminderRequest& operator=(UnregisterActorReminderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnregisterActorReminderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnregisterActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterActorReminderRequest*>(
               &_UnregisterActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(UnregisterActorReminderRequest& a, UnregisterActorReminderRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnregisterActorReminderRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnregisterActorReminderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnregisterActorReminderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnregisterActorReminderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnregisterActorReminderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnregisterActorReminderRequest& from) {
    UnregisterActorReminderRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterActorReminderRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.UnregisterActorReminderRequest";
  }
  protected:
  explicit UnregisterActorReminderRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
    kNameFieldNumber = 3,
  };
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 83, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetActorStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetActorStateRequest) */ {
 public:
  inline GetActorStateRequest() : GetActorStateRequest(nullptr) {}
  ~GetActorStateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetActorStateRequest(::google::protobuf::internal::ConstantInitialized);

  GetActorStateRequest(const GetActorStateRequest& from);
  GetActorStateRequest(GetActorStateRequest&& from) noexcept
    : GetActorStateRequest() {
    *this = ::std::move(from);
  }

  inline GetActorStateRequest& operator=(const GetActorStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActorStateRequest& operator=(GetActorStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActorStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetActorStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetActorStateRequest*>(
               &_GetActorStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GetActorStateRequest& a, GetActorStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetActorStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActorStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActorStateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetActorStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActorStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetActorStateRequest& from) {
    GetActorStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActorStateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetActorStateRequest";
  }
  protected:
  explicit GetActorStateRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
    kKeyFieldNumber = 3,
  };
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // string key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetActorStateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 72, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetActorStateResponse_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetActorStateResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetActorStateResponse_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetActorStateResponse_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetActorStateResponse_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetActorStateResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetActorStateResponse_MetadataEntry_DoNotUse& other);
  static const GetActorStateResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetActorStateResponse_MetadataEntry_DoNotUse*>(&_GetActorStateResponse_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetActorStateResponse.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetActorStateResponse.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetActorStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetActorStateResponse) */ {
 public:
  inline GetActorStateResponse() : GetActorStateResponse(nullptr) {}
  ~GetActorStateResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetActorStateResponse(::google::protobuf::internal::ConstantInitialized);

  GetActorStateResponse(const GetActorStateResponse& from);
  GetActorStateResponse(GetActorStateResponse&& from) noexcept
    : GetActorStateResponse() {
    *this = ::std::move(from);
  }

  inline GetActorStateResponse& operator=(const GetActorStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActorStateResponse& operator=(GetActorStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActorStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetActorStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetActorStateResponse*>(
               &_GetActorStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(GetActorStateResponse& a, GetActorStateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetActorStateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActorStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActorStateResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetActorStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActorStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetActorStateResponse& from) {
    GetActorStateResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActorStateResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetActorStateResponse";
  }
  protected:
  explicit GetActorStateResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 2,
    kDataFieldNumber = 1,
  };
  // map<string, string> metadata = 2;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetActorStateResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 1, 60, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetActorStateResponse_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class ExecuteActorStateTransactionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest) */ {
 public:
  inline ExecuteActorStateTransactionRequest() : ExecuteActorStateTransactionRequest(nullptr) {}
  ~ExecuteActorStateTransactionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExecuteActorStateTransactionRequest(::google::protobuf::internal::ConstantInitialized);

  ExecuteActorStateTransactionRequest(const ExecuteActorStateTransactionRequest& from);
  ExecuteActorStateTransactionRequest(ExecuteActorStateTransactionRequest&& from) noexcept
    : ExecuteActorStateTransactionRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteActorStateTransactionRequest& operator=(const ExecuteActorStateTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecuteActorStateTransactionRequest& operator=(ExecuteActorStateTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecuteActorStateTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecuteActorStateTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteActorStateTransactionRequest*>(
               &_ExecuteActorStateTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(ExecuteActorStateTransactionRequest& a, ExecuteActorStateTransactionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecuteActorStateTransactionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecuteActorStateTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecuteActorStateTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExecuteActorStateTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecuteActorStateTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExecuteActorStateTransactionRequest& from) {
    ExecuteActorStateTransactionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteActorStateTransactionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest";
  }
  protected:
  explicit ExecuteActorStateTransactionRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationsFieldNumber = 3,
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
  };
  // repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
  int operations_size() const;
  private:
  int _internal_operations_size() const;

  public:
  void clear_operations() ;
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >*
      mutable_operations();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalActorStateOperation>& _internal_operations() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalActorStateOperation>* _internal_mutable_operations();
  public:
  const ::dapr::proto::runtime::v1::TransactionalActorStateOperation& operations(int index) const;
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >&
      operations() const;
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 84, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation > operations_;
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class TransactionalActorStateOperation_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<TransactionalActorStateOperation_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<TransactionalActorStateOperation_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  TransactionalActorStateOperation_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransactionalActorStateOperation_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TransactionalActorStateOperation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TransactionalActorStateOperation_MetadataEntry_DoNotUse& other);
  static const TransactionalActorStateOperation_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TransactionalActorStateOperation_MetadataEntry_DoNotUse*>(&_TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.TransactionalActorStateOperation.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.TransactionalActorStateOperation.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class TransactionalActorStateOperation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TransactionalActorStateOperation) */ {
 public:
  inline TransactionalActorStateOperation() : TransactionalActorStateOperation(nullptr) {}
  ~TransactionalActorStateOperation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TransactionalActorStateOperation(::google::protobuf::internal::ConstantInitialized);

  TransactionalActorStateOperation(const TransactionalActorStateOperation& from);
  TransactionalActorStateOperation(TransactionalActorStateOperation&& from) noexcept
    : TransactionalActorStateOperation() {
    *this = ::std::move(from);
  }

  inline TransactionalActorStateOperation& operator=(const TransactionalActorStateOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransactionalActorStateOperation& operator=(TransactionalActorStateOperation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransactionalActorStateOperation& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransactionalActorStateOperation* internal_default_instance() {
    return reinterpret_cast<const TransactionalActorStateOperation*>(
               &_TransactionalActorStateOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(TransactionalActorStateOperation& a, TransactionalActorStateOperation& b) {
    a.Swap(&b);
  }
  inline void Swap(TransactionalActorStateOperation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransactionalActorStateOperation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransactionalActorStateOperation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransactionalActorStateOperation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransactionalActorStateOperation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TransactionalActorStateOperation& from) {
    TransactionalActorStateOperation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionalActorStateOperation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.TransactionalActorStateOperation";
  }
  protected:
  explicit TransactionalActorStateOperation(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 4,
    kOperationTypeFieldNumber = 1,
    kKeyFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // map<string, string> metadata = 4;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string operationType = 1;
  void clear_operationtype() ;
  const std::string& operationtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_operationtype(Arg_&& arg, Args_... args);
  std::string* mutable_operationtype();
  PROTOBUF_NODISCARD std::string* release_operationtype();
  void set_allocated_operationtype(std::string* ptr);

  private:
  const std::string& _internal_operationtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_operationtype(
      const std::string& value);
  std::string* _internal_mutable_operationtype();

  public:
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Any value = 3;
  bool has_value() const;
  void clear_value() ;
  const ::google::protobuf::Any& value() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_value();
  ::google::protobuf::Any* mutable_value();
  void set_allocated_value(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_value(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_value();

  private:
  const ::google::protobuf::Any& _internal_value() const;
  ::google::protobuf::Any* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TransactionalActorStateOperation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 87, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<TransactionalActorStateOperation_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr operationtype_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Any* value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class InvokeActorRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<InvokeActorRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeActorRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  InvokeActorRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeActorRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit InvokeActorRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeActorRequest_MetadataEntry_DoNotUse& other);
  static const InvokeActorRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeActorRequest_MetadataEntry_DoNotUse*>(&_InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.InvokeActorRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.InvokeActorRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class InvokeActorRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeActorRequest) */ {
 public:
  inline InvokeActorRequest() : InvokeActorRequest(nullptr) {}
  ~InvokeActorRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeActorRequest(::google::protobuf::internal::ConstantInitialized);

  InvokeActorRequest(const InvokeActorRequest& from);
  InvokeActorRequest(InvokeActorRequest&& from) noexcept
    : InvokeActorRequest() {
    *this = ::std::move(from);
  }

  inline InvokeActorRequest& operator=(const InvokeActorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvokeActorRequest& operator=(InvokeActorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvokeActorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvokeActorRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeActorRequest*>(
               &_InvokeActorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(InvokeActorRequest& a, InvokeActorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InvokeActorRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvokeActorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvokeActorRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvokeActorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvokeActorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvokeActorRequest& from) {
    InvokeActorRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeActorRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.InvokeActorRequest";
  }
  protected:
  explicit InvokeActorRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 5,
    kActorTypeFieldNumber = 1,
    kActorIdFieldNumber = 2,
    kMethodFieldNumber = 3,
    kDataFieldNumber = 4,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string actor_type = 1;
  void clear_actor_type() ;
  const std::string& actor_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_type(Arg_&& arg, Args_... args);
  std::string* mutable_actor_type();
  PROTOBUF_NODISCARD std::string* release_actor_type();
  void set_allocated_actor_type(std::string* ptr);

  private:
  const std::string& _internal_actor_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_type(
      const std::string& value);
  std::string* _internal_mutable_actor_type();

  public:
  // string actor_id = 2;
  void clear_actor_id() ;
  const std::string& actor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actor_id(Arg_&& arg, Args_... args);
  std::string* mutable_actor_id();
  PROTOBUF_NODISCARD std::string* release_actor_id();
  void set_allocated_actor_id(std::string* ptr);

  private:
  const std::string& _internal_actor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_actor_id(
      const std::string& value);
  std::string* _internal_mutable_actor_id();

  public:
  // string method = 3;
  void clear_method() ;
  const std::string& method() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method(Arg_&& arg, Args_... args);
  std::string* mutable_method();
  PROTOBUF_NODISCARD std::string* release_method();
  void set_allocated_method(std::string* ptr);

  private:
  const std::string& _internal_method() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method(
      const std::string& value);
  std::string* _internal_mutable_method();

  public:
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeActorRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 1, 81, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<InvokeActorRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr actor_type_;
    ::google::protobuf::internal::ArenaStringPtr actor_id_;
    ::google::protobuf::internal::ArenaStringPtr method_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class InvokeActorResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeActorResponse) */ {
 public:
  inline InvokeActorResponse() : InvokeActorResponse(nullptr) {}
  ~InvokeActorResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvokeActorResponse(::google::protobuf::internal::ConstantInitialized);

  InvokeActorResponse(const InvokeActorResponse& from);
  InvokeActorResponse(InvokeActorResponse&& from) noexcept
    : InvokeActorResponse() {
    *this = ::std::move(from);
  }

  inline InvokeActorResponse& operator=(const InvokeActorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvokeActorResponse& operator=(InvokeActorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvokeActorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvokeActorResponse* internal_default_instance() {
    return reinterpret_cast<const InvokeActorResponse*>(
               &_InvokeActorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(InvokeActorResponse& a, InvokeActorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InvokeActorResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvokeActorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvokeActorResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvokeActorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvokeActorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvokeActorResponse& from) {
    InvokeActorResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeActorResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.InvokeActorResponse";
  }
  protected:
  explicit InvokeActorResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeActorResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetMetadataRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetMetadataRequest) */ {
 public:
  inline GetMetadataRequest() : GetMetadataRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMetadataRequest(::google::protobuf::internal::ConstantInitialized);

  GetMetadataRequest(const GetMetadataRequest& from);
  GetMetadataRequest(GetMetadataRequest&& from) noexcept
    : GetMetadataRequest() {
    *this = ::std::move(from);
  }

  inline GetMetadataRequest& operator=(const GetMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMetadataRequest& operator=(GetMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const GetMetadataRequest*>(
               &_GetMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(GetMetadataRequest& a, GetMetadataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMetadataRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMetadataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMetadataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMetadataRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMetadataRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMetadataRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetMetadataRequest";
  }
  protected:
  explicit GetMetadataRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetMetadataRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetMetadataResponse_ExtendedMetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetMetadataResponse_ExtendedMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMetadataResponse_ExtendedMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetMetadataResponse_ExtendedMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse& other);
  static const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse*>(&_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetMetadataResponse.ExtendedMetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetMetadataResponse.ExtendedMetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetMetadataResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetMetadataResponse) */ {
 public:
  inline GetMetadataResponse() : GetMetadataResponse(nullptr) {}
  ~GetMetadataResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMetadataResponse(::google::protobuf::internal::ConstantInitialized);

  GetMetadataResponse(const GetMetadataResponse& from);
  GetMetadataResponse(GetMetadataResponse&& from) noexcept
    : GetMetadataResponse() {
    *this = ::std::move(from);
  }

  inline GetMetadataResponse& operator=(const GetMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMetadataResponse& operator=(GetMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const GetMetadataResponse*>(
               &_GetMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(GetMetadataResponse& a, GetMetadataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMetadataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMetadataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMetadataResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMetadataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMetadataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetMetadataResponse& from) {
    GetMetadataResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMetadataResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetMetadataResponse";
  }
  protected:
  explicit GetMetadataResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kActiveActorsCountFieldNumber = 2,
    kRegisteredComponentsFieldNumber = 3,
    kExtendedMetadataFieldNumber = 4,
    kSubscriptionsFieldNumber = 5,
    kHttpEndpointsFieldNumber = 6,
    kEnabledFeaturesFieldNumber = 9,
    kIdFieldNumber = 1,
    kRuntimeVersionFieldNumber = 8,
    kAppConnectionPropertiesFieldNumber = 7,
    kActorRuntimeFieldNumber = 10,
  };
  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2 [json_name = "actors", deprecated = true];
  [[deprecated]]  int active_actors_count_size() const;
  private:
  int _internal_active_actors_count_size() const;

  public:
  [[deprecated]]  void clear_active_actors_count() ;
  [[deprecated]] ::dapr::proto::runtime::v1::ActiveActorsCount* mutable_active_actors_count(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >*
      mutable_active_actors_count();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>& _internal_active_actors_count() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>* _internal_mutable_active_actors_count();
  public:
  [[deprecated]] const ::dapr::proto::runtime::v1::ActiveActorsCount& active_actors_count(int index) const;
  [[deprecated]] ::dapr::proto::runtime::v1::ActiveActorsCount* add_active_actors_count();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >&
      active_actors_count() const;
  // repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3 [json_name = "components"];
  int registered_components_size() const;
  private:
  int _internal_registered_components_size() const;

  public:
  void clear_registered_components() ;
  ::dapr::proto::runtime::v1::RegisteredComponents* mutable_registered_components(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >*
      mutable_registered_components();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::RegisteredComponents>& _internal_registered_components() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::RegisteredComponents>* _internal_mutable_registered_components();
  public:
  const ::dapr::proto::runtime::v1::RegisteredComponents& registered_components(int index) const;
  ::dapr::proto::runtime::v1::RegisteredComponents* add_registered_components();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >&
      registered_components() const;
  // map<string, string> extended_metadata = 4 [json_name = "extended"];
  int extended_metadata_size() const;
  private:
  int _internal_extended_metadata_size() const;

  public:
  void clear_extended_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& extended_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_extended_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_extended_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_extended_metadata();

  public:
  // repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5 [json_name = "subscriptions"];
  int subscriptions_size() const;
  private:
  int _internal_subscriptions_size() const;

  public:
  void clear_subscriptions() ;
  ::dapr::proto::runtime::v1::PubsubSubscription* mutable_subscriptions(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >*
      mutable_subscriptions();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscription>& _internal_subscriptions() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscription>* _internal_mutable_subscriptions();
  public:
  const ::dapr::proto::runtime::v1::PubsubSubscription& subscriptions(int index) const;
  ::dapr::proto::runtime::v1::PubsubSubscription* add_subscriptions();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >&
      subscriptions() const;
  // repeated .dapr.proto.runtime.v1.MetadataHTTPEndpoint http_endpoints = 6 [json_name = "httpEndpoints"];
  int http_endpoints_size() const;
  private:
  int _internal_http_endpoints_size() const;

  public:
  void clear_http_endpoints() ;
  ::dapr::proto::runtime::v1::MetadataHTTPEndpoint* mutable_http_endpoints(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint >*
      mutable_http_endpoints();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::MetadataHTTPEndpoint>& _internal_http_endpoints() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::MetadataHTTPEndpoint>* _internal_mutable_http_endpoints();
  public:
  const ::dapr::proto::runtime::v1::MetadataHTTPEndpoint& http_endpoints(int index) const;
  ::dapr::proto::runtime::v1::MetadataHTTPEndpoint* add_http_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint >&
      http_endpoints() const;
  // repeated string enabled_features = 9 [json_name = "enabledFeatures"];
  int enabled_features_size() const;
  private:
  int _internal_enabled_features_size() const;

  public:
  void clear_enabled_features() ;
  const std::string& enabled_features(int index) const;
  std::string* mutable_enabled_features(int index);
  void set_enabled_features(int index, const std::string& value);
  void set_enabled_features(int index, std::string&& value);
  void set_enabled_features(int index, const char* value);
  void set_enabled_features(int index, const char* value, std::size_t size);
  void set_enabled_features(int index, absl::string_view value);
  std::string* add_enabled_features();
  void add_enabled_features(const std::string& value);
  void add_enabled_features(std::string&& value);
  void add_enabled_features(const char* value);
  void add_enabled_features(const char* value, std::size_t size);
  void add_enabled_features(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& enabled_features() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_enabled_features();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_enabled_features() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_enabled_features();

  public:
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string runtime_version = 8 [json_name = "runtimeVersion"];
  void clear_runtime_version() ;
  const std::string& runtime_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_runtime_version(Arg_&& arg, Args_... args);
  std::string* mutable_runtime_version();
  PROTOBUF_NODISCARD std::string* release_runtime_version();
  void set_allocated_runtime_version(std::string* ptr);

  private:
  const std::string& _internal_runtime_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_runtime_version(
      const std::string& value);
  std::string* _internal_mutable_runtime_version();

  public:
  // .dapr.proto.runtime.v1.AppConnectionProperties app_connection_properties = 7 [json_name = "appConnectionProperties"];
  bool has_app_connection_properties() const;
  void clear_app_connection_properties() ;
  const ::dapr::proto::runtime::v1::AppConnectionProperties& app_connection_properties() const;
  PROTOBUF_NODISCARD ::dapr::proto::runtime::v1::AppConnectionProperties* release_app_connection_properties();
  ::dapr::proto::runtime::v1::AppConnectionProperties* mutable_app_connection_properties();
  void set_allocated_app_connection_properties(::dapr::proto::runtime::v1::AppConnectionProperties* value);
  void unsafe_arena_set_allocated_app_connection_properties(::dapr::proto::runtime::v1::AppConnectionProperties* value);
  ::dapr::proto::runtime::v1::AppConnectionProperties* unsafe_arena_release_app_connection_properties();

  private:
  const ::dapr::proto::runtime::v1::AppConnectionProperties& _internal_app_connection_properties() const;
  ::dapr::proto::runtime::v1::AppConnectionProperties* _internal_mutable_app_connection_properties();

  public:
  // .dapr.proto.runtime.v1.ActorRuntime actor_runtime = 10 [json_name = "actorRuntime"];
  bool has_actor_runtime() const;
  void clear_actor_runtime() ;
  const ::dapr::proto::runtime::v1::ActorRuntime& actor_runtime() const;
  PROTOBUF_NODISCARD ::dapr::proto::runtime::v1::ActorRuntime* release_actor_runtime();
  ::dapr::proto::runtime::v1::ActorRuntime* mutable_actor_runtime();
  void set_allocated_actor_runtime(::dapr::proto::runtime::v1::ActorRuntime* value);
  void unsafe_arena_set_allocated_actor_runtime(::dapr::proto::runtime::v1::ActorRuntime* value);
  ::dapr::proto::runtime::v1::ActorRuntime* unsafe_arena_release_actor_runtime();

  private:
  const ::dapr::proto::runtime::v1::ActorRuntime& _internal_actor_runtime() const;
  ::dapr::proto::runtime::v1::ActorRuntime* _internal_mutable_actor_runtime();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetMetadataResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10, 7, 108, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount > active_actors_count_;
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents > registered_components_;
    ::google::protobuf::internal::MapField<GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        extended_metadata_;
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription > subscriptions_;
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint > http_endpoints_;
    ::google::protobuf::RepeatedPtrField<std::string> enabled_features_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr runtime_version_;
    ::dapr::proto::runtime::v1::AppConnectionProperties* app_connection_properties_;
    ::dapr::proto::runtime::v1::ActorRuntime* actor_runtime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class ActorRuntime final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ActorRuntime) */ {
 public:
  inline ActorRuntime() : ActorRuntime(nullptr) {}
  ~ActorRuntime() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ActorRuntime(::google::protobuf::internal::ConstantInitialized);

  ActorRuntime(const ActorRuntime& from);
  ActorRuntime(ActorRuntime&& from) noexcept
    : ActorRuntime() {
    *this = ::std::move(from);
  }

  inline ActorRuntime& operator=(const ActorRuntime& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorRuntime& operator=(ActorRuntime&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActorRuntime& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActorRuntime* internal_default_instance() {
    return reinterpret_cast<const ActorRuntime*>(
               &_ActorRuntime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(ActorRuntime& a, ActorRuntime& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorRuntime* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActorRuntime* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActorRuntime* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActorRuntime>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActorRuntime& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ActorRuntime& from) {
    ActorRuntime::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorRuntime* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.ActorRuntime";
  }
  protected:
  explicit ActorRuntime(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ActorRuntimeStatus = ActorRuntime_ActorRuntimeStatus;
  static constexpr ActorRuntimeStatus INITIALIZING = ActorRuntime_ActorRuntimeStatus_INITIALIZING;
  static constexpr ActorRuntimeStatus DISABLED = ActorRuntime_ActorRuntimeStatus_DISABLED;
  static constexpr ActorRuntimeStatus RUNNING = ActorRuntime_ActorRuntimeStatus_RUNNING;
  static inline bool ActorRuntimeStatus_IsValid(int value) {
    return ActorRuntime_ActorRuntimeStatus_IsValid(value);
  }
  static constexpr ActorRuntimeStatus ActorRuntimeStatus_MIN = ActorRuntime_ActorRuntimeStatus_ActorRuntimeStatus_MIN;
  static constexpr ActorRuntimeStatus ActorRuntimeStatus_MAX = ActorRuntime_ActorRuntimeStatus_ActorRuntimeStatus_MAX;
  static constexpr int ActorRuntimeStatus_ARRAYSIZE = ActorRuntime_ActorRuntimeStatus_ActorRuntimeStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ActorRuntimeStatus_descriptor() {
    return ActorRuntime_ActorRuntimeStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& ActorRuntimeStatus_Name(T value) {
    return ActorRuntime_ActorRuntimeStatus_Name(value);
  }
  static inline bool ActorRuntimeStatus_Parse(absl::string_view name, ActorRuntimeStatus* value) {
    return ActorRuntime_ActorRuntimeStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kActiveActorsFieldNumber = 2,
    kPlacementFieldNumber = 4,
    kRuntimeStatusFieldNumber = 1,
    kHostReadyFieldNumber = 3,
  };
  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors = 2 [json_name = "activeActors"];
  int active_actors_size() const;
  private:
  int _internal_active_actors_size() const;

  public:
  void clear_active_actors() ;
  ::dapr::proto::runtime::v1::ActiveActorsCount* mutable_active_actors(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >*
      mutable_active_actors();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>& _internal_active_actors() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>* _internal_mutable_active_actors();
  public:
  const ::dapr::proto::runtime::v1::ActiveActorsCount& active_actors(int index) const;
  ::dapr::proto::runtime::v1::ActiveActorsCount* add_active_actors();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >&
      active_actors() const;
  // string placement = 4 [json_name = "placement"];
  void clear_placement() ;
  const std::string& placement() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_placement(Arg_&& arg, Args_... args);
  std::string* mutable_placement();
  PROTOBUF_NODISCARD std::string* release_placement();
  void set_allocated_placement(std::string* ptr);

  private:
  const std::string& _internal_placement() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_placement(
      const std::string& value);
  std::string* _internal_mutable_placement();

  public:
  // .dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus runtime_status = 1 [json_name = "runtimeStatus"];
  void clear_runtime_status() ;
  ::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus runtime_status() const;
  void set_runtime_status(::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus value);

  private:
  ::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus _internal_runtime_status() const;
  void _internal_set_runtime_status(::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus value);

  public:
  // bool host_ready = 3 [json_name = "hostReady"];
  void clear_host_ready() ;
  bool host_ready() const;
  void set_host_ready(bool value);

  private:
  bool _internal_host_ready() const;
  void _internal_set_host_ready(bool value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ActorRuntime)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount > active_actors_;
    ::google::protobuf::internal::ArenaStringPtr placement_;
    int runtime_status_;
    bool host_ready_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class ActiveActorsCount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ActiveActorsCount) */ {
 public:
  inline ActiveActorsCount() : ActiveActorsCount(nullptr) {}
  ~ActiveActorsCount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ActiveActorsCount(::google::protobuf::internal::ConstantInitialized);

  ActiveActorsCount(const ActiveActorsCount& from);
  ActiveActorsCount(ActiveActorsCount&& from) noexcept
    : ActiveActorsCount() {
    *this = ::std::move(from);
  }

  inline ActiveActorsCount& operator=(const ActiveActorsCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActiveActorsCount& operator=(ActiveActorsCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActiveActorsCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActiveActorsCount* internal_default_instance() {
    return reinterpret_cast<const ActiveActorsCount*>(
               &_ActiveActorsCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(ActiveActorsCount& a, ActiveActorsCount& b) {
    a.Swap(&b);
  }
  inline void Swap(ActiveActorsCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActiveActorsCount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActiveActorsCount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActiveActorsCount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActiveActorsCount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ActiveActorsCount& from) {
    ActiveActorsCount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActiveActorsCount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.ActiveActorsCount";
  }
  protected:
  explicit ActiveActorsCount(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // string type = 1;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int32 count = 2;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ActiveActorsCount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class RegisteredComponents final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisteredComponents) */ {
 public:
  inline RegisteredComponents() : RegisteredComponents(nullptr) {}
  ~RegisteredComponents() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisteredComponents(::google::protobuf::internal::ConstantInitialized);

  RegisteredComponents(const RegisteredComponents& from);
  RegisteredComponents(RegisteredComponents&& from) noexcept
    : RegisteredComponents() {
    *this = ::std::move(from);
  }

  inline RegisteredComponents& operator=(const RegisteredComponents& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisteredComponents& operator=(RegisteredComponents&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisteredComponents& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisteredComponents* internal_default_instance() {
    return reinterpret_cast<const RegisteredComponents*>(
               &_RegisteredComponents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(RegisteredComponents& a, RegisteredComponents& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisteredComponents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisteredComponents* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisteredComponents* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisteredComponents>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisteredComponents& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisteredComponents& from) {
    RegisteredComponents::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisteredComponents* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.RegisteredComponents";
  }
  protected:
  explicit RegisteredComponents(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCapabilitiesFieldNumber = 4,
    kNameFieldNumber = 1,
    kTypeFieldNumber = 2,
    kVersionFieldNumber = 3,
  };
  // repeated string capabilities = 4;
  int capabilities_size() const;
  private:
  int _internal_capabilities_size() const;

  public:
  void clear_capabilities() ;
  const std::string& capabilities(int index) const;
  std::string* mutable_capabilities(int index);
  void set_capabilities(int index, const std::string& value);
  void set_capabilities(int index, std::string&& value);
  void set_capabilities(int index, const char* value);
  void set_capabilities(int index, const char* value, std::size_t size);
  void set_capabilities(int index, absl::string_view value);
  std::string* add_capabilities();
  void add_capabilities(const std::string& value);
  void add_capabilities(std::string&& value);
  void add_capabilities(const char* value);
  void add_capabilities(const char* value, std::size_t size);
  void add_capabilities(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& capabilities() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_capabilities();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_capabilities() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_capabilities();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string version = 3;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* ptr);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisteredComponents)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 78, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> capabilities_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class MetadataHTTPEndpoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.MetadataHTTPEndpoint) */ {
 public:
  inline MetadataHTTPEndpoint() : MetadataHTTPEndpoint(nullptr) {}
  ~MetadataHTTPEndpoint() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MetadataHTTPEndpoint(::google::protobuf::internal::ConstantInitialized);

  MetadataHTTPEndpoint(const MetadataHTTPEndpoint& from);
  MetadataHTTPEndpoint(MetadataHTTPEndpoint&& from) noexcept
    : MetadataHTTPEndpoint() {
    *this = ::std::move(from);
  }

  inline MetadataHTTPEndpoint& operator=(const MetadataHTTPEndpoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataHTTPEndpoint& operator=(MetadataHTTPEndpoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataHTTPEndpoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataHTTPEndpoint* internal_default_instance() {
    return reinterpret_cast<const MetadataHTTPEndpoint*>(
               &_MetadataHTTPEndpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(MetadataHTTPEndpoint& a, MetadataHTTPEndpoint& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataHTTPEndpoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataHTTPEndpoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataHTTPEndpoint* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataHTTPEndpoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetadataHTTPEndpoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MetadataHTTPEndpoint& from) {
    MetadataHTTPEndpoint::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetadataHTTPEndpoint* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.MetadataHTTPEndpoint";
  }
  protected:
  explicit MetadataHTTPEndpoint(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class AppConnectionProperties final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.AppConnectionProperties) */ {
 public:
  inline AppConnectionProperties() : AppConnectionProperties(nullptr) {}
  ~AppConnectionProperties() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AppConnectionProperties(::google::protobuf::internal::ConstantInitialized);

  AppConnectionProperties(const AppConnectionProperties& from);
  AppConnectionProperties(AppConnectionProperties&& from) noexcept
    : AppConnectionProperties() {
    *this = ::std::move(from);
  }

  inline AppConnectionProperties& operator=(const AppConnectionProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppConnectionProperties& operator=(AppConnectionProperties&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppConnectionProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppConnectionProperties* internal_default_instance() {
    return reinterpret_cast<const AppConnectionProperties*>(
               &_AppConnectionProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(AppConnectionProperties& a, AppConnectionProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(AppConnectionProperties* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppConnectionProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppConnectionProperties* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AppConnectionProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppConnectionProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AppConnectionProperties& from) {
    AppConnectionProperties::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppConnectionProperties* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.AppConnectionProperties";
  }
  protected:
  explicit AppConnectionProperties(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProtocolFieldNumber = 2,
    kChannelAddressFieldNumber = 3,
    kHealthFieldNumber = 5,
    kPortFieldNumber = 1,
    kMaxConcurrencyFieldNumber = 4,
  };
  // string protocol = 2;
  void clear_protocol() ;
  const std::string& protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_protocol();
  PROTOBUF_NODISCARD std::string* release_protocol();
  void set_allocated_protocol(std::string* ptr);

  private:
  const std::string& _internal_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_protocol(
      const std::string& value);
  std::string* _internal_mutable_protocol();

  public:
  // string channel_address = 3 [json_name = "channelAddress"];
  void clear_channel_address() ;
  const std::string& channel_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_address(Arg_&& arg, Args_... args);
  std::string* mutable_channel_address();
  PROTOBUF_NODISCARD std::string* release_channel_address();
  void set_allocated_channel_address(std::string* ptr);

  private:
  const std::string& _internal_channel_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_address(
      const std::string& value);
  std::string* _internal_mutable_channel_address();

  public:
  // .dapr.proto.runtime.v1.AppConnectionHealthProperties health = 5;
  bool has_health() const;
  void clear_health() ;
  const ::dapr::proto::runtime::v1::AppConnectionHealthProperties& health() const;
  PROTOBUF_NODISCARD ::dapr::proto::runtime::v1::AppConnectionHealthProperties* release_health();
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties* mutable_health();
  void set_allocated_health(::dapr::proto::runtime::v1::AppConnectionHealthProperties* value);
  void unsafe_arena_set_allocated_health(::dapr::proto::runtime::v1::AppConnectionHealthProperties* value);
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties* unsafe_arena_release_health();

  private:
  const ::dapr::proto::runtime::v1::AppConnectionHealthProperties& _internal_health() const;
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties* _internal_mutable_health();

  public:
  // int32 port = 1;
  void clear_port() ;
  ::int32_t port() const;
  void set_port(::int32_t value);

  private:
  ::int32_t _internal_port() const;
  void _internal_set_port(::int32_t value);

  public:
  // int32 max_concurrency = 4 [json_name = "maxConcurrency"];
  void clear_max_concurrency() ;
  ::int32_t max_concurrency() const;
  void set_max_concurrency(::int32_t value);

  private:
  ::int32_t _internal_max_concurrency() const;
  void _internal_set_max_concurrency(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.AppConnectionProperties)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 77, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr protocol_;
    ::google::protobuf::internal::ArenaStringPtr channel_address_;
    ::dapr::proto::runtime::v1::AppConnectionHealthProperties* health_;
    ::int32_t port_;
    ::int32_t max_concurrency_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class AppConnectionHealthProperties final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.AppConnectionHealthProperties) */ {
 public:
  inline AppConnectionHealthProperties() : AppConnectionHealthProperties(nullptr) {}
  ~AppConnectionHealthProperties() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AppConnectionHealthProperties(::google::protobuf::internal::ConstantInitialized);

  AppConnectionHealthProperties(const AppConnectionHealthProperties& from);
  AppConnectionHealthProperties(AppConnectionHealthProperties&& from) noexcept
    : AppConnectionHealthProperties() {
    *this = ::std::move(from);
  }

  inline AppConnectionHealthProperties& operator=(const AppConnectionHealthProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppConnectionHealthProperties& operator=(AppConnectionHealthProperties&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppConnectionHealthProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppConnectionHealthProperties* internal_default_instance() {
    return reinterpret_cast<const AppConnectionHealthProperties*>(
               &_AppConnectionHealthProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(AppConnectionHealthProperties& a, AppConnectionHealthProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(AppConnectionHealthProperties* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppConnectionHealthProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppConnectionHealthProperties* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AppConnectionHealthProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppConnectionHealthProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AppConnectionHealthProperties& from) {
    AppConnectionHealthProperties::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppConnectionHealthProperties* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.AppConnectionHealthProperties";
  }
  protected:
  explicit AppConnectionHealthProperties(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHealthCheckPathFieldNumber = 1,
    kHealthProbeIntervalFieldNumber = 2,
    kHealthProbeTimeoutFieldNumber = 3,
    kHealthThresholdFieldNumber = 4,
  };
  // string health_check_path = 1 [json_name = "healthCheckPath"];
  void clear_health_check_path() ;
  const std::string& health_check_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health_check_path(Arg_&& arg, Args_... args);
  std::string* mutable_health_check_path();
  PROTOBUF_NODISCARD std::string* release_health_check_path();
  void set_allocated_health_check_path(std::string* ptr);

  private:
  const std::string& _internal_health_check_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health_check_path(
      const std::string& value);
  std::string* _internal_mutable_health_check_path();

  public:
  // string health_probe_interval = 2 [json_name = "healthProbeInterval"];
  void clear_health_probe_interval() ;
  const std::string& health_probe_interval() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health_probe_interval(Arg_&& arg, Args_... args);
  std::string* mutable_health_probe_interval();
  PROTOBUF_NODISCARD std::string* release_health_probe_interval();
  void set_allocated_health_probe_interval(std::string* ptr);

  private:
  const std::string& _internal_health_probe_interval() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health_probe_interval(
      const std::string& value);
  std::string* _internal_mutable_health_probe_interval();

  public:
  // string health_probe_timeout = 3 [json_name = "healthProbeTimeout"];
  void clear_health_probe_timeout() ;
  const std::string& health_probe_timeout() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health_probe_timeout(Arg_&& arg, Args_... args);
  std::string* mutable_health_probe_timeout();
  PROTOBUF_NODISCARD std::string* release_health_probe_timeout();
  void set_allocated_health_probe_timeout(std::string* ptr);

  private:
  const std::string& _internal_health_probe_timeout() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health_probe_timeout(
      const std::string& value);
  std::string* _internal_mutable_health_probe_timeout();

  public:
  // int32 health_threshold = 4 [json_name = "healthThreshold"];
  void clear_health_threshold() ;
  ::int32_t health_threshold() const;
  void set_health_threshold(::int32_t value);

  private:
  ::int32_t _internal_health_threshold() const;
  void _internal_set_health_threshold(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.AppConnectionHealthProperties)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 118, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr health_check_path_;
    ::google::protobuf::internal::ArenaStringPtr health_probe_interval_;
    ::google::protobuf::internal::ArenaStringPtr health_probe_timeout_;
    ::int32_t health_threshold_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class PubsubSubscription_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<PubsubSubscription_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<PubsubSubscription_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  PubsubSubscription_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PubsubSubscription_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PubsubSubscription_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PubsubSubscription_MetadataEntry_DoNotUse& other);
  static const PubsubSubscription_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PubsubSubscription_MetadataEntry_DoNotUse*>(&_PubsubSubscription_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.PubsubSubscription.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.PubsubSubscription.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class PubsubSubscription final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PubsubSubscription) */ {
 public:
  inline PubsubSubscription() : PubsubSubscription(nullptr) {}
  ~PubsubSubscription() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PubsubSubscription(::google::protobuf::internal::ConstantInitialized);

  PubsubSubscription(const PubsubSubscription& from);
  PubsubSubscription(PubsubSubscription&& from) noexcept
    : PubsubSubscription() {
    *this = ::std::move(from);
  }

  inline PubsubSubscription& operator=(const PubsubSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline PubsubSubscription& operator=(PubsubSubscription&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PubsubSubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const PubsubSubscription* internal_default_instance() {
    return reinterpret_cast<const PubsubSubscription*>(
               &_PubsubSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(PubsubSubscription& a, PubsubSubscription& b) {
    a.Swap(&b);
  }
  inline void Swap(PubsubSubscription* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PubsubSubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PubsubSubscription* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PubsubSubscription>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PubsubSubscription& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PubsubSubscription& from) {
    PubsubSubscription::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PubsubSubscription* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.PubsubSubscription";
  }
  protected:
  explicit PubsubSubscription(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 3,
    kPubsubNameFieldNumber = 1,
    kTopicFieldNumber = 2,
    kDeadLetterTopicFieldNumber = 5,
    kRulesFieldNumber = 4,
  };
  // map<string, string> metadata = 3 [json_name = "metadata"];
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string pubsub_name = 1 [json_name = "pubsubname"];
  void clear_pubsub_name() ;
  const std::string& pubsub_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubsub_name(Arg_&& arg, Args_... args);
  std::string* mutable_pubsub_name();
  PROTOBUF_NODISCARD std::string* release_pubsub_name();
  void set_allocated_pubsub_name(std::string* ptr);

  private:
  const std::string& _internal_pubsub_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubsub_name(
      const std::string& value);
  std::string* _internal_mutable_pubsub_name();

  public:
  // string topic = 2 [json_name = "topic"];
  void clear_topic() ;
  const std::string& topic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  std::string* mutable_topic();
  PROTOBUF_NODISCARD std::string* release_topic();
  void set_allocated_topic(std::string* ptr);

  private:
  const std::string& _internal_topic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_topic(
      const std::string& value);
  std::string* _internal_mutable_topic();

  public:
  // string dead_letter_topic = 5 [json_name = "deadLetterTopic"];
  void clear_dead_letter_topic() ;
  const std::string& dead_letter_topic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dead_letter_topic(Arg_&& arg, Args_... args);
  std::string* mutable_dead_letter_topic();
  PROTOBUF_NODISCARD std::string* release_dead_letter_topic();
  void set_allocated_dead_letter_topic(std::string* ptr);

  private:
  const std::string& _internal_dead_letter_topic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dead_letter_topic(
      const std::string& value);
  std::string* _internal_mutable_dead_letter_topic();

  public:
  // .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4 [json_name = "rules"];
  bool has_rules() const;
  void clear_rules() ;
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& rules() const;
  PROTOBUF_NODISCARD ::dapr::proto::runtime::v1::PubsubSubscriptionRules* release_rules();
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* mutable_rules();
  void set_allocated_rules(::dapr::proto::runtime::v1::PubsubSubscriptionRules* value);
  void unsafe_arena_set_allocated_rules(::dapr::proto::runtime::v1::PubsubSubscriptionRules* value);
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* unsafe_arena_release_rules();

  private:
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& _internal_rules() const;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* _internal_mutable_rules();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PubsubSubscription)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 2, 90, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<PubsubSubscription_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::google::protobuf::internal::ArenaStringPtr dead_letter_topic_;
    ::dapr::proto::runtime::v1::PubsubSubscriptionRules* rules_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class PubsubSubscriptionRules final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PubsubSubscriptionRules) */ {
 public:
  inline PubsubSubscriptionRules() : PubsubSubscriptionRules(nullptr) {}
  ~PubsubSubscriptionRules() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PubsubSubscriptionRules(::google::protobuf::internal::ConstantInitialized);

  PubsubSubscriptionRules(const PubsubSubscriptionRules& from);
  PubsubSubscriptionRules(PubsubSubscriptionRules&& from) noexcept
    : PubsubSubscriptionRules() {
    *this = ::std::move(from);
  }

  inline PubsubSubscriptionRules& operator=(const PubsubSubscriptionRules& from) {
    CopyFrom(from);
    return *this;
  }
  inline PubsubSubscriptionRules& operator=(PubsubSubscriptionRules&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PubsubSubscriptionRules& default_instance() {
    return *internal_default_instance();
  }
  static inline const PubsubSubscriptionRules* internal_default_instance() {
    return reinterpret_cast<const PubsubSubscriptionRules*>(
               &_PubsubSubscriptionRules_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(PubsubSubscriptionRules& a, PubsubSubscriptionRules& b) {
    a.Swap(&b);
  }
  inline void Swap(PubsubSubscriptionRules* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PubsubSubscriptionRules* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PubsubSubscriptionRules* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PubsubSubscriptionRules>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PubsubSubscriptionRules& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PubsubSubscriptionRules& from) {
    PubsubSubscriptionRules::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PubsubSubscriptionRules* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.PubsubSubscriptionRules";
  }
  protected:
  explicit PubsubSubscriptionRules(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRulesFieldNumber = 1,
  };
  // repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
  int rules_size() const;
  private:
  int _internal_rules_size() const;

  public:
  void clear_rules() ;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRule* mutable_rules(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >*
      mutable_rules();
  private:
  const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscriptionRule>& _internal_rules() const;
  ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscriptionRule>* _internal_mutable_rules();
  public:
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRule& rules(int index) const;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRule* add_rules();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >&
      rules() const;
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PubsubSubscriptionRules)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule > rules_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class PubsubSubscriptionRule final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PubsubSubscriptionRule) */ {
 public:
  inline PubsubSubscriptionRule() : PubsubSubscriptionRule(nullptr) {}
  ~PubsubSubscriptionRule() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PubsubSubscriptionRule(::google::protobuf::internal::ConstantInitialized);

  PubsubSubscriptionRule(const PubsubSubscriptionRule& from);
  PubsubSubscriptionRule(PubsubSubscriptionRule&& from) noexcept
    : PubsubSubscriptionRule() {
    *this = ::std::move(from);
  }

  inline PubsubSubscriptionRule& operator=(const PubsubSubscriptionRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline PubsubSubscriptionRule& operator=(PubsubSubscriptionRule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PubsubSubscriptionRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const PubsubSubscriptionRule* internal_default_instance() {
    return reinterpret_cast<const PubsubSubscriptionRule*>(
               &_PubsubSubscriptionRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(PubsubSubscriptionRule& a, PubsubSubscriptionRule& b) {
    a.Swap(&b);
  }
  inline void Swap(PubsubSubscriptionRule* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PubsubSubscriptionRule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PubsubSubscriptionRule* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PubsubSubscriptionRule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PubsubSubscriptionRule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PubsubSubscriptionRule& from) {
    PubsubSubscriptionRule::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PubsubSubscriptionRule* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.PubsubSubscriptionRule";
  }
  protected:
  explicit PubsubSubscriptionRule(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchFieldNumber = 1,
    kPathFieldNumber = 2,
  };
  // string match = 1;
  void clear_match() ;
  const std::string& match() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_match(Arg_&& arg, Args_... args);
  std::string* mutable_match();
  PROTOBUF_NODISCARD std::string* release_match();
  void set_allocated_match(std::string* ptr);

  private:
  const std::string& _internal_match() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_match(
      const std::string& value);
  std::string* _internal_mutable_match();

  public:
  // string path = 2;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* ptr);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PubsubSubscriptionRule)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 62, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr match_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SetMetadataRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SetMetadataRequest) */ {
 public:
  inline SetMetadataRequest() : SetMetadataRequest(nullptr) {}
  ~SetMetadataRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMetadataRequest(::google::protobuf::internal::ConstantInitialized);

  SetMetadataRequest(const SetMetadataRequest& from);
  SetMetadataRequest(SetMetadataRequest&& from) noexcept
    : SetMetadataRequest() {
    *this = ::std::move(from);
  }

  inline SetMetadataRequest& operator=(const SetMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMetadataRequest& operator=(SetMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const SetMetadataRequest*>(
               &_SetMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(SetMetadataRequest& a, SetMetadataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMetadataRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMetadataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMetadataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMetadataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMetadataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMetadataRequest& from) {
    SetMetadataRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMetadataRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SetMetadataRequest";
  }
  protected:
  explicit SetMetadataRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* ptr);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SetMetadataRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetConfigurationRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetConfigurationRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetConfigurationRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetConfigurationRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigurationRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetConfigurationRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetConfigurationRequest_MetadataEntry_DoNotUse& other);
  static const GetConfigurationRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetConfigurationRequest_MetadataEntry_DoNotUse*>(&_GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetConfigurationRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetConfigurationRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetConfigurationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetConfigurationRequest) */ {
 public:
  inline GetConfigurationRequest() : GetConfigurationRequest(nullptr) {}
  ~GetConfigurationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigurationRequest(::google::protobuf::internal::ConstantInitialized);

  GetConfigurationRequest(const GetConfigurationRequest& from);
  GetConfigurationRequest(GetConfigurationRequest&& from) noexcept
    : GetConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline GetConfigurationRequest& operator=(const GetConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigurationRequest& operator=(GetConfigurationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigurationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationRequest*>(
               &_GetConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(GetConfigurationRequest& a, GetConfigurationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConfigurationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigurationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigurationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConfigurationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConfigurationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetConfigurationRequest& from) {
    GetConfigurationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConfigurationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetConfigurationRequest";
  }
  protected:
  explicit GetConfigurationRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kMetadataFieldNumber = 3,
    kStoreNameFieldNumber = 1,
  };
  // repeated string keys = 2;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  const std::string& keys(int index) const;
  std::string* mutable_keys(int index);
  void set_keys(int index, const std::string& value);
  void set_keys(int index, std::string&& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, std::size_t size);
  void set_keys(int index, absl::string_view value);
  std::string* add_keys();
  void add_keys(const std::string& value);
  void add_keys(std::string&& value);
  void add_keys(const char* value);
  void add_keys(const char* value, std::size_t size);
  void add_keys(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keys();

  public:
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetConfigurationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 1, 76, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> keys_;
    ::google::protobuf::internal::MapField<GetConfigurationRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetConfigurationResponse_ItemsEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetConfigurationResponse_ItemsEntry_DoNotUse, 
    std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetConfigurationResponse_ItemsEntry_DoNotUse, 
    std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetConfigurationResponse_ItemsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigurationResponse_ItemsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetConfigurationResponse_ItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetConfigurationResponse_ItemsEntry_DoNotUse& other);
  static const GetConfigurationResponse_ItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetConfigurationResponse_ItemsEntry_DoNotUse*>(&_GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetConfigurationResponse.ItemsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetConfigurationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetConfigurationResponse) */ {
 public:
  inline GetConfigurationResponse() : GetConfigurationResponse(nullptr) {}
  ~GetConfigurationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigurationResponse(::google::protobuf::internal::ConstantInitialized);

  GetConfigurationResponse(const GetConfigurationResponse& from);
  GetConfigurationResponse(GetConfigurationResponse&& from) noexcept
    : GetConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline GetConfigurationResponse& operator=(const GetConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigurationResponse& operator=(GetConfigurationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigurationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationResponse*>(
               &_GetConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(GetConfigurationResponse& a, GetConfigurationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConfigurationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigurationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigurationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConfigurationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConfigurationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetConfigurationResponse& from) {
    GetConfigurationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConfigurationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetConfigurationResponse";
  }
  protected:
  explicit GetConfigurationResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& items() const;
  ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* mutable_items();

  private:
  const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& _internal_items() const;
  ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* _internal_mutable_items();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetConfigurationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 2, 60, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetConfigurationResponse_ItemsEntry_DoNotUse, std::string, ::dapr::proto::common::v1::ConfigurationItem,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubscribeConfigurationRequest_MetadataEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<SubscribeConfigurationRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<SubscribeConfigurationRequest_MetadataEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  SubscribeConfigurationRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeConfigurationRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SubscribeConfigurationRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SubscribeConfigurationRequest_MetadataEntry_DoNotUse& other);
  static const SubscribeConfigurationRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SubscribeConfigurationRequest_MetadataEntry_DoNotUse*>(&_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.SubscribeConfigurationRequest.MetadataEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.SubscribeConfigurationRequest.MetadataEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class SubscribeConfigurationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubscribeConfigurationRequest) */ {
 public:
  inline SubscribeConfigurationRequest() : SubscribeConfigurationRequest(nullptr) {}
  ~SubscribeConfigurationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeConfigurationRequest(::google::protobuf::internal::ConstantInitialized);

  SubscribeConfigurationRequest(const SubscribeConfigurationRequest& from);
  SubscribeConfigurationRequest(SubscribeConfigurationRequest&& from) noexcept
    : SubscribeConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeConfigurationRequest& operator=(const SubscribeConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeConfigurationRequest& operator=(SubscribeConfigurationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeConfigurationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeConfigurationRequest*>(
               &_SubscribeConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(SubscribeConfigurationRequest& a, SubscribeConfigurationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeConfigurationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeConfigurationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeConfigurationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeConfigurationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeConfigurationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubscribeConfigurationRequest& from) {
    SubscribeConfigurationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeConfigurationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubscribeConfigurationRequest";
  }
  protected:
  explicit SubscribeConfigurationRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kMetadataFieldNumber = 3,
    kStoreNameFieldNumber = 1,
  };
  // repeated string keys = 2;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  const std::string& keys(int index) const;
  std::string* mutable_keys(int index);
  void set_keys(int index, const std::string& value);
  void set_keys(int index, std::string&& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, std::size_t size);
  void set_keys(int index, absl::string_view value);
  std::string* add_keys();
  void add_keys(const std::string& value);
  void add_keys(std::string&& value);
  void add_keys(const char* value);
  void add_keys(const char* value, std::size_t size);
  void add_keys(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keys();

  public:
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3, 1, 82, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> keys_;
    ::google::protobuf::internal::MapField<SubscribeConfigurationRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class UnsubscribeConfigurationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest) */ {
 public:
  inline UnsubscribeConfigurationRequest() : UnsubscribeConfigurationRequest(nullptr) {}
  ~UnsubscribeConfigurationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnsubscribeConfigurationRequest(::google::protobuf::internal::ConstantInitialized);

  UnsubscribeConfigurationRequest(const UnsubscribeConfigurationRequest& from);
  UnsubscribeConfigurationRequest(UnsubscribeConfigurationRequest&& from) noexcept
    : UnsubscribeConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline UnsubscribeConfigurationRequest& operator=(const UnsubscribeConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsubscribeConfigurationRequest& operator=(UnsubscribeConfigurationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnsubscribeConfigurationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnsubscribeConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const UnsubscribeConfigurationRequest*>(
               &_UnsubscribeConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(UnsubscribeConfigurationRequest& a, UnsubscribeConfigurationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsubscribeConfigurationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsubscribeConfigurationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnsubscribeConfigurationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnsubscribeConfigurationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnsubscribeConfigurationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnsubscribeConfigurationRequest& from) {
    UnsubscribeConfigurationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsubscribeConfigurationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.UnsubscribeConfigurationRequest";
  }
  protected:
  explicit UnsubscribeConfigurationRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStoreNameFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // string store_name = 1;
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string id = 2;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 74, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubscribeConfigurationResponse_ItemsEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<SubscribeConfigurationResponse_ItemsEntry_DoNotUse, 
    std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::google::protobuf::internal::MapEntry<SubscribeConfigurationResponse_ItemsEntry_DoNotUse, 
    std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  SubscribeConfigurationResponse_ItemsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeConfigurationResponse_ItemsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SubscribeConfigurationResponse_ItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SubscribeConfigurationResponse_ItemsEntry_DoNotUse& other);
  static const SubscribeConfigurationResponse_ItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SubscribeConfigurationResponse_ItemsEntry_DoNotUse*>(&_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.SubscribeConfigurationResponse.ItemsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class SubscribeConfigurationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubscribeConfigurationResponse) */ {
 public:
  inline SubscribeConfigurationResponse() : SubscribeConfigurationResponse(nullptr) {}
  ~SubscribeConfigurationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeConfigurationResponse(::google::protobuf::internal::ConstantInitialized);

  SubscribeConfigurationResponse(const SubscribeConfigurationResponse& from);
  SubscribeConfigurationResponse(SubscribeConfigurationResponse&& from) noexcept
    : SubscribeConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline SubscribeConfigurationResponse& operator=(const SubscribeConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeConfigurationResponse& operator=(SubscribeConfigurationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeConfigurationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeConfigurationResponse*>(
               &_SubscribeConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(SubscribeConfigurationResponse& a, SubscribeConfigurationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeConfigurationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeConfigurationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeConfigurationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeConfigurationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeConfigurationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubscribeConfigurationResponse& from) {
    SubscribeConfigurationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeConfigurationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubscribeConfigurationResponse";
  }
  protected:
  explicit SubscribeConfigurationResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& items() const;
  ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* mutable_items();

  private:
  const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& _internal_items() const;
  ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* _internal_mutable_items();

  public:
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2, 2, 68, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<SubscribeConfigurationResponse_ItemsEntry_DoNotUse, std::string, ::dapr::proto::common::v1::ConfigurationItem,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        items_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class UnsubscribeConfigurationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse) */ {
 public:
  inline UnsubscribeConfigurationResponse() : UnsubscribeConfigurationResponse(nullptr) {}
  ~UnsubscribeConfigurationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnsubscribeConfigurationResponse(::google::protobuf::internal::ConstantInitialized);

  UnsubscribeConfigurationResponse(const UnsubscribeConfigurationResponse& from);
  UnsubscribeConfigurationResponse(UnsubscribeConfigurationResponse&& from) noexcept
    : UnsubscribeConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline UnsubscribeConfigurationResponse& operator=(const UnsubscribeConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsubscribeConfigurationResponse& operator=(UnsubscribeConfigurationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnsubscribeConfigurationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnsubscribeConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const UnsubscribeConfigurationResponse*>(
               &_UnsubscribeConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(UnsubscribeConfigurationResponse& a, UnsubscribeConfigurationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsubscribeConfigurationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsubscribeConfigurationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnsubscribeConfigurationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnsubscribeConfigurationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnsubscribeConfigurationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnsubscribeConfigurationResponse& from) {
    UnsubscribeConfigurationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsubscribeConfigurationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.UnsubscribeConfigurationResponse";
  }
  protected:
  explicit UnsubscribeConfigurationResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kOkFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* ptr);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool ok = 1;
  void clear_ok() ;
  bool ok() const;
  void set_ok(bool value);

  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 70, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool ok_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class TryLockRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TryLockRequest) */ {
 public:
  inline TryLockRequest() : TryLockRequest(nullptr) {}
  ~TryLockRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TryLockRequest(::google::protobuf::internal::ConstantInitialized);

  TryLockRequest(const TryLockRequest& from);
  TryLockRequest(TryLockRequest&& from) noexcept
    : TryLockRequest() {
    *this = ::std::move(from);
  }

  inline TryLockRequest& operator=(const TryLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TryLockRequest& operator=(TryLockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TryLockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TryLockRequest* internal_default_instance() {
    return reinterpret_cast<const TryLockRequest*>(
               &_TryLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(TryLockRequest& a, TryLockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TryLockRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TryLockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TryLockRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TryLockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TryLockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TryLockRequest& from) {
    TryLockRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TryLockRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.TryLockRequest";
  }
  protected:
  explicit TryLockRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStoreNameFieldNumber = 1,
    kResourceIdFieldNumber = 2,
    kLockOwnerFieldNumber = 3,
    kExpiryInSecondsFieldNumber = 4,
  };
  // string store_name = 1 [json_name = "storeName"];
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string resource_id = 2 [json_name = "resourceId"];
  void clear_resource_id() ;
  const std::string& resource_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_id(Arg_&& arg, Args_... args);
  std::string* mutable_resource_id();
  PROTOBUF_NODISCARD std::string* release_resource_id();
  void set_allocated_resource_id(std::string* ptr);

  private:
  const std::string& _internal_resource_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_id(
      const std::string& value);
  std::string* _internal_mutable_resource_id();

  public:
  // string lock_owner = 3 [json_name = "lockOwner"];
  void clear_lock_owner() ;
  const std::string& lock_owner() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lock_owner(Arg_&& arg, Args_... args);
  std::string* mutable_lock_owner();
  PROTOBUF_NODISCARD std::string* release_lock_owner();
  void set_allocated_lock_owner(std::string* ptr);

  private:
  const std::string& _internal_lock_owner() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lock_owner(
      const std::string& value);
  std::string* _internal_mutable_lock_owner();

  public:
  // int32 expiry_in_seconds = 4 [json_name = "expiryInSeconds"];
  void clear_expiry_in_seconds() ;
  ::int32_t expiry_in_seconds() const;
  void set_expiry_in_seconds(::int32_t value);

  private:
  ::int32_t _internal_expiry_in_seconds() const;
  void _internal_set_expiry_in_seconds(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TryLockRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 76, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr resource_id_;
    ::google::protobuf::internal::ArenaStringPtr lock_owner_;
    ::int32_t expiry_in_seconds_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class TryLockResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TryLockResponse) */ {
 public:
  inline TryLockResponse() : TryLockResponse(nullptr) {}
  ~TryLockResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TryLockResponse(::google::protobuf::internal::ConstantInitialized);

  TryLockResponse(const TryLockResponse& from);
  TryLockResponse(TryLockResponse&& from) noexcept
    : TryLockResponse() {
    *this = ::std::move(from);
  }

  inline TryLockResponse& operator=(const TryLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TryLockResponse& operator=(TryLockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TryLockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TryLockResponse* internal_default_instance() {
    return reinterpret_cast<const TryLockResponse*>(
               &_TryLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(TryLockResponse& a, TryLockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TryLockResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TryLockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TryLockResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TryLockResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TryLockResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TryLockResponse& from) {
    TryLockResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TryLockResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.TryLockResponse";
  }
  protected:
  explicit TryLockResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TryLockResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class UnlockRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnlockRequest) */ {
 public:
  inline UnlockRequest() : UnlockRequest(nullptr) {}
  ~UnlockRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnlockRequest(::google::protobuf::internal::ConstantInitialized);

  UnlockRequest(const UnlockRequest& from);
  UnlockRequest(UnlockRequest&& from) noexcept
    : UnlockRequest() {
    *this = ::std::move(from);
  }

  inline UnlockRequest& operator=(const UnlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnlockRequest& operator=(UnlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnlockRequest* internal_default_instance() {
    return reinterpret_cast<const UnlockRequest*>(
               &_UnlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(UnlockRequest& a, UnlockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnlockRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnlockRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnlockRequest& from) {
    UnlockRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnlockRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.UnlockRequest";
  }
  protected:
  explicit UnlockRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStoreNameFieldNumber = 1,
    kResourceIdFieldNumber = 2,
    kLockOwnerFieldNumber = 3,
  };
  // string store_name = 1 [json_name = "storeName"];
  void clear_store_name() ;
  const std::string& store_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_name(Arg_&& arg, Args_... args);
  std::string* mutable_store_name();
  PROTOBUF_NODISCARD std::string* release_store_name();
  void set_allocated_store_name(std::string* ptr);

  private:
  const std::string& _internal_store_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_name(
      const std::string& value);
  std::string* _internal_mutable_store_name();

  public:
  // string resource_id = 2 [json_name = "resourceId"];
  void clear_resource_id() ;
  const std::string& resource_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_id(Arg_&& arg, Args_... args);
  std::string* mutable_resource_id();
  PROTOBUF_NODISCARD std::string* release_resource_id();
  void set_allocated_resource_id(std::string* ptr);

  private:
  const std::string& _internal_resource_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_id(
      const std::string& value);
  std::string* _internal_mutable_resource_id();

  public:
  // string lock_owner = 3 [json_name = "lockOwner"];
  void clear_lock_owner() ;
  const std::string& lock_owner() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lock_owner(Arg_&& arg, Args_... args);
  std::string* mutable_lock_owner();
  PROTOBUF_NODISCARD std::string* release_lock_owner();
  void set_allocated_lock_owner(std::string* ptr);

  private:
  const std::string& _internal_lock_owner() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lock_owner(
      const std::string& value);
  std::string* _internal_mutable_lock_owner();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnlockRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 75, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr store_name_;
    ::google::protobuf::internal::ArenaStringPtr resource_id_;
    ::google::protobuf::internal::ArenaStringPtr lock_owner_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class UnlockResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnlockResponse) */ {
 public:
  inline UnlockResponse() : UnlockResponse(nullptr) {}
  ~UnlockResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UnlockResponse(::google::protobuf::internal::ConstantInitialized);

  UnlockResponse(const UnlockResponse& from);
  UnlockResponse(UnlockResponse&& from) noexcept
    : UnlockResponse() {
    *this = ::std::move(from);
  }

  inline UnlockResponse& operator=(const UnlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnlockResponse& operator=(UnlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnlockResponse* internal_default_instance() {
    return reinterpret_cast<const UnlockResponse*>(
               &_UnlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(UnlockResponse& a, UnlockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UnlockResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnlockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnlockResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnlockResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnlockResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UnlockResponse& from) {
    UnlockResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnlockResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.UnlockResponse";
  }
  protected:
  explicit UnlockResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Status = UnlockResponse_Status;
  static constexpr Status SUCCESS = UnlockResponse_Status_SUCCESS;
  static constexpr Status LOCK_DOES_NOT_EXIST = UnlockResponse_Status_LOCK_DOES_NOT_EXIST;
  static constexpr Status LOCK_BELONGS_TO_OTHERS = UnlockResponse_Status_LOCK_BELONGS_TO_OTHERS;
  static constexpr Status INTERNAL_ERROR = UnlockResponse_Status_INTERNAL_ERROR;
  static inline bool Status_IsValid(int value) {
    return UnlockResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = UnlockResponse_Status_Status_MIN;
  static constexpr Status Status_MAX = UnlockResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = UnlockResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return UnlockResponse_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return UnlockResponse_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return UnlockResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
  void clear_status() ;
  ::dapr::proto::runtime::v1::UnlockResponse_Status status() const;
  void set_status(::dapr::proto::runtime::v1::UnlockResponse_Status value);

  private:
  ::dapr::proto::runtime::v1::UnlockResponse_Status _internal_status() const;
  void _internal_set_status(::dapr::proto::runtime::v1::UnlockResponse_Status value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnlockResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleGetKeyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleGetKeyRequest) */ {
 public:
  inline SubtleGetKeyRequest() : SubtleGetKeyRequest(nullptr) {}
  ~SubtleGetKeyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleGetKeyRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleGetKeyRequest(const SubtleGetKeyRequest& from);
  SubtleGetKeyRequest(SubtleGetKeyRequest&& from) noexcept
    : SubtleGetKeyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleGetKeyRequest& operator=(const SubtleGetKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleGetKeyRequest& operator=(SubtleGetKeyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleGetKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleGetKeyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleGetKeyRequest*>(
               &_SubtleGetKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(SubtleGetKeyRequest& a, SubtleGetKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleGetKeyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleGetKeyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleGetKeyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleGetKeyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleGetKeyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleGetKeyRequest& from) {
    SubtleGetKeyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleGetKeyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleGetKeyRequest";
  }
  protected:
  explicit SubtleGetKeyRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using KeyFormat = SubtleGetKeyRequest_KeyFormat;
  static constexpr KeyFormat PEM = SubtleGetKeyRequest_KeyFormat_PEM;
  static constexpr KeyFormat JSON = SubtleGetKeyRequest_KeyFormat_JSON;
  static inline bool KeyFormat_IsValid(int value) {
    return SubtleGetKeyRequest_KeyFormat_IsValid(value);
  }
  static constexpr KeyFormat KeyFormat_MIN = SubtleGetKeyRequest_KeyFormat_KeyFormat_MIN;
  static constexpr KeyFormat KeyFormat_MAX = SubtleGetKeyRequest_KeyFormat_KeyFormat_MAX;
  static constexpr int KeyFormat_ARRAYSIZE = SubtleGetKeyRequest_KeyFormat_KeyFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* KeyFormat_descriptor() {
    return SubtleGetKeyRequest_KeyFormat_descriptor();
  }
  template <typename T>
  static inline const std::string& KeyFormat_Name(T value) {
    return SubtleGetKeyRequest_KeyFormat_Name(value);
  }
  static inline bool KeyFormat_Parse(absl::string_view name, KeyFormat* value) {
    return SubtleGetKeyRequest_KeyFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kNameFieldNumber = 2,
    kFormatFieldNumber = 3,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
  void clear_format() ;
  ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat format() const;
  void set_format(::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat value);

  private:
  ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat _internal_format() const;
  void _internal_set_format(::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleGetKeyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 68, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    int format_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleGetKeyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleGetKeyResponse) */ {
 public:
  inline SubtleGetKeyResponse() : SubtleGetKeyResponse(nullptr) {}
  ~SubtleGetKeyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleGetKeyResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleGetKeyResponse(const SubtleGetKeyResponse& from);
  SubtleGetKeyResponse(SubtleGetKeyResponse&& from) noexcept
    : SubtleGetKeyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleGetKeyResponse& operator=(const SubtleGetKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleGetKeyResponse& operator=(SubtleGetKeyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleGetKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleGetKeyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleGetKeyResponse*>(
               &_SubtleGetKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(SubtleGetKeyResponse& a, SubtleGetKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleGetKeyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleGetKeyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleGetKeyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleGetKeyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleGetKeyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleGetKeyResponse& from) {
    SubtleGetKeyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleGetKeyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleGetKeyResponse";
  }
  protected:
  explicit SubtleGetKeyResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPublicKeyFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string public_key = 2 [json_name = "publicKey"];
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* ptr);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleGetKeyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 65, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleEncryptRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleEncryptRequest) */ {
 public:
  inline SubtleEncryptRequest() : SubtleEncryptRequest(nullptr) {}
  ~SubtleEncryptRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleEncryptRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleEncryptRequest(const SubtleEncryptRequest& from);
  SubtleEncryptRequest(SubtleEncryptRequest&& from) noexcept
    : SubtleEncryptRequest() {
    *this = ::std::move(from);
  }

  inline SubtleEncryptRequest& operator=(const SubtleEncryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleEncryptRequest& operator=(SubtleEncryptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleEncryptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleEncryptRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleEncryptRequest*>(
               &_SubtleEncryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(SubtleEncryptRequest& a, SubtleEncryptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleEncryptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleEncryptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleEncryptRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleEncryptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleEncryptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleEncryptRequest& from) {
    SubtleEncryptRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleEncryptRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleEncryptRequest";
  }
  protected:
  explicit SubtleEncryptRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kPlaintextFieldNumber = 2,
    kAlgorithmFieldNumber = 3,
    kKeyNameFieldNumber = 4,
    kNonceFieldNumber = 5,
    kAssociatedDataFieldNumber = 6,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // bytes plaintext = 2;
  void clear_plaintext() ;
  const std::string& plaintext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plaintext(Arg_&& arg, Args_... args);
  std::string* mutable_plaintext();
  PROTOBUF_NODISCARD std::string* release_plaintext();
  void set_allocated_plaintext(std::string* ptr);

  private:
  const std::string& _internal_plaintext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plaintext(
      const std::string& value);
  std::string* _internal_mutable_plaintext();

  public:
  // string algorithm = 3;
  void clear_algorithm() ;
  const std::string& algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_algorithm();
  PROTOBUF_NODISCARD std::string* release_algorithm();
  void set_allocated_algorithm(std::string* ptr);

  private:
  const std::string& _internal_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_algorithm(
      const std::string& value);
  std::string* _internal_mutable_algorithm();

  public:
  // string key_name = 4 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // bytes nonce = 5;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* ptr);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // bytes associated_data = 6 [json_name = "associatedData"];
  void clear_associated_data() ;
  const std::string& associated_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_associated_data(Arg_&& arg, Args_... args);
  std::string* mutable_associated_data();
  PROTOBUF_NODISCARD std::string* release_associated_data();
  void set_allocated_associated_data(std::string* ptr);

  private:
  const std::string& _internal_associated_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_associated_data(
      const std::string& value);
  std::string* _internal_mutable_associated_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleEncryptRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 82, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr plaintext_;
    ::google::protobuf::internal::ArenaStringPtr algorithm_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    ::google::protobuf::internal::ArenaStringPtr associated_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleEncryptResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleEncryptResponse) */ {
 public:
  inline SubtleEncryptResponse() : SubtleEncryptResponse(nullptr) {}
  ~SubtleEncryptResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleEncryptResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleEncryptResponse(const SubtleEncryptResponse& from);
  SubtleEncryptResponse(SubtleEncryptResponse&& from) noexcept
    : SubtleEncryptResponse() {
    *this = ::std::move(from);
  }

  inline SubtleEncryptResponse& operator=(const SubtleEncryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleEncryptResponse& operator=(SubtleEncryptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleEncryptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleEncryptResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleEncryptResponse*>(
               &_SubtleEncryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(SubtleEncryptResponse& a, SubtleEncryptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleEncryptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleEncryptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleEncryptResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleEncryptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleEncryptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleEncryptResponse& from) {
    SubtleEncryptResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleEncryptResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleEncryptResponse";
  }
  protected:
  explicit SubtleEncryptResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCiphertextFieldNumber = 1,
    kTagFieldNumber = 2,
  };
  // bytes ciphertext = 1;
  void clear_ciphertext() ;
  const std::string& ciphertext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ciphertext(Arg_&& arg, Args_... args);
  std::string* mutable_ciphertext();
  PROTOBUF_NODISCARD std::string* release_ciphertext();
  void set_allocated_ciphertext(std::string* ptr);

  private:
  const std::string& _internal_ciphertext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ciphertext(
      const std::string& value);
  std::string* _internal_mutable_ciphertext();

  public:
  // bytes tag = 2;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* ptr);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleEncryptResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr ciphertext_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleDecryptRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleDecryptRequest) */ {
 public:
  inline SubtleDecryptRequest() : SubtleDecryptRequest(nullptr) {}
  ~SubtleDecryptRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleDecryptRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleDecryptRequest(const SubtleDecryptRequest& from);
  SubtleDecryptRequest(SubtleDecryptRequest&& from) noexcept
    : SubtleDecryptRequest() {
    *this = ::std::move(from);
  }

  inline SubtleDecryptRequest& operator=(const SubtleDecryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleDecryptRequest& operator=(SubtleDecryptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleDecryptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleDecryptRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleDecryptRequest*>(
               &_SubtleDecryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(SubtleDecryptRequest& a, SubtleDecryptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleDecryptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleDecryptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleDecryptRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleDecryptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleDecryptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleDecryptRequest& from) {
    SubtleDecryptRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleDecryptRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleDecryptRequest";
  }
  protected:
  explicit SubtleDecryptRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kCiphertextFieldNumber = 2,
    kAlgorithmFieldNumber = 3,
    kKeyNameFieldNumber = 4,
    kNonceFieldNumber = 5,
    kTagFieldNumber = 6,
    kAssociatedDataFieldNumber = 7,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // bytes ciphertext = 2;
  void clear_ciphertext() ;
  const std::string& ciphertext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ciphertext(Arg_&& arg, Args_... args);
  std::string* mutable_ciphertext();
  PROTOBUF_NODISCARD std::string* release_ciphertext();
  void set_allocated_ciphertext(std::string* ptr);

  private:
  const std::string& _internal_ciphertext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ciphertext(
      const std::string& value);
  std::string* _internal_mutable_ciphertext();

  public:
  // string algorithm = 3;
  void clear_algorithm() ;
  const std::string& algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_algorithm();
  PROTOBUF_NODISCARD std::string* release_algorithm();
  void set_allocated_algorithm(std::string* ptr);

  private:
  const std::string& _internal_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_algorithm(
      const std::string& value);
  std::string* _internal_mutable_algorithm();

  public:
  // string key_name = 4 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // bytes nonce = 5;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* ptr);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // bytes tag = 6;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* ptr);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // bytes associated_data = 7 [json_name = "associatedData"];
  void clear_associated_data() ;
  const std::string& associated_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_associated_data(Arg_&& arg, Args_... args);
  std::string* mutable_associated_data();
  PROTOBUF_NODISCARD std::string* release_associated_data();
  void set_allocated_associated_data(std::string* ptr);

  private:
  const std::string& _internal_associated_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_associated_data(
      const std::string& value);
  std::string* _internal_mutable_associated_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleDecryptRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 82, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr ciphertext_;
    ::google::protobuf::internal::ArenaStringPtr algorithm_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::google::protobuf::internal::ArenaStringPtr associated_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleDecryptResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleDecryptResponse) */ {
 public:
  inline SubtleDecryptResponse() : SubtleDecryptResponse(nullptr) {}
  ~SubtleDecryptResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleDecryptResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleDecryptResponse(const SubtleDecryptResponse& from);
  SubtleDecryptResponse(SubtleDecryptResponse&& from) noexcept
    : SubtleDecryptResponse() {
    *this = ::std::move(from);
  }

  inline SubtleDecryptResponse& operator=(const SubtleDecryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleDecryptResponse& operator=(SubtleDecryptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleDecryptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleDecryptResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleDecryptResponse*>(
               &_SubtleDecryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(SubtleDecryptResponse& a, SubtleDecryptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleDecryptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleDecryptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleDecryptResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleDecryptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleDecryptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleDecryptResponse& from) {
    SubtleDecryptResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleDecryptResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleDecryptResponse";
  }
  protected:
  explicit SubtleDecryptResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlaintextFieldNumber = 1,
  };
  // bytes plaintext = 1;
  void clear_plaintext() ;
  const std::string& plaintext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plaintext(Arg_&& arg, Args_... args);
  std::string* mutable_plaintext();
  PROTOBUF_NODISCARD std::string* release_plaintext();
  void set_allocated_plaintext(std::string* ptr);

  private:
  const std::string& _internal_plaintext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plaintext(
      const std::string& value);
  std::string* _internal_mutable_plaintext();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleDecryptResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr plaintext_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleWrapKeyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleWrapKeyRequest) */ {
 public:
  inline SubtleWrapKeyRequest() : SubtleWrapKeyRequest(nullptr) {}
  ~SubtleWrapKeyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleWrapKeyRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleWrapKeyRequest(const SubtleWrapKeyRequest& from);
  SubtleWrapKeyRequest(SubtleWrapKeyRequest&& from) noexcept
    : SubtleWrapKeyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleWrapKeyRequest& operator=(const SubtleWrapKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleWrapKeyRequest& operator=(SubtleWrapKeyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleWrapKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleWrapKeyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleWrapKeyRequest*>(
               &_SubtleWrapKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(SubtleWrapKeyRequest& a, SubtleWrapKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleWrapKeyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleWrapKeyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleWrapKeyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleWrapKeyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleWrapKeyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleWrapKeyRequest& from) {
    SubtleWrapKeyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleWrapKeyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleWrapKeyRequest";
  }
  protected:
  explicit SubtleWrapKeyRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kPlaintextKeyFieldNumber = 2,
    kAlgorithmFieldNumber = 3,
    kKeyNameFieldNumber = 4,
    kNonceFieldNumber = 5,
    kAssociatedDataFieldNumber = 6,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // bytes plaintext_key = 2 [json_name = "plaintextKey"];
  void clear_plaintext_key() ;
  const std::string& plaintext_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plaintext_key(Arg_&& arg, Args_... args);
  std::string* mutable_plaintext_key();
  PROTOBUF_NODISCARD std::string* release_plaintext_key();
  void set_allocated_plaintext_key(std::string* ptr);

  private:
  const std::string& _internal_plaintext_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plaintext_key(
      const std::string& value);
  std::string* _internal_mutable_plaintext_key();

  public:
  // string algorithm = 3;
  void clear_algorithm() ;
  const std::string& algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_algorithm();
  PROTOBUF_NODISCARD std::string* release_algorithm();
  void set_allocated_algorithm(std::string* ptr);

  private:
  const std::string& _internal_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_algorithm(
      const std::string& value);
  std::string* _internal_mutable_algorithm();

  public:
  // string key_name = 4 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // bytes nonce = 5;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* ptr);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // bytes associated_data = 6 [json_name = "associatedData"];
  void clear_associated_data() ;
  const std::string& associated_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_associated_data(Arg_&& arg, Args_... args);
  std::string* mutable_associated_data();
  PROTOBUF_NODISCARD std::string* release_associated_data();
  void set_allocated_associated_data(std::string* ptr);

  private:
  const std::string& _internal_associated_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_associated_data(
      const std::string& value);
  std::string* _internal_mutable_associated_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 82, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr plaintext_key_;
    ::google::protobuf::internal::ArenaStringPtr algorithm_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    ::google::protobuf::internal::ArenaStringPtr associated_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleWrapKeyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleWrapKeyResponse) */ {
 public:
  inline SubtleWrapKeyResponse() : SubtleWrapKeyResponse(nullptr) {}
  ~SubtleWrapKeyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleWrapKeyResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleWrapKeyResponse(const SubtleWrapKeyResponse& from);
  SubtleWrapKeyResponse(SubtleWrapKeyResponse&& from) noexcept
    : SubtleWrapKeyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleWrapKeyResponse& operator=(const SubtleWrapKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleWrapKeyResponse& operator=(SubtleWrapKeyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleWrapKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleWrapKeyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleWrapKeyResponse*>(
               &_SubtleWrapKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(SubtleWrapKeyResponse& a, SubtleWrapKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleWrapKeyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleWrapKeyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleWrapKeyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleWrapKeyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleWrapKeyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleWrapKeyResponse& from) {
    SubtleWrapKeyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleWrapKeyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleWrapKeyResponse";
  }
  protected:
  explicit SubtleWrapKeyResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWrappedKeyFieldNumber = 1,
    kTagFieldNumber = 2,
  };
  // bytes wrapped_key = 1 [json_name = "wrappedKey"];
  void clear_wrapped_key() ;
  const std::string& wrapped_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wrapped_key(Arg_&& arg, Args_... args);
  std::string* mutable_wrapped_key();
  PROTOBUF_NODISCARD std::string* release_wrapped_key();
  void set_allocated_wrapped_key(std::string* ptr);

  private:
  const std::string& _internal_wrapped_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wrapped_key(
      const std::string& value);
  std::string* _internal_mutable_wrapped_key();

  public:
  // bytes tag = 2;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* ptr);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr wrapped_key_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleUnwrapKeyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest) */ {
 public:
  inline SubtleUnwrapKeyRequest() : SubtleUnwrapKeyRequest(nullptr) {}
  ~SubtleUnwrapKeyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleUnwrapKeyRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleUnwrapKeyRequest(const SubtleUnwrapKeyRequest& from);
  SubtleUnwrapKeyRequest(SubtleUnwrapKeyRequest&& from) noexcept
    : SubtleUnwrapKeyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleUnwrapKeyRequest& operator=(const SubtleUnwrapKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleUnwrapKeyRequest& operator=(SubtleUnwrapKeyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleUnwrapKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleUnwrapKeyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleUnwrapKeyRequest*>(
               &_SubtleUnwrapKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(SubtleUnwrapKeyRequest& a, SubtleUnwrapKeyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleUnwrapKeyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleUnwrapKeyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleUnwrapKeyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleUnwrapKeyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleUnwrapKeyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleUnwrapKeyRequest& from) {
    SubtleUnwrapKeyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleUnwrapKeyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest";
  }
  protected:
  explicit SubtleUnwrapKeyRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kWrappedKeyFieldNumber = 2,
    kAlgorithmFieldNumber = 3,
    kKeyNameFieldNumber = 4,
    kNonceFieldNumber = 5,
    kTagFieldNumber = 6,
    kAssociatedDataFieldNumber = 7,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // bytes wrapped_key = 2 [json_name = "wrappedKey"];
  void clear_wrapped_key() ;
  const std::string& wrapped_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wrapped_key(Arg_&& arg, Args_... args);
  std::string* mutable_wrapped_key();
  PROTOBUF_NODISCARD std::string* release_wrapped_key();
  void set_allocated_wrapped_key(std::string* ptr);

  private:
  const std::string& _internal_wrapped_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wrapped_key(
      const std::string& value);
  std::string* _internal_mutable_wrapped_key();

  public:
  // string algorithm = 3;
  void clear_algorithm() ;
  const std::string& algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_algorithm();
  PROTOBUF_NODISCARD std::string* release_algorithm();
  void set_allocated_algorithm(std::string* ptr);

  private:
  const std::string& _internal_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_algorithm(
      const std::string& value);
  std::string* _internal_mutable_algorithm();

  public:
  // string key_name = 4 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // bytes nonce = 5;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* ptr);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // bytes tag = 6;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* ptr);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // bytes associated_data = 7 [json_name = "associatedData"];
  void clear_associated_data() ;
  const std::string& associated_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_associated_data(Arg_&& arg, Args_... args);
  std::string* mutable_associated_data();
  PROTOBUF_NODISCARD std::string* release_associated_data();
  void set_allocated_associated_data(std::string* ptr);

  private:
  const std::string& _internal_associated_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_associated_data(
      const std::string& value);
  std::string* _internal_mutable_associated_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 84, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr wrapped_key_;
    ::google::protobuf::internal::ArenaStringPtr algorithm_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::google::protobuf::internal::ArenaStringPtr associated_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleUnwrapKeyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse) */ {
 public:
  inline SubtleUnwrapKeyResponse() : SubtleUnwrapKeyResponse(nullptr) {}
  ~SubtleUnwrapKeyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleUnwrapKeyResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleUnwrapKeyResponse(const SubtleUnwrapKeyResponse& from);
  SubtleUnwrapKeyResponse(SubtleUnwrapKeyResponse&& from) noexcept
    : SubtleUnwrapKeyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleUnwrapKeyResponse& operator=(const SubtleUnwrapKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleUnwrapKeyResponse& operator=(SubtleUnwrapKeyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleUnwrapKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleUnwrapKeyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleUnwrapKeyResponse*>(
               &_SubtleUnwrapKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(SubtleUnwrapKeyResponse& a, SubtleUnwrapKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleUnwrapKeyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleUnwrapKeyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleUnwrapKeyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleUnwrapKeyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleUnwrapKeyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleUnwrapKeyResponse& from) {
    SubtleUnwrapKeyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleUnwrapKeyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleUnwrapKeyResponse";
  }
  protected:
  explicit SubtleUnwrapKeyResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlaintextKeyFieldNumber = 1,
  };
  // bytes plaintext_key = 1 [json_name = "plaintextKey"];
  void clear_plaintext_key() ;
  const std::string& plaintext_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plaintext_key(Arg_&& arg, Args_... args);
  std::string* mutable_plaintext_key();
  PROTOBUF_NODISCARD std::string* release_plaintext_key();
  void set_allocated_plaintext_key(std::string* ptr);

  private:
  const std::string& _internal_plaintext_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plaintext_key(
      const std::string& value);
  std::string* _internal_mutable_plaintext_key();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr plaintext_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleSignRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleSignRequest) */ {
 public:
  inline SubtleSignRequest() : SubtleSignRequest(nullptr) {}
  ~SubtleSignRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleSignRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleSignRequest(const SubtleSignRequest& from);
  SubtleSignRequest(SubtleSignRequest&& from) noexcept
    : SubtleSignRequest() {
    *this = ::std::move(from);
  }

  inline SubtleSignRequest& operator=(const SubtleSignRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleSignRequest& operator=(SubtleSignRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleSignRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleSignRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleSignRequest*>(
               &_SubtleSignRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(SubtleSignRequest& a, SubtleSignRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleSignRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleSignRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleSignRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleSignRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleSignRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleSignRequest& from) {
    SubtleSignRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleSignRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleSignRequest";
  }
  protected:
  explicit SubtleSignRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kDigestFieldNumber = 2,
    kAlgorithmFieldNumber = 3,
    kKeyNameFieldNumber = 4,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // bytes digest = 2;
  void clear_digest() ;
  const std::string& digest() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_digest(Arg_&& arg, Args_... args);
  std::string* mutable_digest();
  PROTOBUF_NODISCARD std::string* release_digest();
  void set_allocated_digest(std::string* ptr);

  private:
  const std::string& _internal_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digest(
      const std::string& value);
  std::string* _internal_mutable_digest();

  public:
  // string algorithm = 3;
  void clear_algorithm() ;
  const std::string& algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_algorithm();
  PROTOBUF_NODISCARD std::string* release_algorithm();
  void set_allocated_algorithm(std::string* ptr);

  private:
  const std::string& _internal_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_algorithm(
      const std::string& value);
  std::string* _internal_mutable_algorithm();

  public:
  // string key_name = 4 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleSignRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 79, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr digest_;
    ::google::protobuf::internal::ArenaStringPtr algorithm_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleSignResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleSignResponse) */ {
 public:
  inline SubtleSignResponse() : SubtleSignResponse(nullptr) {}
  ~SubtleSignResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleSignResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleSignResponse(const SubtleSignResponse& from);
  SubtleSignResponse(SubtleSignResponse&& from) noexcept
    : SubtleSignResponse() {
    *this = ::std::move(from);
  }

  inline SubtleSignResponse& operator=(const SubtleSignResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleSignResponse& operator=(SubtleSignResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleSignResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleSignResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleSignResponse*>(
               &_SubtleSignResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(SubtleSignResponse& a, SubtleSignResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleSignResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleSignResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleSignResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleSignResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleSignResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleSignResponse& from) {
    SubtleSignResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleSignResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleSignResponse";
  }
  protected:
  explicit SubtleSignResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignatureFieldNumber = 1,
  };
  // bytes signature = 1;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* ptr);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleSignResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleVerifyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleVerifyRequest) */ {
 public:
  inline SubtleVerifyRequest() : SubtleVerifyRequest(nullptr) {}
  ~SubtleVerifyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleVerifyRequest(::google::protobuf::internal::ConstantInitialized);

  SubtleVerifyRequest(const SubtleVerifyRequest& from);
  SubtleVerifyRequest(SubtleVerifyRequest&& from) noexcept
    : SubtleVerifyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleVerifyRequest& operator=(const SubtleVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleVerifyRequest& operator=(SubtleVerifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleVerifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleVerifyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleVerifyRequest*>(
               &_SubtleVerifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(SubtleVerifyRequest& a, SubtleVerifyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleVerifyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleVerifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleVerifyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleVerifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleVerifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleVerifyRequest& from) {
    SubtleVerifyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleVerifyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleVerifyRequest";
  }
  protected:
  explicit SubtleVerifyRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kDigestFieldNumber = 2,
    kAlgorithmFieldNumber = 3,
    kKeyNameFieldNumber = 4,
    kSignatureFieldNumber = 5,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // bytes digest = 2;
  void clear_digest() ;
  const std::string& digest() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_digest(Arg_&& arg, Args_... args);
  std::string* mutable_digest();
  PROTOBUF_NODISCARD std::string* release_digest();
  void set_allocated_digest(std::string* ptr);

  private:
  const std::string& _internal_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digest(
      const std::string& value);
  std::string* _internal_mutable_digest();

  public:
  // string algorithm = 3;
  void clear_algorithm() ;
  const std::string& algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_algorithm();
  PROTOBUF_NODISCARD std::string* release_algorithm();
  void set_allocated_algorithm(std::string* ptr);

  private:
  const std::string& _internal_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_algorithm(
      const std::string& value);
  std::string* _internal_mutable_algorithm();

  public:
  // string key_name = 4 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // bytes signature = 5;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* ptr);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleVerifyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 81, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr digest_;
    ::google::protobuf::internal::ArenaStringPtr algorithm_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class SubtleVerifyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleVerifyResponse) */ {
 public:
  inline SubtleVerifyResponse() : SubtleVerifyResponse(nullptr) {}
  ~SubtleVerifyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubtleVerifyResponse(::google::protobuf::internal::ConstantInitialized);

  SubtleVerifyResponse(const SubtleVerifyResponse& from);
  SubtleVerifyResponse(SubtleVerifyResponse&& from) noexcept
    : SubtleVerifyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleVerifyResponse& operator=(const SubtleVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubtleVerifyResponse& operator=(SubtleVerifyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubtleVerifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubtleVerifyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleVerifyResponse*>(
               &_SubtleVerifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(SubtleVerifyResponse& a, SubtleVerifyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubtleVerifyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubtleVerifyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubtleVerifyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubtleVerifyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubtleVerifyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubtleVerifyResponse& from) {
    SubtleVerifyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleVerifyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.SubtleVerifyResponse";
  }
  protected:
  explicit SubtleVerifyResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidFieldNumber = 1,
  };
  // bool valid = 1;
  void clear_valid() ;
  bool valid() const;
  void set_valid(bool value);

  private:
  bool _internal_valid() const;
  void _internal_set_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleVerifyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool valid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class EncryptRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.EncryptRequest) */ {
 public:
  inline EncryptRequest() : EncryptRequest(nullptr) {}
  ~EncryptRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EncryptRequest(::google::protobuf::internal::ConstantInitialized);

  EncryptRequest(const EncryptRequest& from);
  EncryptRequest(EncryptRequest&& from) noexcept
    : EncryptRequest() {
    *this = ::std::move(from);
  }

  inline EncryptRequest& operator=(const EncryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptRequest& operator=(EncryptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EncryptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptRequest*>(
               &_EncryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(EncryptRequest& a, EncryptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EncryptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EncryptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EncryptRequest& from) {
    EncryptRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.EncryptRequest";
  }
  protected:
  explicit EncryptRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kPayloadFieldNumber = 2,
  };
  // .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
  bool has_options() const;
  void clear_options() ;
  const ::dapr::proto::runtime::v1::EncryptRequestOptions& options() const;
  PROTOBUF_NODISCARD ::dapr::proto::runtime::v1::EncryptRequestOptions* release_options();
  ::dapr::proto::runtime::v1::EncryptRequestOptions* mutable_options();
  void set_allocated_options(::dapr::proto::runtime::v1::EncryptRequestOptions* value);
  void unsafe_arena_set_allocated_options(::dapr::proto::runtime::v1::EncryptRequestOptions* value);
  ::dapr::proto::runtime::v1::EncryptRequestOptions* unsafe_arena_release_options();

  private:
  const ::dapr::proto::runtime::v1::EncryptRequestOptions& _internal_options() const;
  ::dapr::proto::runtime::v1::EncryptRequestOptions* _internal_mutable_options();

  public:
  // .dapr.proto.common.v1.StreamPayload payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  void unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  ::dapr::proto::common::v1::StreamPayload* unsafe_arena_release_payload();

  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  ::dapr::proto::common::v1::StreamPayload* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.EncryptRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::dapr::proto::runtime::v1::EncryptRequestOptions* options_;
    ::dapr::proto::common::v1::StreamPayload* payload_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class EncryptRequestOptions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.EncryptRequestOptions) */ {
 public:
  inline EncryptRequestOptions() : EncryptRequestOptions(nullptr) {}
  ~EncryptRequestOptions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EncryptRequestOptions(::google::protobuf::internal::ConstantInitialized);

  EncryptRequestOptions(const EncryptRequestOptions& from);
  EncryptRequestOptions(EncryptRequestOptions&& from) noexcept
    : EncryptRequestOptions() {
    *this = ::std::move(from);
  }

  inline EncryptRequestOptions& operator=(const EncryptRequestOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptRequestOptions& operator=(EncryptRequestOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EncryptRequestOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptRequestOptions* internal_default_instance() {
    return reinterpret_cast<const EncryptRequestOptions*>(
               &_EncryptRequestOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(EncryptRequestOptions& a, EncryptRequestOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(EncryptRequestOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptRequestOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptRequestOptions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptRequestOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EncryptRequestOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EncryptRequestOptions& from) {
    EncryptRequestOptions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptRequestOptions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.EncryptRequestOptions";
  }
  protected:
  explicit EncryptRequestOptions(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kKeyNameFieldNumber = 2,
    kKeyWrapAlgorithmFieldNumber = 3,
    kDataEncryptionCipherFieldNumber = 10,
    kDecryptionKeyNameFieldNumber = 12,
    kOmitDecryptionKeyNameFieldNumber = 11,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // string key_name = 2 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // string key_wrap_algorithm = 3;
  void clear_key_wrap_algorithm() ;
  const std::string& key_wrap_algorithm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_wrap_algorithm(Arg_&& arg, Args_... args);
  std::string* mutable_key_wrap_algorithm();
  PROTOBUF_NODISCARD std::string* release_key_wrap_algorithm();
  void set_allocated_key_wrap_algorithm(std::string* ptr);

  private:
  const std::string& _internal_key_wrap_algorithm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_wrap_algorithm(
      const std::string& value);
  std::string* _internal_mutable_key_wrap_algorithm();

  public:
  // string data_encryption_cipher = 10;
  void clear_data_encryption_cipher() ;
  const std::string& data_encryption_cipher() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_encryption_cipher(Arg_&& arg, Args_... args);
  std::string* mutable_data_encryption_cipher();
  PROTOBUF_NODISCARD std::string* release_data_encryption_cipher();
  void set_allocated_data_encryption_cipher(std::string* ptr);

  private:
  const std::string& _internal_data_encryption_cipher() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_encryption_cipher(
      const std::string& value);
  std::string* _internal_mutable_data_encryption_cipher();

  public:
  // string decryption_key_name = 12 [json_name = "decryptionKeyName"];
  void clear_decryption_key_name() ;
  const std::string& decryption_key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_decryption_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_decryption_key_name();
  PROTOBUF_NODISCARD std::string* release_decryption_key_name();
  void set_allocated_decryption_key_name(std::string* ptr);

  private:
  const std::string& _internal_decryption_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_decryption_key_name(
      const std::string& value);
  std::string* _internal_mutable_decryption_key_name();

  public:
  // bool omit_decryption_key_name = 11 [json_name = "omitDecryptionKeyName"];
  void clear_omit_decryption_key_name() ;
  bool omit_decryption_key_name() const;
  void set_omit_decryption_key_name(bool value);

  private:
  bool _internal_omit_decryption_key_name() const;
  void _internal_set_omit_decryption_key_name(bool value);

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.EncryptRequestOptions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 6, 0, 133, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    ::google::protobuf::internal::ArenaStringPtr key_wrap_algorithm_;
    ::google::protobuf::internal::ArenaStringPtr data_encryption_cipher_;
    ::google::protobuf::internal::ArenaStringPtr decryption_key_name_;
    bool omit_decryption_key_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class EncryptResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.EncryptResponse) */ {
 public:
  inline EncryptResponse() : EncryptResponse(nullptr) {}
  ~EncryptResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EncryptResponse(::google::protobuf::internal::ConstantInitialized);

  EncryptResponse(const EncryptResponse& from);
  EncryptResponse(EncryptResponse&& from) noexcept
    : EncryptResponse() {
    *this = ::std::move(from);
  }

  inline EncryptResponse& operator=(const EncryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptResponse& operator=(EncryptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EncryptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptResponse*>(
               &_EncryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(EncryptResponse& a, EncryptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EncryptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EncryptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EncryptResponse& from) {
    EncryptResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.EncryptResponse";
  }
  protected:
  explicit EncryptResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
  };
  // .dapr.proto.common.v1.StreamPayload payload = 1;
  bool has_payload() const;
  void clear_payload() ;
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  void unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  ::dapr::proto::common::v1::StreamPayload* unsafe_arena_release_payload();

  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  ::dapr::proto::common::v1::StreamPayload* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.EncryptResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::dapr::proto::common::v1::StreamPayload* payload_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class DecryptRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DecryptRequest) */ {
 public:
  inline DecryptRequest() : DecryptRequest(nullptr) {}
  ~DecryptRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DecryptRequest(::google::protobuf::internal::ConstantInitialized);

  DecryptRequest(const DecryptRequest& from);
  DecryptRequest(DecryptRequest&& from) noexcept
    : DecryptRequest() {
    *this = ::std::move(from);
  }

  inline DecryptRequest& operator=(const DecryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecryptRequest& operator=(DecryptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DecryptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DecryptRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptRequest*>(
               &_DecryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(DecryptRequest& a, DecryptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DecryptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DecryptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DecryptRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DecryptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DecryptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DecryptRequest& from) {
    DecryptRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.DecryptRequest";
  }
  protected:
  explicit DecryptRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kPayloadFieldNumber = 2,
  };
  // .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
  bool has_options() const;
  void clear_options() ;
  const ::dapr::proto::runtime::v1::DecryptRequestOptions& options() const;
  PROTOBUF_NODISCARD ::dapr::proto::runtime::v1::DecryptRequestOptions* release_options();
  ::dapr::proto::runtime::v1::DecryptRequestOptions* mutable_options();
  void set_allocated_options(::dapr::proto::runtime::v1::DecryptRequestOptions* value);
  void unsafe_arena_set_allocated_options(::dapr::proto::runtime::v1::DecryptRequestOptions* value);
  ::dapr::proto::runtime::v1::DecryptRequestOptions* unsafe_arena_release_options();

  private:
  const ::dapr::proto::runtime::v1::DecryptRequestOptions& _internal_options() const;
  ::dapr::proto::runtime::v1::DecryptRequestOptions* _internal_mutable_options();

  public:
  // .dapr.proto.common.v1.StreamPayload payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  void unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  ::dapr::proto::common::v1::StreamPayload* unsafe_arena_release_payload();

  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  ::dapr::proto::common::v1::StreamPayload* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DecryptRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::dapr::proto::runtime::v1::DecryptRequestOptions* options_;
    ::dapr::proto::common::v1::StreamPayload* payload_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class DecryptRequestOptions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DecryptRequestOptions) */ {
 public:
  inline DecryptRequestOptions() : DecryptRequestOptions(nullptr) {}
  ~DecryptRequestOptions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DecryptRequestOptions(::google::protobuf::internal::ConstantInitialized);

  DecryptRequestOptions(const DecryptRequestOptions& from);
  DecryptRequestOptions(DecryptRequestOptions&& from) noexcept
    : DecryptRequestOptions() {
    *this = ::std::move(from);
  }

  inline DecryptRequestOptions& operator=(const DecryptRequestOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecryptRequestOptions& operator=(DecryptRequestOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DecryptRequestOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const DecryptRequestOptions* internal_default_instance() {
    return reinterpret_cast<const DecryptRequestOptions*>(
               &_DecryptRequestOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(DecryptRequestOptions& a, DecryptRequestOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(DecryptRequestOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DecryptRequestOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DecryptRequestOptions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DecryptRequestOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DecryptRequestOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DecryptRequestOptions& from) {
    DecryptRequestOptions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptRequestOptions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.DecryptRequestOptions";
  }
  protected:
  explicit DecryptRequestOptions(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNameFieldNumber = 1,
    kKeyNameFieldNumber = 12,
  };
  // string component_name = 1 [json_name = "componentName"];
  void clear_component_name() ;
  const std::string& component_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_component_name(Arg_&& arg, Args_... args);
  std::string* mutable_component_name();
  PROTOBUF_NODISCARD std::string* release_component_name();
  void set_allocated_component_name(std::string* ptr);

  private:
  const std::string& _internal_component_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_component_name(
      const std::string& value);
  std::string* _internal_mutable_component_name();

  public:
  // string key_name = 12 [json_name = "keyName"];
  void clear_key_name() ;
  const std::string& key_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_name(Arg_&& arg, Args_... args);
  std::string* mutable_key_name();
  PROTOBUF_NODISCARD std::string* release_key_name();
  void set_allocated_key_name(std::string* ptr);

  private:
  const std::string& _internal_key_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_name(
      const std::string& value);
  std::string* _internal_mutable_key_name();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DecryptRequestOptions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 74, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr component_name_;
    ::google::protobuf::internal::ArenaStringPtr key_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class DecryptResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DecryptResponse) */ {
 public:
  inline DecryptResponse() : DecryptResponse(nullptr) {}
  ~DecryptResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DecryptResponse(::google::protobuf::internal::ConstantInitialized);

  DecryptResponse(const DecryptResponse& from);
  DecryptResponse(DecryptResponse&& from) noexcept
    : DecryptResponse() {
    *this = ::std::move(from);
  }

  inline DecryptResponse& operator=(const DecryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecryptResponse& operator=(DecryptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DecryptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DecryptResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptResponse*>(
               &_DecryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(DecryptResponse& a, DecryptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DecryptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DecryptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DecryptResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DecryptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DecryptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DecryptResponse& from) {
    DecryptResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.DecryptResponse";
  }
  protected:
  explicit DecryptResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
  };
  // .dapr.proto.common.v1.StreamPayload payload = 1;
  bool has_payload() const;
  void clear_payload() ;
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  PROTOBUF_NODISCARD ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  void unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value);
  ::dapr::proto::common::v1::StreamPayload* unsafe_arena_release_payload();

  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  ::dapr::proto::common::v1::StreamPayload* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DecryptResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::dapr::proto::common::v1::StreamPayload* payload_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetWorkflowRequest) */ {
 public:
  inline GetWorkflowRequest() : GetWorkflowRequest(nullptr) {}
  ~GetWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  GetWorkflowRequest(const GetWorkflowRequest& from);
  GetWorkflowRequest(GetWorkflowRequest&& from) noexcept
    : GetWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline GetWorkflowRequest& operator=(const GetWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWorkflowRequest& operator=(GetWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const GetWorkflowRequest*>(
               &_GetWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(GetWorkflowRequest& a, GetWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetWorkflowRequest& from) {
    GetWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetWorkflowRequest";
  }
  protected:
  explicit GetWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 78, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class GetWorkflowResponse_PropertiesEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetWorkflowResponse_PropertiesEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetWorkflowResponse_PropertiesEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  GetWorkflowResponse_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWorkflowResponse_PropertiesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetWorkflowResponse_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetWorkflowResponse_PropertiesEntry_DoNotUse& other);
  static const GetWorkflowResponse_PropertiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetWorkflowResponse_PropertiesEntry_DoNotUse*>(&_GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetWorkflowResponse.PropertiesEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.GetWorkflowResponse.PropertiesEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class GetWorkflowResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetWorkflowResponse) */ {
 public:
  inline GetWorkflowResponse() : GetWorkflowResponse(nullptr) {}
  ~GetWorkflowResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetWorkflowResponse(::google::protobuf::internal::ConstantInitialized);

  GetWorkflowResponse(const GetWorkflowResponse& from);
  GetWorkflowResponse(GetWorkflowResponse&& from) noexcept
    : GetWorkflowResponse() {
    *this = ::std::move(from);
  }

  inline GetWorkflowResponse& operator=(const GetWorkflowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWorkflowResponse& operator=(GetWorkflowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWorkflowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWorkflowResponse* internal_default_instance() {
    return reinterpret_cast<const GetWorkflowResponse*>(
               &_GetWorkflowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(GetWorkflowResponse& a, GetWorkflowResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetWorkflowResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWorkflowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWorkflowResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetWorkflowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWorkflowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetWorkflowResponse& from) {
    GetWorkflowResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWorkflowResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.GetWorkflowResponse";
  }
  protected:
  explicit GetWorkflowResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPropertiesFieldNumber = 6,
    kInstanceIdFieldNumber = 1,
    kWorkflowNameFieldNumber = 2,
    kRuntimeStatusFieldNumber = 5,
    kCreatedAtFieldNumber = 3,
    kLastUpdatedAtFieldNumber = 4,
  };
  // map<string, string> properties = 6;
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& properties() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_properties() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_properties();

  public:
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_name = 2 [json_name = "workflowName"];
  void clear_workflow_name() ;
  const std::string& workflow_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_name(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_name();
  PROTOBUF_NODISCARD std::string* release_workflow_name();
  void set_allocated_workflow_name(std::string* ptr);

  private:
  const std::string& _internal_workflow_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_name(
      const std::string& value);
  std::string* _internal_mutable_workflow_name();

  public:
  // string runtime_status = 5 [json_name = "runtimeStatus"];
  void clear_runtime_status() ;
  const std::string& runtime_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_runtime_status(Arg_&& arg, Args_... args);
  std::string* mutable_runtime_status();
  PROTOBUF_NODISCARD std::string* release_runtime_status();
  void set_allocated_runtime_status(std::string* ptr);

  private:
  const std::string& _internal_runtime_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_runtime_status(
      const std::string& value);
  std::string* _internal_mutable_runtime_status();

  public:
  // .google.protobuf.Timestamp created_at = 3 [json_name = "createdAt"];
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .google.protobuf.Timestamp last_updated_at = 4 [json_name = "lastUpdatedAt"];
  bool has_last_updated_at() const;
  void clear_last_updated_at() ;
  const ::google::protobuf::Timestamp& last_updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_last_updated_at();
  ::google::protobuf::Timestamp* mutable_last_updated_at();
  void set_allocated_last_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_last_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_last_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_last_updated_at();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetWorkflowResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 3, 98, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<GetWorkflowResponse_PropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        properties_;
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_name_;
    ::google::protobuf::internal::ArenaStringPtr runtime_status_;
    ::google::protobuf::Timestamp* created_at_;
    ::google::protobuf::Timestamp* last_updated_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class StartWorkflowRequest_OptionsEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<StartWorkflowRequest_OptionsEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<StartWorkflowRequest_OptionsEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  StartWorkflowRequest_OptionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartWorkflowRequest_OptionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StartWorkflowRequest_OptionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StartWorkflowRequest_OptionsEntry_DoNotUse& other);
  static const StartWorkflowRequest_OptionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StartWorkflowRequest_OptionsEntry_DoNotUse*>(&_StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.StartWorkflowRequest.OptionsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "dapr.proto.runtime.v1.StartWorkflowRequest.OptionsEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};
// -------------------------------------------------------------------

class StartWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.StartWorkflowRequest) */ {
 public:
  inline StartWorkflowRequest() : StartWorkflowRequest(nullptr) {}
  ~StartWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  StartWorkflowRequest(const StartWorkflowRequest& from);
  StartWorkflowRequest(StartWorkflowRequest&& from) noexcept
    : StartWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline StartWorkflowRequest& operator=(const StartWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartWorkflowRequest& operator=(StartWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const StartWorkflowRequest*>(
               &_StartWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(StartWorkflowRequest& a, StartWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StartWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StartWorkflowRequest& from) {
    StartWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.StartWorkflowRequest";
  }
  protected:
  explicit StartWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 4,
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
    kWorkflowNameFieldNumber = 3,
    kInputFieldNumber = 5,
  };
  // map<string, string> options = 4;
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  const ::google::protobuf::Map<std::string, std::string>& options() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_options();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_options() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_options();

  public:
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // string workflow_name = 3 [json_name = "workflowName"];
  void clear_workflow_name() ;
  const std::string& workflow_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_name(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_name();
  PROTOBUF_NODISCARD std::string* release_workflow_name();
  void set_allocated_workflow_name(std::string* ptr);

  private:
  const std::string& _internal_workflow_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_name(
      const std::string& value);
  std::string* _internal_mutable_workflow_name();

  public:
  // bytes input = 5;
  void clear_input() ;
  const std::string& input() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_input(Arg_&& arg, Args_... args);
  std::string* mutable_input();
  PROTOBUF_NODISCARD std::string* release_input();
  void set_allocated_input(std::string* ptr);

  private:
  const std::string& _internal_input() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_input(
      const std::string& value);
  std::string* _internal_mutable_input();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.StartWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 100, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<StartWorkflowRequest_OptionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        options_;
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    ::google::protobuf::internal::ArenaStringPtr workflow_name_;
    ::google::protobuf::internal::ArenaStringPtr input_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class StartWorkflowResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.StartWorkflowResponse) */ {
 public:
  inline StartWorkflowResponse() : StartWorkflowResponse(nullptr) {}
  ~StartWorkflowResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartWorkflowResponse(::google::protobuf::internal::ConstantInitialized);

  StartWorkflowResponse(const StartWorkflowResponse& from);
  StartWorkflowResponse(StartWorkflowResponse&& from) noexcept
    : StartWorkflowResponse() {
    *this = ::std::move(from);
  }

  inline StartWorkflowResponse& operator=(const StartWorkflowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartWorkflowResponse& operator=(StartWorkflowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartWorkflowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartWorkflowResponse* internal_default_instance() {
    return reinterpret_cast<const StartWorkflowResponse*>(
               &_StartWorkflowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(StartWorkflowResponse& a, StartWorkflowResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StartWorkflowResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartWorkflowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartWorkflowResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartWorkflowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartWorkflowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StartWorkflowResponse& from) {
    StartWorkflowResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartWorkflowResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.StartWorkflowResponse";
  }
  protected:
  explicit StartWorkflowResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.StartWorkflowResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 63, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class TerminateWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TerminateWorkflowRequest) */ {
 public:
  inline TerminateWorkflowRequest() : TerminateWorkflowRequest(nullptr) {}
  ~TerminateWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TerminateWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  TerminateWorkflowRequest(const TerminateWorkflowRequest& from);
  TerminateWorkflowRequest(TerminateWorkflowRequest&& from) noexcept
    : TerminateWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline TerminateWorkflowRequest& operator=(const TerminateWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TerminateWorkflowRequest& operator=(TerminateWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TerminateWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TerminateWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const TerminateWorkflowRequest*>(
               &_TerminateWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(TerminateWorkflowRequest& a, TerminateWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TerminateWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TerminateWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TerminateWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TerminateWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TerminateWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TerminateWorkflowRequest& from) {
    TerminateWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TerminateWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.TerminateWorkflowRequest";
  }
  protected:
  explicit TerminateWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TerminateWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 84, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class PauseWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PauseWorkflowRequest) */ {
 public:
  inline PauseWorkflowRequest() : PauseWorkflowRequest(nullptr) {}
  ~PauseWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PauseWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  PauseWorkflowRequest(const PauseWorkflowRequest& from);
  PauseWorkflowRequest(PauseWorkflowRequest&& from) noexcept
    : PauseWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline PauseWorkflowRequest& operator=(const PauseWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PauseWorkflowRequest& operator=(PauseWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PauseWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PauseWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const PauseWorkflowRequest*>(
               &_PauseWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(PauseWorkflowRequest& a, PauseWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PauseWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PauseWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PauseWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PauseWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PauseWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PauseWorkflowRequest& from) {
    PauseWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PauseWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.PauseWorkflowRequest";
  }
  protected:
  explicit PauseWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PauseWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 80, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class ResumeWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ResumeWorkflowRequest) */ {
 public:
  inline ResumeWorkflowRequest() : ResumeWorkflowRequest(nullptr) {}
  ~ResumeWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResumeWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  ResumeWorkflowRequest(const ResumeWorkflowRequest& from);
  ResumeWorkflowRequest(ResumeWorkflowRequest&& from) noexcept
    : ResumeWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline ResumeWorkflowRequest& operator=(const ResumeWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResumeWorkflowRequest& operator=(ResumeWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResumeWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResumeWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const ResumeWorkflowRequest*>(
               &_ResumeWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(ResumeWorkflowRequest& a, ResumeWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResumeWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResumeWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResumeWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResumeWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResumeWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResumeWorkflowRequest& from) {
    ResumeWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResumeWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.ResumeWorkflowRequest";
  }
  protected:
  explicit ResumeWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ResumeWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 81, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class RaiseEventWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RaiseEventWorkflowRequest) */ {
 public:
  inline RaiseEventWorkflowRequest() : RaiseEventWorkflowRequest(nullptr) {}
  ~RaiseEventWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RaiseEventWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  RaiseEventWorkflowRequest(const RaiseEventWorkflowRequest& from);
  RaiseEventWorkflowRequest(RaiseEventWorkflowRequest&& from) noexcept
    : RaiseEventWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline RaiseEventWorkflowRequest& operator=(const RaiseEventWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RaiseEventWorkflowRequest& operator=(RaiseEventWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RaiseEventWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RaiseEventWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const RaiseEventWorkflowRequest*>(
               &_RaiseEventWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(RaiseEventWorkflowRequest& a, RaiseEventWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RaiseEventWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RaiseEventWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RaiseEventWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RaiseEventWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RaiseEventWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RaiseEventWorkflowRequest& from) {
    RaiseEventWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RaiseEventWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.RaiseEventWorkflowRequest";
  }
  protected:
  explicit RaiseEventWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
    kEventNameFieldNumber = 3,
    kEventDataFieldNumber = 4,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // string event_name = 3 [json_name = "eventName"];
  void clear_event_name() ;
  const std::string& event_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_name(Arg_&& arg, Args_... args);
  std::string* mutable_event_name();
  PROTOBUF_NODISCARD std::string* release_event_name();
  void set_allocated_event_name(std::string* ptr);

  private:
  const std::string& _internal_event_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event_name(
      const std::string& value);
  std::string* _internal_mutable_event_name();

  public:
  // bytes event_data = 4;
  void clear_event_data() ;
  const std::string& event_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_data(Arg_&& arg, Args_... args);
  std::string* mutable_event_data();
  PROTOBUF_NODISCARD std::string* release_event_data();
  void set_allocated_event_data(std::string* ptr);

  private:
  const std::string& _internal_event_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event_data(
      const std::string& value);
  std::string* _internal_mutable_event_data();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 95, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    ::google::protobuf::internal::ArenaStringPtr event_name_;
    ::google::protobuf::internal::ArenaStringPtr event_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class PurgeWorkflowRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PurgeWorkflowRequest) */ {
 public:
  inline PurgeWorkflowRequest() : PurgeWorkflowRequest(nullptr) {}
  ~PurgeWorkflowRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PurgeWorkflowRequest(::google::protobuf::internal::ConstantInitialized);

  PurgeWorkflowRequest(const PurgeWorkflowRequest& from);
  PurgeWorkflowRequest(PurgeWorkflowRequest&& from) noexcept
    : PurgeWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline PurgeWorkflowRequest& operator=(const PurgeWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PurgeWorkflowRequest& operator=(PurgeWorkflowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PurgeWorkflowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PurgeWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const PurgeWorkflowRequest*>(
               &_PurgeWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(PurgeWorkflowRequest& a, PurgeWorkflowRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PurgeWorkflowRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PurgeWorkflowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PurgeWorkflowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PurgeWorkflowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PurgeWorkflowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PurgeWorkflowRequest& from) {
    PurgeWorkflowRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PurgeWorkflowRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.PurgeWorkflowRequest";
  }
  protected:
  explicit PurgeWorkflowRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceIdFieldNumber = 1,
    kWorkflowComponentFieldNumber = 2,
  };
  // string instance_id = 1 [json_name = "instanceID"];
  void clear_instance_id() ;
  const std::string& instance_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instance_id(Arg_&& arg, Args_... args);
  std::string* mutable_instance_id();
  PROTOBUF_NODISCARD std::string* release_instance_id();
  void set_allocated_instance_id(std::string* ptr);

  private:
  const std::string& _internal_instance_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_id(
      const std::string& value);
  std::string* _internal_mutable_instance_id();

  public:
  // string workflow_component = 2 [json_name = "workflowComponent"];
  void clear_workflow_component() ;
  const std::string& workflow_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_component(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_component();
  PROTOBUF_NODISCARD std::string* release_workflow_component();
  void set_allocated_workflow_component(std::string* ptr);

  private:
  const std::string& _internal_workflow_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_component(
      const std::string& value);
  std::string* _internal_mutable_workflow_component();

  public:
  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PurgeWorkflowRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 80, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr instance_id_;
    ::google::protobuf::internal::ArenaStringPtr workflow_component_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};// -------------------------------------------------------------------

class ShutdownRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ShutdownRequest) */ {
 public:
  inline ShutdownRequest() : ShutdownRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShutdownRequest(::google::protobuf::internal::ConstantInitialized);

  ShutdownRequest(const ShutdownRequest& from);
  ShutdownRequest(ShutdownRequest&& from) noexcept
    : ShutdownRequest() {
    *this = ::std::move(from);
  }

  inline ShutdownRequest& operator=(const ShutdownRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShutdownRequest& operator=(ShutdownRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShutdownRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShutdownRequest* internal_default_instance() {
    return reinterpret_cast<const ShutdownRequest*>(
               &_ShutdownRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(ShutdownRequest& a, ShutdownRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ShutdownRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShutdownRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShutdownRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShutdownRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ShutdownRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ShutdownRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dapr.proto.runtime.v1.ShutdownRequest";
  }
  protected:
  explicit ShutdownRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ShutdownRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InvokeServiceRequest

// string id = 1;
inline void InvokeServiceRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& InvokeServiceRequest::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeServiceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
inline std::string* InvokeServiceRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return _s;
}
inline const std::string& InvokeServiceRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void InvokeServiceRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeServiceRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeServiceRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return _impl_.id_.Release();
}
inline void InvokeServiceRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}

// .dapr.proto.common.v1.InvokeRequest message = 3;
inline bool InvokeServiceRequest::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::InvokeRequest* p = _impl_.message_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::InvokeRequest&>(::dapr::proto::common::v1::_InvokeRequest_default_instance_);
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::message() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  return _internal_message();
}
inline void InvokeServiceRequest::unsafe_arena_set_allocated_message(::dapr::proto::common::v1::InvokeRequest* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_);
  }
  _impl_.message_ = reinterpret_cast<::dapr::proto::common::v1::InvokeRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.message)
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::InvokeRequest* released = _impl_.message_;
  _impl_.message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::unsafe_arena_release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeServiceRequest.message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::InvokeRequest* temp = _impl_.message_;
  _impl_.message_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.message_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::InvokeRequest>(GetArenaForAllocation());
    _impl_.message_ = reinterpret_cast<::dapr::proto::common::v1::InvokeRequest*>(p);
  }
  return _impl_.message_;
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::mutable_message() {
  ::dapr::proto::common::v1::InvokeRequest* _msg = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  return _msg;
}
inline void InvokeServiceRequest::set_allocated_message(::dapr::proto::common::v1::InvokeRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_ = reinterpret_cast<::dapr::proto::common::v1::InvokeRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetStateRequest

// string store_name = 1;
inline void GetStateRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& GetStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStateRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
inline std::string* GetStateRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return _s;
}
inline const std::string& GetStateRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void GetStateRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetStateRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetStateRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void GetStateRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateRequest.store_name)
}

// string key = 2;
inline void GetStateRequest::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& GetStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStateRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.key)
}
inline std::string* GetStateRequest::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateRequest.key)
  return _s;
}
inline const std::string& GetStateRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void GetStateRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* GetStateRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* GetStateRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateRequest.key)
  return _impl_.key_.Release();
}
inline void GetStateRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateRequest.key)
}

// .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
inline void GetStateRequest::clear_consistency() {
  _impl_.consistency_ = 0;
}
inline ::dapr::proto::common::v1::StateOptions_StateConsistency GetStateRequest::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.consistency)
  return _internal_consistency();
}
inline void GetStateRequest::set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value) {
  _internal_set_consistency(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.consistency)
}
inline ::dapr::proto::common::v1::StateOptions_StateConsistency GetStateRequest::_internal_consistency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::dapr::proto::common::v1::StateOptions_StateConsistency>(_impl_.consistency_);
}
inline void GetStateRequest::_internal_set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.consistency_ = value;
}

// map<string, string> metadata = 4;
inline int GetStateRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetStateRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetStateRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetStateRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetStateRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetStateRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetStateRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkStateRequest

// string store_name = 1;
inline void GetBulkStateRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& GetBulkStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBulkStateRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
inline std::string* GetBulkStateRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return _s;
}
inline const std::string& GetBulkStateRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void GetBulkStateRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetBulkStateRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetBulkStateRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void GetBulkStateRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}

// repeated string keys = 2;
inline int GetBulkStateRequest::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int GetBulkStateRequest::keys_size() const {
  return _internal_keys_size();
}
inline void GetBulkStateRequest::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline std::string* GetBulkStateRequest::add_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return _s;
}
inline const std::string& GetBulkStateRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return _internal_keys().Get(index);
}
inline std::string* GetBulkStateRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return _internal_mutable_keys()->Mutable(index);
}
inline void GetBulkStateRequest::set_keys(int index, const std::string& value) {
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::set_keys(int index, std::string&& value) {
  _internal_mutable_keys()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::set_keys(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::set_keys(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_keys()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::set_keys(int index, absl::string_view value) {
  _internal_mutable_keys()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetBulkStateRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetBulkStateRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetBulkStateRequest::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetBulkStateRequest::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// int32 parallelism = 3;
inline void GetBulkStateRequest::clear_parallelism() {
  _impl_.parallelism_ = 0;
}
inline ::int32_t GetBulkStateRequest::parallelism() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.parallelism)
  return _internal_parallelism();
}
inline void GetBulkStateRequest::set_parallelism(::int32_t value) {
  _internal_set_parallelism(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.parallelism)
}
inline ::int32_t GetBulkStateRequest::_internal_parallelism() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parallelism_;
}
inline void GetBulkStateRequest::_internal_set_parallelism(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parallelism_ = value;
}

// map<string, string> metadata = 4;
inline int GetBulkStateRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetBulkStateRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetBulkStateRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetBulkStateRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetBulkStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkStateRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetBulkStateRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetBulkStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkStateRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// GetBulkStateResponse

// repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
inline int GetBulkStateResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int GetBulkStateResponse::items_size() const {
  return _internal_items_size();
}
inline void GetBulkStateResponse::clear_items() {
  _internal_mutable_items()->Clear();
}
inline ::dapr::proto::runtime::v1::BulkStateItem* GetBulkStateResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >*
GetBulkStateResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::dapr::proto::runtime::v1::BulkStateItem& GetBulkStateResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateResponse.items)
    return _internal_items().Get(index);
}
inline ::dapr::proto::runtime::v1::BulkStateItem* GetBulkStateResponse::add_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::BulkStateItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >&
GetBulkStateResponse::items() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkStateItem>&
GetBulkStateResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkStateItem>*
GetBulkStateResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkStateItem

// string key = 1;
inline void BulkStateItem::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& BulkStateItem::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkStateItem::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.key)
}
inline std::string* BulkStateItem::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.key)
  return _s;
}
inline const std::string& BulkStateItem::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void BulkStateItem::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkStateItem::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkStateItem::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.key)
  return _impl_.key_.Release();
}
inline void BulkStateItem::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.key)
}

// bytes data = 2;
inline void BulkStateItem::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& BulkStateItem::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkStateItem::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.data)
}
inline std::string* BulkStateItem::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.data)
  return _s;
}
inline const std::string& BulkStateItem::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void BulkStateItem::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkStateItem::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkStateItem::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.data)
  return _impl_.data_.Release();
}
inline void BulkStateItem::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.data)
}

// string etag = 3;
inline void BulkStateItem::clear_etag() {
  _impl_.etag_.ClearToEmpty();
}
inline const std::string& BulkStateItem::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.etag)
  return _internal_etag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkStateItem::set_etag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.etag_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.etag)
}
inline std::string* BulkStateItem::mutable_etag() {
  std::string* _s = _internal_mutable_etag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.etag)
  return _s;
}
inline const std::string& BulkStateItem::_internal_etag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.etag_.Get();
}
inline void BulkStateItem::_internal_set_etag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.etag_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkStateItem::_internal_mutable_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.etag_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkStateItem::release_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.etag)
  return _impl_.etag_.Release();
}
inline void BulkStateItem::set_allocated_etag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.etag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.etag_.IsDefault()) {
          _impl_.etag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.etag)
}

// string error = 4;
inline void BulkStateItem::clear_error() {
  _impl_.error_.ClearToEmpty();
}
inline const std::string& BulkStateItem::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkStateItem::set_error(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.error)
}
inline std::string* BulkStateItem::mutable_error() {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.error)
  return _s;
}
inline const std::string& BulkStateItem::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_.Get();
}
inline void BulkStateItem::_internal_set_error(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkStateItem::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.error_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkStateItem::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.error)
  return _impl_.error_.Release();
}
inline void BulkStateItem::set_allocated_error(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.error)
}

// map<string, string> metadata = 5;
inline int BulkStateItem::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int BulkStateItem::metadata_size() const {
  return _internal_metadata_size();
}
inline void BulkStateItem::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& BulkStateItem::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& BulkStateItem::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkStateItem.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* BulkStateItem::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* BulkStateItem::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkStateItem.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetStateResponse

// bytes data = 1;
inline void GetStateResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& GetStateResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStateResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateResponse.data)
}
inline std::string* GetStateResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateResponse.data)
  return _s;
}
inline const std::string& GetStateResponse::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void GetStateResponse::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* GetStateResponse::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* GetStateResponse::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateResponse.data)
  return _impl_.data_.Release();
}
inline void GetStateResponse::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateResponse.data)
}

// string etag = 2;
inline void GetStateResponse::clear_etag() {
  _impl_.etag_.ClearToEmpty();
}
inline const std::string& GetStateResponse::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateResponse.etag)
  return _internal_etag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStateResponse::set_etag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.etag_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateResponse.etag)
}
inline std::string* GetStateResponse::mutable_etag() {
  std::string* _s = _internal_mutable_etag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateResponse.etag)
  return _s;
}
inline const std::string& GetStateResponse::_internal_etag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.etag_.Get();
}
inline void GetStateResponse::_internal_set_etag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.etag_.Set(value, GetArenaForAllocation());
}
inline std::string* GetStateResponse::_internal_mutable_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.etag_.Mutable( GetArenaForAllocation());
}
inline std::string* GetStateResponse::release_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateResponse.etag)
  return _impl_.etag_.Release();
}
inline void GetStateResponse::set_allocated_etag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.etag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.etag_.IsDefault()) {
          _impl_.etag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateResponse.etag)
}

// map<string, string> metadata = 3;
inline int GetStateResponse::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetStateResponse::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetStateResponse::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetStateResponse::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetStateResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetStateResponse.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetStateResponse::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetStateResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetStateResponse.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DeleteStateRequest

// string store_name = 1;
inline void DeleteStateRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& DeleteStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteStateRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
inline std::string* DeleteStateRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return _s;
}
inline const std::string& DeleteStateRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void DeleteStateRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteStateRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DeleteStateRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void DeleteStateRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}

// string key = 2;
inline void DeleteStateRequest::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DeleteStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteStateRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
inline std::string* DeleteStateRequest::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return _s;
}
inline const std::string& DeleteStateRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DeleteStateRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteStateRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* DeleteStateRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return _impl_.key_.Release();
}
inline void DeleteStateRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.key)
}

// .dapr.proto.common.v1.Etag etag = 3;
inline bool DeleteStateRequest::has_etag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.etag_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::Etag& DeleteStateRequest::_internal_etag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::Etag* p = _impl_.etag_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::Etag&>(::dapr::proto::common::v1::_Etag_default_instance_);
}
inline const ::dapr::proto::common::v1::Etag& DeleteStateRequest::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  return _internal_etag();
}
inline void DeleteStateRequest::unsafe_arena_set_allocated_etag(::dapr::proto::common::v1::Etag* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.etag_);
  }
  _impl_.etag_ = reinterpret_cast<::dapr::proto::common::v1::Etag*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}
inline ::dapr::proto::common::v1::Etag* DeleteStateRequest::release_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::Etag* released = _impl_.etag_;
  _impl_.etag_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::Etag* DeleteStateRequest::unsafe_arena_release_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.etag)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::Etag* temp = _impl_.etag_;
  _impl_.etag_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::Etag* DeleteStateRequest::_internal_mutable_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.etag_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::Etag>(GetArenaForAllocation());
    _impl_.etag_ = reinterpret_cast<::dapr::proto::common::v1::Etag*>(p);
  }
  return _impl_.etag_;
}
inline ::dapr::proto::common::v1::Etag* DeleteStateRequest::mutable_etag() {
  ::dapr::proto::common::v1::Etag* _msg = _internal_mutable_etag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  return _msg;
}
inline void DeleteStateRequest::set_allocated_etag(::dapr::proto::common::v1::Etag* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.etag_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.etag_ = reinterpret_cast<::dapr::proto::common::v1::Etag*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}

// .dapr.proto.common.v1.StateOptions options = 4;
inline bool DeleteStateRequest::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::StateOptions& DeleteStateRequest::_internal_options() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::StateOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::StateOptions&>(::dapr::proto::common::v1::_StateOptions_default_instance_);
}
inline const ::dapr::proto::common::v1::StateOptions& DeleteStateRequest::options() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.options)
  return _internal_options();
}
inline void DeleteStateRequest::unsafe_arena_set_allocated_options(::dapr::proto::common::v1::StateOptions* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::dapr::proto::common::v1::StateOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.options)
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::release_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::common::v1::StateOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::unsafe_arena_release_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.options)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::common::v1::StateOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::_internal_mutable_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StateOptions>(GetArenaForAllocation());
    _impl_.options_ = reinterpret_cast<::dapr::proto::common::v1::StateOptions*>(p);
  }
  return _impl_.options_;
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::mutable_options() {
  ::dapr::proto::common::v1::StateOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.options)
  return _msg;
}
inline void DeleteStateRequest::set_allocated_options(::dapr::proto::common::v1::StateOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.options_ = reinterpret_cast<::dapr::proto::common::v1::StateOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.options)
}

// map<string, string> metadata = 5;
inline int DeleteStateRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int DeleteStateRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void DeleteStateRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& DeleteStateRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& DeleteStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.DeleteStateRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* DeleteStateRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* DeleteStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.DeleteStateRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// DeleteBulkStateRequest

// string store_name = 1;
inline void DeleteBulkStateRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& DeleteBulkStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBulkStateRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}
inline std::string* DeleteBulkStateRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
  return _s;
}
inline const std::string& DeleteBulkStateRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void DeleteBulkStateRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteBulkStateRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DeleteBulkStateRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void DeleteBulkStateRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}

// repeated .dapr.proto.common.v1.StateItem states = 2;
inline int DeleteBulkStateRequest::_internal_states_size() const {
  return _internal_states().size();
}
inline int DeleteBulkStateRequest::states_size() const {
  return _internal_states_size();
}
inline ::dapr::proto::common::v1::StateItem* DeleteBulkStateRequest::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return _internal_mutable_states()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
DeleteBulkStateRequest::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_states();
}
inline const ::dapr::proto::common::v1::StateItem& DeleteBulkStateRequest::states(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
    return _internal_states().Get(index);
}
inline ::dapr::proto::common::v1::StateItem* DeleteBulkStateRequest::add_states() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::common::v1::StateItem* _add = _internal_mutable_states()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
DeleteBulkStateRequest::states() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return _internal_states();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>&
DeleteBulkStateRequest::_internal_states() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>*
DeleteBulkStateRequest::_internal_mutable_states() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.states_;
}

// -------------------------------------------------------------------

// SaveStateRequest

// string store_name = 1;
inline void SaveStateRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& SaveStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveStateRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
inline std::string* SaveStateRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return _s;
}
inline const std::string& SaveStateRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void SaveStateRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SaveStateRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SaveStateRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void SaveStateRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}

// repeated .dapr.proto.common.v1.StateItem states = 2;
inline int SaveStateRequest::_internal_states_size() const {
  return _internal_states().size();
}
inline int SaveStateRequest::states_size() const {
  return _internal_states_size();
}
inline ::dapr::proto::common::v1::StateItem* SaveStateRequest::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SaveStateRequest.states)
  return _internal_mutable_states()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
SaveStateRequest::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.SaveStateRequest.states)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_states();
}
inline const ::dapr::proto::common::v1::StateItem& SaveStateRequest::states(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SaveStateRequest.states)
    return _internal_states().Get(index);
}
inline ::dapr::proto::common::v1::StateItem* SaveStateRequest::add_states() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::common::v1::StateItem* _add = _internal_mutable_states()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SaveStateRequest.states)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
SaveStateRequest::states() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.SaveStateRequest.states)
  return _internal_states();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>&
SaveStateRequest::_internal_states() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::common::v1::StateItem>*
SaveStateRequest::_internal_mutable_states() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.states_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryStateRequest

// string store_name = 1 [json_name = "storeName"];
inline void QueryStateRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& QueryStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}
inline std::string* QueryStateRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateRequest.store_name)
  return _s;
}
inline const std::string& QueryStateRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void QueryStateRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void QueryStateRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}

// string query = 2;
inline void QueryStateRequest::clear_query() {
  _impl_.query_.ClearToEmpty();
}
inline const std::string& QueryStateRequest::query() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateRequest.query)
  return _internal_query();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateRequest::set_query(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.query_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateRequest.query)
}
inline std::string* QueryStateRequest::mutable_query() {
  std::string* _s = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateRequest.query)
  return _s;
}
inline const std::string& QueryStateRequest::_internal_query() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.query_.Get();
}
inline void QueryStateRequest::_internal_set_query(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.query_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateRequest::_internal_mutable_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.query_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateRequest::release_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateRequest.query)
  return _impl_.query_.Release();
}
inline void QueryStateRequest::set_allocated_query(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.query_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.query_.IsDefault()) {
          _impl_.query_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateRequest.query)
}

// map<string, string> metadata = 3;
inline int QueryStateRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int QueryStateRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void QueryStateRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& QueryStateRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& QueryStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.QueryStateRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* QueryStateRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* QueryStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.QueryStateRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// QueryStateItem

// string key = 1;
inline void QueryStateItem::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& QueryStateItem::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateItem::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.key)
}
inline std::string* QueryStateItem::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.key)
  return _s;
}
inline const std::string& QueryStateItem::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void QueryStateItem::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateItem::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateItem::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.key)
  return _impl_.key_.Release();
}
inline void QueryStateItem::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.key)
}

// bytes data = 2;
inline void QueryStateItem::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& QueryStateItem::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateItem::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.data)
}
inline std::string* QueryStateItem::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.data)
  return _s;
}
inline const std::string& QueryStateItem::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void QueryStateItem::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateItem::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateItem::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.data)
  return _impl_.data_.Release();
}
inline void QueryStateItem::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.data)
}

// string etag = 3;
inline void QueryStateItem::clear_etag() {
  _impl_.etag_.ClearToEmpty();
}
inline const std::string& QueryStateItem::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.etag)
  return _internal_etag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateItem::set_etag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.etag_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.etag)
}
inline std::string* QueryStateItem::mutable_etag() {
  std::string* _s = _internal_mutable_etag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.etag)
  return _s;
}
inline const std::string& QueryStateItem::_internal_etag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.etag_.Get();
}
inline void QueryStateItem::_internal_set_etag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.etag_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateItem::_internal_mutable_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.etag_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateItem::release_etag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.etag)
  return _impl_.etag_.Release();
}
inline void QueryStateItem::set_allocated_etag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.etag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.etag_.IsDefault()) {
          _impl_.etag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.etag)
}

// string error = 4;
inline void QueryStateItem::clear_error() {
  _impl_.error_.ClearToEmpty();
}
inline const std::string& QueryStateItem::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateItem::set_error(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.error)
}
inline std::string* QueryStateItem::mutable_error() {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.error)
  return _s;
}
inline const std::string& QueryStateItem::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_.Get();
}
inline void QueryStateItem::_internal_set_error(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateItem::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.error_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateItem::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.error)
  return _impl_.error_.Release();
}
inline void QueryStateItem::set_allocated_error(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.error)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryStateResponse

// repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
inline int QueryStateResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int QueryStateResponse::results_size() const {
  return _internal_results_size();
}
inline void QueryStateResponse::clear_results() {
  _internal_mutable_results()->Clear();
}
inline ::dapr::proto::runtime::v1::QueryStateItem* QueryStateResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >*
QueryStateResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.QueryStateResponse.results)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_results();
}
inline const ::dapr::proto::runtime::v1::QueryStateItem& QueryStateResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateResponse.results)
    return _internal_results().Get(index);
}
inline ::dapr::proto::runtime::v1::QueryStateItem* QueryStateResponse::add_results() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::QueryStateItem* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.QueryStateResponse.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >&
QueryStateResponse::results() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.QueryStateResponse.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::QueryStateItem>&
QueryStateResponse::_internal_results() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::QueryStateItem>*
QueryStateResponse::_internal_mutable_results() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.results_;
}

// string token = 2;
inline void QueryStateResponse::clear_token() {
  _impl_.token_.ClearToEmpty();
}
inline const std::string& QueryStateResponse::token() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStateResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateResponse.token)
}
inline std::string* QueryStateResponse::mutable_token() {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateResponse.token)
  return _s;
}
inline const std::string& QueryStateResponse::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void QueryStateResponse::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArenaForAllocation());
}
inline std::string* QueryStateResponse::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArenaForAllocation());
}
inline std::string* QueryStateResponse::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateResponse.token)
  return _impl_.token_.Release();
}
inline void QueryStateResponse::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateResponse.token)
}

// map<string, string> metadata = 3;
inline int QueryStateResponse::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int QueryStateResponse::metadata_size() const {
  return _internal_metadata_size();
}
inline void QueryStateResponse::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& QueryStateResponse::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& QueryStateResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.QueryStateResponse.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* QueryStateResponse::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* QueryStateResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.QueryStateResponse.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PublishEventRequest

// string pubsub_name = 1;
inline void PublishEventRequest::clear_pubsub_name() {
  _impl_.pubsub_name_.ClearToEmpty();
}
inline const std::string& PublishEventRequest::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return _internal_pubsub_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PublishEventRequest::set_pubsub_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pubsub_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
inline std::string* PublishEventRequest::mutable_pubsub_name() {
  std::string* _s = _internal_mutable_pubsub_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return _s;
}
inline const std::string& PublishEventRequest::_internal_pubsub_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pubsub_name_.Get();
}
inline void PublishEventRequest::_internal_set_pubsub_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pubsub_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PublishEventRequest::_internal_mutable_pubsub_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pubsub_name_.Mutable( GetArenaForAllocation());
}
inline std::string* PublishEventRequest::release_pubsub_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return _impl_.pubsub_name_.Release();
}
inline void PublishEventRequest::set_allocated_pubsub_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pubsub_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubsub_name_.IsDefault()) {
          _impl_.pubsub_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}

// string topic = 2;
inline void PublishEventRequest::clear_topic() {
  _impl_.topic_.ClearToEmpty();
}
inline const std::string& PublishEventRequest::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PublishEventRequest::set_topic(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
inline std::string* PublishEventRequest::mutable_topic() {
  std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return _s;
}
inline const std::string& PublishEventRequest::_internal_topic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.topic_.Get();
}
inline void PublishEventRequest::_internal_set_topic(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.topic_.Set(value, GetArenaForAllocation());
}
inline std::string* PublishEventRequest::_internal_mutable_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.topic_.Mutable( GetArenaForAllocation());
}
inline std::string* PublishEventRequest::release_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return _impl_.topic_.Release();
}
inline void PublishEventRequest::set_allocated_topic(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.topic_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.topic_.IsDefault()) {
          _impl_.topic_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.topic)
}

// bytes data = 3;
inline void PublishEventRequest::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& PublishEventRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PublishEventRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.data)
}
inline std::string* PublishEventRequest::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.data)
  return _s;
}
inline const std::string& PublishEventRequest::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void PublishEventRequest::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* PublishEventRequest::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* PublishEventRequest::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.data)
  return _impl_.data_.Release();
}
inline void PublishEventRequest::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.data)
}

// string data_content_type = 4;
inline void PublishEventRequest::clear_data_content_type() {
  _impl_.data_content_type_.ClearToEmpty();
}
inline const std::string& PublishEventRequest::data_content_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return _internal_data_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PublishEventRequest::set_data_content_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
inline std::string* PublishEventRequest::mutable_data_content_type() {
  std::string* _s = _internal_mutable_data_content_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return _s;
}
inline const std::string& PublishEventRequest::_internal_data_content_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_content_type_.Get();
}
inline void PublishEventRequest::_internal_set_data_content_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_content_type_.Set(value, GetArenaForAllocation());
}
inline std::string* PublishEventRequest::_internal_mutable_data_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_content_type_.Mutable( GetArenaForAllocation());
}
inline std::string* PublishEventRequest::release_data_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return _impl_.data_content_type_.Release();
}
inline void PublishEventRequest::set_allocated_data_content_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_content_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_content_type_.IsDefault()) {
          _impl_.data_content_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}

// map<string, string> metadata = 5;
inline int PublishEventRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int PublishEventRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void PublishEventRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PublishEventRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PublishEventRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.PublishEventRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* PublishEventRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PublishEventRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.PublishEventRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkPublishRequest

// string pubsub_name = 1;
inline void BulkPublishRequest::clear_pubsub_name() {
  _impl_.pubsub_name_.ClearToEmpty();
}
inline const std::string& BulkPublishRequest::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
  return _internal_pubsub_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishRequest::set_pubsub_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pubsub_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}
inline std::string* BulkPublishRequest::mutable_pubsub_name() {
  std::string* _s = _internal_mutable_pubsub_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
  return _s;
}
inline const std::string& BulkPublishRequest::_internal_pubsub_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pubsub_name_.Get();
}
inline void BulkPublishRequest::_internal_set_pubsub_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pubsub_name_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishRequest::_internal_mutable_pubsub_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pubsub_name_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishRequest::release_pubsub_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
  return _impl_.pubsub_name_.Release();
}
inline void BulkPublishRequest::set_allocated_pubsub_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pubsub_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubsub_name_.IsDefault()) {
          _impl_.pubsub_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}

// string topic = 2;
inline void BulkPublishRequest::clear_topic() {
  _impl_.topic_.ClearToEmpty();
}
inline const std::string& BulkPublishRequest::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishRequest::set_topic(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}
inline std::string* BulkPublishRequest::mutable_topic() {
  std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequest.topic)
  return _s;
}
inline const std::string& BulkPublishRequest::_internal_topic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.topic_.Get();
}
inline void BulkPublishRequest::_internal_set_topic(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.topic_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishRequest::_internal_mutable_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.topic_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishRequest::release_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequest.topic)
  return _impl_.topic_.Release();
}
inline void BulkPublishRequest::set_allocated_topic(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.topic_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.topic_.IsDefault()) {
          _impl_.topic_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}

// repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
inline int BulkPublishRequest::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int BulkPublishRequest::entries_size() const {
  return _internal_entries_size();
}
inline void BulkPublishRequest::clear_entries() {
  _internal_mutable_entries()->Clear();
}
inline ::dapr::proto::runtime::v1::BulkPublishRequestEntry* BulkPublishRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >*
BulkPublishRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::dapr::proto::runtime::v1::BulkPublishRequestEntry& BulkPublishRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequest.entries)
    return _internal_entries().Get(index);
}
inline ::dapr::proto::runtime::v1::BulkPublishRequestEntry* BulkPublishRequest::add_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >&
BulkPublishRequest::entries() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishRequestEntry>&
BulkPublishRequest::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishRequestEntry>*
BulkPublishRequest::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// map<string, string> metadata = 4;
inline int BulkPublishRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int BulkPublishRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void BulkPublishRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& BulkPublishRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& BulkPublishRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkPublishRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* BulkPublishRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* BulkPublishRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkPublishRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkPublishRequestEntry

// string entry_id = 1;
inline void BulkPublishRequestEntry::clear_entry_id() {
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& BulkPublishRequestEntry::entry_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishRequestEntry::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}
inline std::string* BulkPublishRequestEntry::mutable_entry_id() {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
  return _s;
}
inline const std::string& BulkPublishRequestEntry::_internal_entry_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entry_id_.Get();
}
inline void BulkPublishRequestEntry::_internal_set_entry_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entry_id_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishRequestEntry::_internal_mutable_entry_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.entry_id_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishRequestEntry::release_entry_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
  return _impl_.entry_id_.Release();
}
inline void BulkPublishRequestEntry::set_allocated_entry_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entry_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_id_.IsDefault()) {
          _impl_.entry_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}

// bytes event = 2;
inline void BulkPublishRequestEntry::clear_event() {
  _impl_.event_.ClearToEmpty();
}
inline const std::string& BulkPublishRequestEntry::event() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
  return _internal_event();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishRequestEntry::set_event(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}
inline std::string* BulkPublishRequestEntry::mutable_event() {
  std::string* _s = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
  return _s;
}
inline const std::string& BulkPublishRequestEntry::_internal_event() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.event_.Get();
}
inline void BulkPublishRequestEntry::_internal_set_event(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishRequestEntry::_internal_mutable_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.event_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishRequestEntry::release_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
  return _impl_.event_.Release();
}
inline void BulkPublishRequestEntry::set_allocated_event(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.event_.IsDefault()) {
          _impl_.event_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}

// string content_type = 3;
inline void BulkPublishRequestEntry::clear_content_type() {
  _impl_.content_type_.ClearToEmpty();
}
inline const std::string& BulkPublishRequestEntry::content_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
  return _internal_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishRequestEntry::set_content_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}
inline std::string* BulkPublishRequestEntry::mutable_content_type() {
  std::string* _s = _internal_mutable_content_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
  return _s;
}
inline const std::string& BulkPublishRequestEntry::_internal_content_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_type_.Get();
}
inline void BulkPublishRequestEntry::_internal_set_content_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishRequestEntry::_internal_mutable_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_type_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishRequestEntry::release_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
  return _impl_.content_type_.Release();
}
inline void BulkPublishRequestEntry::set_allocated_content_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_type_.IsDefault()) {
          _impl_.content_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}

// map<string, string> metadata = 4;
inline int BulkPublishRequestEntry::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int BulkPublishRequestEntry::metadata_size() const {
  return _internal_metadata_size();
}
inline void BulkPublishRequestEntry::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& BulkPublishRequestEntry::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& BulkPublishRequestEntry::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkPublishRequestEntry.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* BulkPublishRequestEntry::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* BulkPublishRequestEntry::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkPublishRequestEntry.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// BulkPublishResponse

// repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
inline int BulkPublishResponse::_internal_failedentries_size() const {
  return _internal_failedentries().size();
}
inline int BulkPublishResponse::failedentries_size() const {
  return _internal_failedentries_size();
}
inline void BulkPublishResponse::clear_failedentries() {
  _internal_mutable_failedentries()->Clear();
}
inline ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* BulkPublishResponse::mutable_failedentries(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return _internal_mutable_failedentries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >*
BulkPublishResponse::mutable_failedentries() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_failedentries();
}
inline const ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry& BulkPublishResponse::failedentries(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
    return _internal_failedentries().Get(index);
}
inline ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* BulkPublishResponse::add_failedentries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* _add = _internal_mutable_failedentries()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >&
BulkPublishResponse::failedentries() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return _internal_failedentries();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry>&
BulkPublishResponse::_internal_failedentries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.failedentries_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry>*
BulkPublishResponse::_internal_mutable_failedentries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.failedentries_;
}

// -------------------------------------------------------------------

// BulkPublishResponseFailedEntry

// string entry_id = 1;
inline void BulkPublishResponseFailedEntry::clear_entry_id() {
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& BulkPublishResponseFailedEntry::entry_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishResponseFailedEntry::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}
inline std::string* BulkPublishResponseFailedEntry::mutable_entry_id() {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
  return _s;
}
inline const std::string& BulkPublishResponseFailedEntry::_internal_entry_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entry_id_.Get();
}
inline void BulkPublishResponseFailedEntry::_internal_set_entry_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entry_id_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishResponseFailedEntry::_internal_mutable_entry_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.entry_id_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishResponseFailedEntry::release_entry_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
  return _impl_.entry_id_.Release();
}
inline void BulkPublishResponseFailedEntry::set_allocated_entry_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entry_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_id_.IsDefault()) {
          _impl_.entry_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}

// string error = 2;
inline void BulkPublishResponseFailedEntry::clear_error() {
  _impl_.error_.ClearToEmpty();
}
inline const std::string& BulkPublishResponseFailedEntry::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BulkPublishResponseFailedEntry::set_error(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}
inline std::string* BulkPublishResponseFailedEntry::mutable_error() {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
  return _s;
}
inline const std::string& BulkPublishResponseFailedEntry::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_.Get();
}
inline void BulkPublishResponseFailedEntry::_internal_set_error(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_.Set(value, GetArenaForAllocation());
}
inline std::string* BulkPublishResponseFailedEntry::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.error_.Mutable( GetArenaForAllocation());
}
inline std::string* BulkPublishResponseFailedEntry::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
  return _impl_.error_.Release();
}
inline void BulkPublishResponseFailedEntry::set_allocated_error(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingRequest

// string name = 1;
inline void InvokeBindingRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& InvokeBindingRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeBindingRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
inline std::string* InvokeBindingRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return _s;
}
inline const std::string& InvokeBindingRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void InvokeBindingRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeBindingRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeBindingRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return _impl_.name_.Release();
}
inline void InvokeBindingRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}

// bytes data = 2;
inline void InvokeBindingRequest::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InvokeBindingRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeBindingRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
inline std::string* InvokeBindingRequest::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return _s;
}
inline const std::string& InvokeBindingRequest::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void InvokeBindingRequest::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeBindingRequest::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeBindingRequest::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return _impl_.data_.Release();
}
inline void InvokeBindingRequest::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}

// map<string, string> metadata = 3;
inline int InvokeBindingRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int InvokeBindingRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void InvokeBindingRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& InvokeBindingRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& InvokeBindingRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeBindingRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* InvokeBindingRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* InvokeBindingRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeBindingRequest.metadata)
  return _internal_mutable_metadata();
}

// string operation = 4;
inline void InvokeBindingRequest::clear_operation() {
  _impl_.operation_.ClearToEmpty();
}
inline const std::string& InvokeBindingRequest::operation() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return _internal_operation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeBindingRequest::set_operation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operation_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
inline std::string* InvokeBindingRequest::mutable_operation() {
  std::string* _s = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return _s;
}
inline const std::string& InvokeBindingRequest::_internal_operation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operation_.Get();
}
inline void InvokeBindingRequest::_internal_set_operation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operation_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeBindingRequest::_internal_mutable_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.operation_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeBindingRequest::release_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return _impl_.operation_.Release();
}
inline void InvokeBindingRequest::set_allocated_operation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operation_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.operation_.IsDefault()) {
          _impl_.operation_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingResponse

// bytes data = 1;
inline void InvokeBindingResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InvokeBindingResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeBindingResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
inline std::string* InvokeBindingResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return _s;
}
inline const std::string& InvokeBindingResponse::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void InvokeBindingResponse::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeBindingResponse::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeBindingResponse::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return _impl_.data_.Release();
}
inline void InvokeBindingResponse::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}

// map<string, string> metadata = 2;
inline int InvokeBindingResponse::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int InvokeBindingResponse::metadata_size() const {
  return _internal_metadata_size();
}
inline void InvokeBindingResponse::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& InvokeBindingResponse::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& InvokeBindingResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeBindingResponse.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* InvokeBindingResponse::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* InvokeBindingResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeBindingResponse.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretRequest

// string store_name = 1 [json_name = "storeName"];
inline void GetSecretRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& GetSecretRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSecretRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
inline std::string* GetSecretRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return _s;
}
inline const std::string& GetSecretRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void GetSecretRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSecretRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSecretRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void GetSecretRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}

// string key = 2;
inline void GetSecretRequest::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& GetSecretRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetSecretRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSecretRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetSecretRequest.key)
}
inline std::string* GetSecretRequest::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetSecretRequest.key)
  return _s;
}
inline const std::string& GetSecretRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void GetSecretRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* GetSecretRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* GetSecretRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetSecretRequest.key)
  return _impl_.key_.Release();
}
inline void GetSecretRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetSecretRequest.key)
}

// map<string, string> metadata = 3;
inline int GetSecretRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetSecretRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetSecretRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetSecretRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetSecretRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetSecretRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetSecretRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetSecretRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetSecretRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretResponse

// map<string, string> data = 1;
inline int GetSecretResponse::_internal_data_size() const {
  return _internal_data().size();
}
inline int GetSecretResponse::data_size() const {
  return _internal_data_size();
}
inline void GetSecretResponse::clear_data() {
  _impl_.data_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetSecretResponse::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetSecretResponse::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetSecretResponse.data)
  return _internal_data();
}
inline ::google::protobuf::Map<std::string, std::string>* GetSecretResponse::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetSecretResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetSecretResponse.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkSecretRequest

// string store_name = 1 [json_name = "storeName"];
inline void GetBulkSecretRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& GetBulkSecretRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBulkSecretRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
inline std::string* GetBulkSecretRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return _s;
}
inline const std::string& GetBulkSecretRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void GetBulkSecretRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetBulkSecretRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetBulkSecretRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void GetBulkSecretRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}

// map<string, string> metadata = 2;
inline int GetBulkSecretRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetBulkSecretRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetBulkSecretRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetBulkSecretRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetBulkSecretRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkSecretRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetBulkSecretRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetBulkSecretRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkSecretRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SecretResponse

// map<string, string> secrets = 1;
inline int SecretResponse::_internal_secrets_size() const {
  return _internal_secrets().size();
}
inline int SecretResponse::secrets_size() const {
  return _internal_secrets_size();
}
inline void SecretResponse::clear_secrets() {
  _impl_.secrets_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SecretResponse::_internal_secrets() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.secrets_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SecretResponse::secrets() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.SecretResponse.secrets)
  return _internal_secrets();
}
inline ::google::protobuf::Map<std::string, std::string>* SecretResponse::_internal_mutable_secrets() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.secrets_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SecretResponse::mutable_secrets() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.SecretResponse.secrets)
  return _internal_mutable_secrets();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkSecretResponse

// map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
inline int GetBulkSecretResponse::_internal_data_size() const {
  return _internal_data().size();
}
inline int GetBulkSecretResponse::data_size() const {
  return _internal_data_size();
}
inline void GetBulkSecretResponse::clear_data() {
  _impl_.data_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>& GetBulkSecretResponse::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>& GetBulkSecretResponse::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkSecretResponse.data)
  return _internal_data();
}
inline ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>* GetBulkSecretResponse::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::dapr::proto::runtime::v1::SecretResponse>* GetBulkSecretResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkSecretResponse.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// TransactionalStateOperation

// string operationType = 1;
inline void TransactionalStateOperation::clear_operationtype() {
  _impl_.operationtype_.ClearToEmpty();
}
inline const std::string& TransactionalStateOperation::operationtype() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return _internal_operationtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransactionalStateOperation::set_operationtype(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operationtype_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
inline std::string* TransactionalStateOperation::mutable_operationtype() {
  std::string* _s = _internal_mutable_operationtype();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return _s;
}
inline const std::string& TransactionalStateOperation::_internal_operationtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operationtype_.Get();
}
inline void TransactionalStateOperation::_internal_set_operationtype(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operationtype_.Set(value, GetArenaForAllocation());
}
inline std::string* TransactionalStateOperation::_internal_mutable_operationtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.operationtype_.Mutable( GetArenaForAllocation());
}
inline std::string* TransactionalStateOperation::release_operationtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return _impl_.operationtype_.Release();
}
inline void TransactionalStateOperation::set_allocated_operationtype(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operationtype_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.operationtype_.IsDefault()) {
          _impl_.operationtype_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}

// .dapr.proto.common.v1.StateItem request = 2;
inline bool TransactionalStateOperation::has_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::StateItem& TransactionalStateOperation::_internal_request() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::StateItem* p = _impl_.request_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::StateItem&>(::dapr::proto::common::v1::_StateItem_default_instance_);
}
inline const ::dapr::proto::common::v1::StateItem& TransactionalStateOperation::request() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  return _internal_request();
}
inline void TransactionalStateOperation::unsafe_arena_set_allocated_request(::dapr::proto::common::v1::StateItem* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_);
  }
  _impl_.request_ = reinterpret_cast<::dapr::proto::common::v1::StateItem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.request)
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::release_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::StateItem* released = _impl_.request_;
  _impl_.request_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::unsafe_arena_release_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalStateOperation.request)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::StateItem* temp = _impl_.request_;
  _impl_.request_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::_internal_mutable_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.request_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StateItem>(GetArenaForAllocation());
    _impl_.request_ = reinterpret_cast<::dapr::proto::common::v1::StateItem*>(p);
  }
  return _impl_.request_;
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::mutable_request() {
  ::dapr::proto::common::v1::StateItem* _msg = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  return _msg;
}
inline void TransactionalStateOperation::set_allocated_request(::dapr::proto::common::v1::StateItem* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.request_ = reinterpret_cast<::dapr::proto::common::v1::StateItem*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.request)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExecuteStateTransactionRequest

// string storeName = 1;
inline void ExecuteStateTransactionRequest::clear_storename() {
  _impl_.storename_.ClearToEmpty();
}
inline const std::string& ExecuteStateTransactionRequest::storename() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return _internal_storename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecuteStateTransactionRequest::set_storename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.storename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
inline std::string* ExecuteStateTransactionRequest::mutable_storename() {
  std::string* _s = _internal_mutable_storename();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return _s;
}
inline const std::string& ExecuteStateTransactionRequest::_internal_storename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.storename_.Get();
}
inline void ExecuteStateTransactionRequest::_internal_set_storename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.storename_.Set(value, GetArenaForAllocation());
}
inline std::string* ExecuteStateTransactionRequest::_internal_mutable_storename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.storename_.Mutable( GetArenaForAllocation());
}
inline std::string* ExecuteStateTransactionRequest::release_storename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return _impl_.storename_.Release();
}
inline void ExecuteStateTransactionRequest::set_allocated_storename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.storename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.storename_.IsDefault()) {
          _impl_.storename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}

// repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
inline int ExecuteStateTransactionRequest::_internal_operations_size() const {
  return _internal_operations().size();
}
inline int ExecuteStateTransactionRequest::operations_size() const {
  return _internal_operations_size();
}
inline void ExecuteStateTransactionRequest::clear_operations() {
  _internal_mutable_operations()->Clear();
}
inline ::dapr::proto::runtime::v1::TransactionalStateOperation* ExecuteStateTransactionRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return _internal_mutable_operations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >*
ExecuteStateTransactionRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_operations();
}
inline const ::dapr::proto::runtime::v1::TransactionalStateOperation& ExecuteStateTransactionRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
    return _internal_operations().Get(index);
}
inline ::dapr::proto::runtime::v1::TransactionalStateOperation* ExecuteStateTransactionRequest::add_operations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::TransactionalStateOperation* _add = _internal_mutable_operations()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >&
ExecuteStateTransactionRequest::operations() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return _internal_operations();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalStateOperation>&
ExecuteStateTransactionRequest::_internal_operations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operations_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalStateOperation>*
ExecuteStateTransactionRequest::_internal_mutable_operations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.operations_;
}

// map<string, string> metadata = 3;
inline int ExecuteStateTransactionRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int ExecuteStateTransactionRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void ExecuteStateTransactionRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ExecuteStateTransactionRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ExecuteStateTransactionRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ExecuteStateTransactionRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ExecuteStateTransactionRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// RegisterActorTimerRequest

// string actor_type = 1;
inline void RegisterActorTimerRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
inline std::string* RegisterActorTimerRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}

// string actor_id = 2;
inline void RegisterActorTimerRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
inline std::string* RegisterActorTimerRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}

// string name = 3;
inline void RegisterActorTimerRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
inline std::string* RegisterActorTimerRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return _impl_.name_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}

// string due_time = 4;
inline void RegisterActorTimerRequest::clear_due_time() {
  _impl_.due_time_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::due_time() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return _internal_due_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_due_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.due_time_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
inline std::string* RegisterActorTimerRequest::mutable_due_time() {
  std::string* _s = _internal_mutable_due_time();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_due_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.due_time_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_due_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.due_time_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_due_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.due_time_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_due_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return _impl_.due_time_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_due_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.due_time_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.due_time_.IsDefault()) {
          _impl_.due_time_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}

// string period = 5;
inline void RegisterActorTimerRequest::clear_period() {
  _impl_.period_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::period() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return _internal_period();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_period(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.period_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
inline std::string* RegisterActorTimerRequest::mutable_period() {
  std::string* _s = _internal_mutable_period();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_period() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.period_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_period(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.period_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_period() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.period_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_period() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return _impl_.period_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_period(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.period_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.period_.IsDefault()) {
          _impl_.period_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}

// string callback = 6;
inline void RegisterActorTimerRequest::clear_callback() {
  _impl_.callback_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::callback() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return _internal_callback();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_callback(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.callback_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
inline std::string* RegisterActorTimerRequest::mutable_callback() {
  std::string* _s = _internal_mutable_callback();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_callback() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.callback_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_callback(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.callback_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_callback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.callback_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_callback() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return _impl_.callback_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_callback(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.callback_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.callback_.IsDefault()) {
          _impl_.callback_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}

// bytes data = 7;
inline void RegisterActorTimerRequest::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
inline std::string* RegisterActorTimerRequest::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return _impl_.data_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}

// string ttl = 8;
inline void RegisterActorTimerRequest::clear_ttl() {
  _impl_.ttl_.ClearToEmpty();
}
inline const std::string& RegisterActorTimerRequest::ttl() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
  return _internal_ttl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorTimerRequest::set_ttl(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ttl_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}
inline std::string* RegisterActorTimerRequest::mutable_ttl() {
  std::string* _s = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
  return _s;
}
inline const std::string& RegisterActorTimerRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ttl_.Get();
}
inline void RegisterActorTimerRequest::_internal_set_ttl(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ttl_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ttl_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorTimerRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
  return _impl_.ttl_.Release();
}
inline void RegisterActorTimerRequest::set_allocated_ttl(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ttl_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ttl_.IsDefault()) {
          _impl_.ttl_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}

// -------------------------------------------------------------------

// UnregisterActorTimerRequest

// string actor_type = 1;
inline void UnregisterActorTimerRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& UnregisterActorTimerRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterActorTimerRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
inline std::string* UnregisterActorTimerRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return _s;
}
inline const std::string& UnregisterActorTimerRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void UnregisterActorTimerRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* UnregisterActorTimerRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* UnregisterActorTimerRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void UnregisterActorTimerRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}

// string actor_id = 2;
inline void UnregisterActorTimerRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& UnregisterActorTimerRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterActorTimerRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
inline std::string* UnregisterActorTimerRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return _s;
}
inline const std::string& UnregisterActorTimerRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void UnregisterActorTimerRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* UnregisterActorTimerRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* UnregisterActorTimerRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void UnregisterActorTimerRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}

// string name = 3;
inline void UnregisterActorTimerRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& UnregisterActorTimerRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterActorTimerRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
inline std::string* UnregisterActorTimerRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return _s;
}
inline const std::string& UnregisterActorTimerRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void UnregisterActorTimerRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* UnregisterActorTimerRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* UnregisterActorTimerRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return _impl_.name_.Release();
}
inline void UnregisterActorTimerRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}

// -------------------------------------------------------------------

// RegisterActorReminderRequest

// string actor_type = 1;
inline void RegisterActorReminderRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
inline std::string* RegisterActorReminderRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void RegisterActorReminderRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
inline std::string* RegisterActorReminderRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}

// string name = 3;
inline void RegisterActorReminderRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
inline std::string* RegisterActorReminderRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return _impl_.name_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}

// string due_time = 4;
inline void RegisterActorReminderRequest::clear_due_time() {
  _impl_.due_time_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::due_time() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return _internal_due_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_due_time(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.due_time_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
inline std::string* RegisterActorReminderRequest::mutable_due_time() {
  std::string* _s = _internal_mutable_due_time();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_due_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.due_time_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_due_time(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.due_time_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_due_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.due_time_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_due_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return _impl_.due_time_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_due_time(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.due_time_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.due_time_.IsDefault()) {
          _impl_.due_time_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}

// string period = 5;
inline void RegisterActorReminderRequest::clear_period() {
  _impl_.period_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::period() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return _internal_period();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_period(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.period_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
inline std::string* RegisterActorReminderRequest::mutable_period() {
  std::string* _s = _internal_mutable_period();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_period() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.period_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_period(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.period_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_period() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.period_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_period() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return _impl_.period_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_period(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.period_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.period_.IsDefault()) {
          _impl_.period_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}

// bytes data = 6;
inline void RegisterActorReminderRequest::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
inline std::string* RegisterActorReminderRequest::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return _impl_.data_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}

// string ttl = 7;
inline void RegisterActorReminderRequest::clear_ttl() {
  _impl_.ttl_.ClearToEmpty();
}
inline const std::string& RegisterActorReminderRequest::ttl() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
  return _internal_ttl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterActorReminderRequest::set_ttl(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ttl_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}
inline std::string* RegisterActorReminderRequest::mutable_ttl() {
  std::string* _s = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
  return _s;
}
inline const std::string& RegisterActorReminderRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ttl_.Get();
}
inline void RegisterActorReminderRequest::_internal_set_ttl(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ttl_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ttl_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisterActorReminderRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
  return _impl_.ttl_.Release();
}
inline void RegisterActorReminderRequest::set_allocated_ttl(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ttl_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ttl_.IsDefault()) {
          _impl_.ttl_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}

// -------------------------------------------------------------------

// UnregisterActorReminderRequest

// string actor_type = 1;
inline void UnregisterActorReminderRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& UnregisterActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterActorReminderRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
inline std::string* UnregisterActorReminderRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return _s;
}
inline const std::string& UnregisterActorReminderRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void UnregisterActorReminderRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* UnregisterActorReminderRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* UnregisterActorReminderRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void UnregisterActorReminderRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void UnregisterActorReminderRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& UnregisterActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterActorReminderRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
inline std::string* UnregisterActorReminderRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return _s;
}
inline const std::string& UnregisterActorReminderRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void UnregisterActorReminderRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* UnregisterActorReminderRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* UnregisterActorReminderRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void UnregisterActorReminderRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}

// string name = 3;
inline void UnregisterActorReminderRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& UnregisterActorReminderRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnregisterActorReminderRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
inline std::string* UnregisterActorReminderRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return _s;
}
inline const std::string& UnregisterActorReminderRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void UnregisterActorReminderRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* UnregisterActorReminderRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* UnregisterActorReminderRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return _impl_.name_.Release();
}
inline void UnregisterActorReminderRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}

// -------------------------------------------------------------------

// GetActorStateRequest

// string actor_type = 1;
inline void GetActorStateRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& GetActorStateRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetActorStateRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
inline std::string* GetActorStateRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return _s;
}
inline const std::string& GetActorStateRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void GetActorStateRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* GetActorStateRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* GetActorStateRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void GetActorStateRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}

// string actor_id = 2;
inline void GetActorStateRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& GetActorStateRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetActorStateRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
inline std::string* GetActorStateRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return _s;
}
inline const std::string& GetActorStateRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void GetActorStateRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetActorStateRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* GetActorStateRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void GetActorStateRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}

// string key = 3;
inline void GetActorStateRequest::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& GetActorStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetActorStateRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
inline std::string* GetActorStateRequest::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return _s;
}
inline const std::string& GetActorStateRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void GetActorStateRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* GetActorStateRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* GetActorStateRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return _impl_.key_.Release();
}
inline void GetActorStateRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.key)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetActorStateResponse

// bytes data = 1;
inline void GetActorStateResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& GetActorStateResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetActorStateResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
inline std::string* GetActorStateResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return _s;
}
inline const std::string& GetActorStateResponse::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void GetActorStateResponse::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* GetActorStateResponse::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* GetActorStateResponse::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return _impl_.data_.Release();
}
inline void GetActorStateResponse::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateResponse.data)
}

// map<string, string> metadata = 2;
inline int GetActorStateResponse::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetActorStateResponse::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetActorStateResponse::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetActorStateResponse::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetActorStateResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetActorStateResponse.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetActorStateResponse::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetActorStateResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetActorStateResponse.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// ExecuteActorStateTransactionRequest

// string actor_type = 1;
inline void ExecuteActorStateTransactionRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& ExecuteActorStateTransactionRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecuteActorStateTransactionRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
inline std::string* ExecuteActorStateTransactionRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return _s;
}
inline const std::string& ExecuteActorStateTransactionRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void ExecuteActorStateTransactionRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* ExecuteActorStateTransactionRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* ExecuteActorStateTransactionRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void ExecuteActorStateTransactionRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}

// string actor_id = 2;
inline void ExecuteActorStateTransactionRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& ExecuteActorStateTransactionRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecuteActorStateTransactionRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
inline std::string* ExecuteActorStateTransactionRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return _s;
}
inline const std::string& ExecuteActorStateTransactionRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void ExecuteActorStateTransactionRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ExecuteActorStateTransactionRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ExecuteActorStateTransactionRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void ExecuteActorStateTransactionRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}

// repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
inline int ExecuteActorStateTransactionRequest::_internal_operations_size() const {
  return _internal_operations().size();
}
inline int ExecuteActorStateTransactionRequest::operations_size() const {
  return _internal_operations_size();
}
inline void ExecuteActorStateTransactionRequest::clear_operations() {
  _internal_mutable_operations()->Clear();
}
inline ::dapr::proto::runtime::v1::TransactionalActorStateOperation* ExecuteActorStateTransactionRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return _internal_mutable_operations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >*
ExecuteActorStateTransactionRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_operations();
}
inline const ::dapr::proto::runtime::v1::TransactionalActorStateOperation& ExecuteActorStateTransactionRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
    return _internal_operations().Get(index);
}
inline ::dapr::proto::runtime::v1::TransactionalActorStateOperation* ExecuteActorStateTransactionRequest::add_operations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* _add = _internal_mutable_operations()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >&
ExecuteActorStateTransactionRequest::operations() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return _internal_operations();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalActorStateOperation>&
ExecuteActorStateTransactionRequest::_internal_operations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operations_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::TransactionalActorStateOperation>*
ExecuteActorStateTransactionRequest::_internal_mutable_operations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.operations_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TransactionalActorStateOperation

// string operationType = 1;
inline void TransactionalActorStateOperation::clear_operationtype() {
  _impl_.operationtype_.ClearToEmpty();
}
inline const std::string& TransactionalActorStateOperation::operationtype() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return _internal_operationtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransactionalActorStateOperation::set_operationtype(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operationtype_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
inline std::string* TransactionalActorStateOperation::mutable_operationtype() {
  std::string* _s = _internal_mutable_operationtype();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return _s;
}
inline const std::string& TransactionalActorStateOperation::_internal_operationtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operationtype_.Get();
}
inline void TransactionalActorStateOperation::_internal_set_operationtype(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operationtype_.Set(value, GetArenaForAllocation());
}
inline std::string* TransactionalActorStateOperation::_internal_mutable_operationtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.operationtype_.Mutable( GetArenaForAllocation());
}
inline std::string* TransactionalActorStateOperation::release_operationtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return _impl_.operationtype_.Release();
}
inline void TransactionalActorStateOperation::set_allocated_operationtype(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operationtype_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.operationtype_.IsDefault()) {
          _impl_.operationtype_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}

// string key = 2;
inline void TransactionalActorStateOperation::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& TransactionalActorStateOperation::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransactionalActorStateOperation::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
inline std::string* TransactionalActorStateOperation::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return _s;
}
inline const std::string& TransactionalActorStateOperation::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void TransactionalActorStateOperation::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* TransactionalActorStateOperation::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* TransactionalActorStateOperation::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return _impl_.key_.Release();
}
inline void TransactionalActorStateOperation::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}

// .google.protobuf.Any value = 3;
inline bool TransactionalActorStateOperation::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& TransactionalActorStateOperation::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Any* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& TransactionalActorStateOperation::value() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  return _internal_value();
}
inline void TransactionalActorStateOperation::unsafe_arena_set_allocated_value(::google::protobuf::Any* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaForAllocation());
    _impl_.value_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.value_;
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::mutable_value() {
  ::google::protobuf::Any* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  return _msg;
}
inline void TransactionalActorStateOperation::set_allocated_value(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
}

// map<string, string> metadata = 4;
inline int TransactionalActorStateOperation::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int TransactionalActorStateOperation::metadata_size() const {
  return _internal_metadata_size();
}
inline void TransactionalActorStateOperation::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TransactionalActorStateOperation::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TransactionalActorStateOperation::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.TransactionalActorStateOperation.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* TransactionalActorStateOperation::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TransactionalActorStateOperation::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.TransactionalActorStateOperation.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeActorRequest

// string actor_type = 1;
inline void InvokeActorRequest::clear_actor_type() {
  _impl_.actor_type_.ClearToEmpty();
}
inline const std::string& InvokeActorRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return _internal_actor_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeActorRequest::set_actor_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
inline std::string* InvokeActorRequest::mutable_actor_type() {
  std::string* _s = _internal_mutable_actor_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return _s;
}
inline const std::string& InvokeActorRequest::_internal_actor_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_type_.Get();
}
inline void InvokeActorRequest::_internal_set_actor_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_type_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::_internal_mutable_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_type_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::release_actor_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return _impl_.actor_type_.Release();
}
inline void InvokeActorRequest::set_allocated_actor_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_type_.IsDefault()) {
          _impl_.actor_type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}

// string actor_id = 2;
inline void InvokeActorRequest::clear_actor_id() {
  _impl_.actor_id_.ClearToEmpty();
}
inline const std::string& InvokeActorRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return _internal_actor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeActorRequest::set_actor_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
inline std::string* InvokeActorRequest::mutable_actor_id() {
  std::string* _s = _internal_mutable_actor_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return _s;
}
inline const std::string& InvokeActorRequest::_internal_actor_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actor_id_.Get();
}
inline void InvokeActorRequest::_internal_set_actor_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.actor_id_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::_internal_mutable_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.actor_id_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::release_actor_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return _impl_.actor_id_.Release();
}
inline void InvokeActorRequest::set_allocated_actor_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actor_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.actor_id_.IsDefault()) {
          _impl_.actor_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}

// string method = 3;
inline void InvokeActorRequest::clear_method() {
  _impl_.method_.ClearToEmpty();
}
inline const std::string& InvokeActorRequest::method() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return _internal_method();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeActorRequest::set_method(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
inline std::string* InvokeActorRequest::mutable_method() {
  std::string* _s = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return _s;
}
inline const std::string& InvokeActorRequest::_internal_method() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.method_.Get();
}
inline void InvokeActorRequest::_internal_set_method(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::_internal_mutable_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.method_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::release_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return _impl_.method_.Release();
}
inline void InvokeActorRequest::set_allocated_method(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.method_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.method_.IsDefault()) {
          _impl_.method_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.method)
}

// bytes data = 4;
inline void InvokeActorRequest::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InvokeActorRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeActorRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
inline std::string* InvokeActorRequest::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return _s;
}
inline const std::string& InvokeActorRequest::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void InvokeActorRequest::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeActorRequest::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return _impl_.data_.Release();
}
inline void InvokeActorRequest::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.data)
}

// map<string, string> metadata = 5;
inline int InvokeActorRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int InvokeActorRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void InvokeActorRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& InvokeActorRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& InvokeActorRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeActorRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* InvokeActorRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* InvokeActorRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeActorRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// InvokeActorResponse

// bytes data = 1;
inline void InvokeActorResponse::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InvokeActorResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvokeActorResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
inline std::string* InvokeActorResponse::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return _s;
}
inline const std::string& InvokeActorResponse::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void InvokeActorResponse::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* InvokeActorResponse::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* InvokeActorResponse::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return _impl_.data_.Release();
}
inline void InvokeActorResponse::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorResponse.data)
}

// -------------------------------------------------------------------

// GetMetadataRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetMetadataResponse

// string id = 1;
inline void GetMetadataResponse::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetMetadataResponse::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMetadataResponse::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetMetadataResponse.id)
}
inline std::string* GetMetadataResponse::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.id)
  return _s;
}
inline const std::string& GetMetadataResponse::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void GetMetadataResponse::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetMetadataResponse::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* GetMetadataResponse::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetMetadataResponse.id)
  return _impl_.id_.Release();
}
inline void GetMetadataResponse::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.id)
}

// repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2 [json_name = "actors", deprecated = true];
inline int GetMetadataResponse::_internal_active_actors_count_size() const {
  return _internal_active_actors_count().size();
}
inline int GetMetadataResponse::active_actors_count_size() const {
  return _internal_active_actors_count_size();
}
inline void GetMetadataResponse::clear_active_actors_count() {
  _internal_mutable_active_actors_count()->Clear();
}
inline ::dapr::proto::runtime::v1::ActiveActorsCount* GetMetadataResponse::mutable_active_actors_count(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return _internal_mutable_active_actors_count()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >*
GetMetadataResponse::mutable_active_actors_count() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_active_actors_count();
}
inline const ::dapr::proto::runtime::v1::ActiveActorsCount& GetMetadataResponse::active_actors_count(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
    return _internal_active_actors_count().Get(index);
}
inline ::dapr::proto::runtime::v1::ActiveActorsCount* GetMetadataResponse::add_active_actors_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::ActiveActorsCount* _add = _internal_mutable_active_actors_count()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >&
GetMetadataResponse::active_actors_count() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return _internal_active_actors_count();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>&
GetMetadataResponse::_internal_active_actors_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.active_actors_count_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>*
GetMetadataResponse::_internal_mutable_active_actors_count() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.active_actors_count_;
}

// repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3 [json_name = "components"];
inline int GetMetadataResponse::_internal_registered_components_size() const {
  return _internal_registered_components().size();
}
inline int GetMetadataResponse::registered_components_size() const {
  return _internal_registered_components_size();
}
inline void GetMetadataResponse::clear_registered_components() {
  _internal_mutable_registered_components()->Clear();
}
inline ::dapr::proto::runtime::v1::RegisteredComponents* GetMetadataResponse::mutable_registered_components(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return _internal_mutable_registered_components()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >*
GetMetadataResponse::mutable_registered_components() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_registered_components();
}
inline const ::dapr::proto::runtime::v1::RegisteredComponents& GetMetadataResponse::registered_components(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
    return _internal_registered_components().Get(index);
}
inline ::dapr::proto::runtime::v1::RegisteredComponents* GetMetadataResponse::add_registered_components() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::RegisteredComponents* _add = _internal_mutable_registered_components()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >&
GetMetadataResponse::registered_components() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return _internal_registered_components();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::RegisteredComponents>&
GetMetadataResponse::_internal_registered_components() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.registered_components_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::RegisteredComponents>*
GetMetadataResponse::_internal_mutable_registered_components() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.registered_components_;
}

// map<string, string> extended_metadata = 4 [json_name = "extended"];
inline int GetMetadataResponse::_internal_extended_metadata_size() const {
  return _internal_extended_metadata().size();
}
inline int GetMetadataResponse::extended_metadata_size() const {
  return _internal_extended_metadata_size();
}
inline void GetMetadataResponse::clear_extended_metadata() {
  _impl_.extended_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetMetadataResponse::_internal_extended_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extended_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetMetadataResponse::extended_metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetMetadataResponse.extended_metadata)
  return _internal_extended_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetMetadataResponse::_internal_mutable_extended_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.extended_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetMetadataResponse::mutable_extended_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetMetadataResponse.extended_metadata)
  return _internal_mutable_extended_metadata();
}

// repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5 [json_name = "subscriptions"];
inline int GetMetadataResponse::_internal_subscriptions_size() const {
  return _internal_subscriptions().size();
}
inline int GetMetadataResponse::subscriptions_size() const {
  return _internal_subscriptions_size();
}
inline void GetMetadataResponse::clear_subscriptions() {
  _internal_mutable_subscriptions()->Clear();
}
inline ::dapr::proto::runtime::v1::PubsubSubscription* GetMetadataResponse::mutable_subscriptions(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return _internal_mutable_subscriptions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >*
GetMetadataResponse::mutable_subscriptions() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_subscriptions();
}
inline const ::dapr::proto::runtime::v1::PubsubSubscription& GetMetadataResponse::subscriptions(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
    return _internal_subscriptions().Get(index);
}
inline ::dapr::proto::runtime::v1::PubsubSubscription* GetMetadataResponse::add_subscriptions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::PubsubSubscription* _add = _internal_mutable_subscriptions()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >&
GetMetadataResponse::subscriptions() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return _internal_subscriptions();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscription>&
GetMetadataResponse::_internal_subscriptions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subscriptions_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscription>*
GetMetadataResponse::_internal_mutable_subscriptions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.subscriptions_;
}

// repeated .dapr.proto.runtime.v1.MetadataHTTPEndpoint http_endpoints = 6 [json_name = "httpEndpoints"];
inline int GetMetadataResponse::_internal_http_endpoints_size() const {
  return _internal_http_endpoints().size();
}
inline int GetMetadataResponse::http_endpoints_size() const {
  return _internal_http_endpoints_size();
}
inline void GetMetadataResponse::clear_http_endpoints() {
  _internal_mutable_http_endpoints()->Clear();
}
inline ::dapr::proto::runtime::v1::MetadataHTTPEndpoint* GetMetadataResponse::mutable_http_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.http_endpoints)
  return _internal_mutable_http_endpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint >*
GetMetadataResponse::mutable_http_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.http_endpoints)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_http_endpoints();
}
inline const ::dapr::proto::runtime::v1::MetadataHTTPEndpoint& GetMetadataResponse::http_endpoints(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.http_endpoints)
    return _internal_http_endpoints().Get(index);
}
inline ::dapr::proto::runtime::v1::MetadataHTTPEndpoint* GetMetadataResponse::add_http_endpoints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::MetadataHTTPEndpoint* _add = _internal_mutable_http_endpoints()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.http_endpoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint >&
GetMetadataResponse::http_endpoints() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.http_endpoints)
  return _internal_http_endpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::MetadataHTTPEndpoint>&
GetMetadataResponse::_internal_http_endpoints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.http_endpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::MetadataHTTPEndpoint>*
GetMetadataResponse::_internal_mutable_http_endpoints() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.http_endpoints_;
}

// .dapr.proto.runtime.v1.AppConnectionProperties app_connection_properties = 7 [json_name = "appConnectionProperties"];
inline bool GetMetadataResponse::has_app_connection_properties() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.app_connection_properties_ != nullptr);
  return value;
}
inline void GetMetadataResponse::clear_app_connection_properties() {
  if (_impl_.app_connection_properties_ != nullptr) _impl_.app_connection_properties_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dapr::proto::runtime::v1::AppConnectionProperties& GetMetadataResponse::_internal_app_connection_properties() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::runtime::v1::AppConnectionProperties* p = _impl_.app_connection_properties_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::runtime::v1::AppConnectionProperties&>(::dapr::proto::runtime::v1::_AppConnectionProperties_default_instance_);
}
inline const ::dapr::proto::runtime::v1::AppConnectionProperties& GetMetadataResponse::app_connection_properties() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.app_connection_properties)
  return _internal_app_connection_properties();
}
inline void GetMetadataResponse::unsafe_arena_set_allocated_app_connection_properties(::dapr::proto::runtime::v1::AppConnectionProperties* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.app_connection_properties_);
  }
  _impl_.app_connection_properties_ = reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionProperties*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.app_connection_properties)
}
inline ::dapr::proto::runtime::v1::AppConnectionProperties* GetMetadataResponse::release_app_connection_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::AppConnectionProperties* released = _impl_.app_connection_properties_;
  _impl_.app_connection_properties_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::runtime::v1::AppConnectionProperties* GetMetadataResponse::unsafe_arena_release_app_connection_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetMetadataResponse.app_connection_properties)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::AppConnectionProperties* temp = _impl_.app_connection_properties_;
  _impl_.app_connection_properties_ = nullptr;
  return temp;
}
inline ::dapr::proto::runtime::v1::AppConnectionProperties* GetMetadataResponse::_internal_mutable_app_connection_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.app_connection_properties_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::AppConnectionProperties>(GetArenaForAllocation());
    _impl_.app_connection_properties_ = reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionProperties*>(p);
  }
  return _impl_.app_connection_properties_;
}
inline ::dapr::proto::runtime::v1::AppConnectionProperties* GetMetadataResponse::mutable_app_connection_properties() {
  ::dapr::proto::runtime::v1::AppConnectionProperties* _msg = _internal_mutable_app_connection_properties();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.app_connection_properties)
  return _msg;
}
inline void GetMetadataResponse::set_allocated_app_connection_properties(::dapr::proto::runtime::v1::AppConnectionProperties* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionProperties*>(_impl_.app_connection_properties_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionProperties*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.app_connection_properties_ = reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionProperties*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.app_connection_properties)
}

// string runtime_version = 8 [json_name = "runtimeVersion"];
inline void GetMetadataResponse::clear_runtime_version() {
  _impl_.runtime_version_.ClearToEmpty();
}
inline const std::string& GetMetadataResponse::runtime_version() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.runtime_version)
  return _internal_runtime_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMetadataResponse::set_runtime_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_version_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetMetadataResponse.runtime_version)
}
inline std::string* GetMetadataResponse::mutable_runtime_version() {
  std::string* _s = _internal_mutable_runtime_version();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.runtime_version)
  return _s;
}
inline const std::string& GetMetadataResponse::_internal_runtime_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runtime_version_.Get();
}
inline void GetMetadataResponse::_internal_set_runtime_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetMetadataResponse::_internal_mutable_runtime_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.runtime_version_.Mutable( GetArenaForAllocation());
}
inline std::string* GetMetadataResponse::release_runtime_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetMetadataResponse.runtime_version)
  return _impl_.runtime_version_.Release();
}
inline void GetMetadataResponse::set_allocated_runtime_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_version_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.runtime_version_.IsDefault()) {
          _impl_.runtime_version_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.runtime_version)
}

// repeated string enabled_features = 9 [json_name = "enabledFeatures"];
inline int GetMetadataResponse::_internal_enabled_features_size() const {
  return _internal_enabled_features().size();
}
inline int GetMetadataResponse::enabled_features_size() const {
  return _internal_enabled_features_size();
}
inline void GetMetadataResponse::clear_enabled_features() {
  _internal_mutable_enabled_features()->Clear();
}
inline std::string* GetMetadataResponse::add_enabled_features() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_enabled_features()->Add();
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
  return _s;
}
inline const std::string& GetMetadataResponse::enabled_features(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
  return _internal_enabled_features().Get(index);
}
inline std::string* GetMetadataResponse::mutable_enabled_features(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
  return _internal_mutable_enabled_features()->Mutable(index);
}
inline void GetMetadataResponse::set_enabled_features(int index, const std::string& value) {
  _internal_mutable_enabled_features()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::set_enabled_features(int index, std::string&& value) {
  _internal_mutable_enabled_features()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::set_enabled_features(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_enabled_features()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::set_enabled_features(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_enabled_features()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::set_enabled_features(int index, absl::string_view value) {
  _internal_mutable_enabled_features()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::add_enabled_features(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_enabled_features()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::add_enabled_features(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_enabled_features()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::add_enabled_features(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_enabled_features()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::add_enabled_features(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_enabled_features()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline void GetMetadataResponse::add_enabled_features(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_enabled_features()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetMetadataResponse::enabled_features() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
  return _internal_enabled_features();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetMetadataResponse::mutable_enabled_features() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.enabled_features)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_enabled_features();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetMetadataResponse::_internal_enabled_features() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enabled_features_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetMetadataResponse::_internal_mutable_enabled_features() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.enabled_features_;
}

// .dapr.proto.runtime.v1.ActorRuntime actor_runtime = 10 [json_name = "actorRuntime"];
inline bool GetMetadataResponse::has_actor_runtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.actor_runtime_ != nullptr);
  return value;
}
inline void GetMetadataResponse::clear_actor_runtime() {
  if (_impl_.actor_runtime_ != nullptr) _impl_.actor_runtime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::dapr::proto::runtime::v1::ActorRuntime& GetMetadataResponse::_internal_actor_runtime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::runtime::v1::ActorRuntime* p = _impl_.actor_runtime_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::runtime::v1::ActorRuntime&>(::dapr::proto::runtime::v1::_ActorRuntime_default_instance_);
}
inline const ::dapr::proto::runtime::v1::ActorRuntime& GetMetadataResponse::actor_runtime() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.actor_runtime)
  return _internal_actor_runtime();
}
inline void GetMetadataResponse::unsafe_arena_set_allocated_actor_runtime(::dapr::proto::runtime::v1::ActorRuntime* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.actor_runtime_);
  }
  _impl_.actor_runtime_ = reinterpret_cast<::dapr::proto::runtime::v1::ActorRuntime*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.actor_runtime)
}
inline ::dapr::proto::runtime::v1::ActorRuntime* GetMetadataResponse::release_actor_runtime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::runtime::v1::ActorRuntime* released = _impl_.actor_runtime_;
  _impl_.actor_runtime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::runtime::v1::ActorRuntime* GetMetadataResponse::unsafe_arena_release_actor_runtime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetMetadataResponse.actor_runtime)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::runtime::v1::ActorRuntime* temp = _impl_.actor_runtime_;
  _impl_.actor_runtime_ = nullptr;
  return temp;
}
inline ::dapr::proto::runtime::v1::ActorRuntime* GetMetadataResponse::_internal_mutable_actor_runtime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.actor_runtime_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::ActorRuntime>(GetArenaForAllocation());
    _impl_.actor_runtime_ = reinterpret_cast<::dapr::proto::runtime::v1::ActorRuntime*>(p);
  }
  return _impl_.actor_runtime_;
}
inline ::dapr::proto::runtime::v1::ActorRuntime* GetMetadataResponse::mutable_actor_runtime() {
  ::dapr::proto::runtime::v1::ActorRuntime* _msg = _internal_mutable_actor_runtime();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.actor_runtime)
  return _msg;
}
inline void GetMetadataResponse::set_allocated_actor_runtime(::dapr::proto::runtime::v1::ActorRuntime* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::dapr::proto::runtime::v1::ActorRuntime*>(_impl_.actor_runtime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::dapr::proto::runtime::v1::ActorRuntime*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.actor_runtime_ = reinterpret_cast<::dapr::proto::runtime::v1::ActorRuntime*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.actor_runtime)
}

// -------------------------------------------------------------------

// ActorRuntime

// .dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus runtime_status = 1 [json_name = "runtimeStatus"];
inline void ActorRuntime::clear_runtime_status() {
  _impl_.runtime_status_ = 0;
}
inline ::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus ActorRuntime::runtime_status() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActorRuntime.runtime_status)
  return _internal_runtime_status();
}
inline void ActorRuntime::set_runtime_status(::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus value) {
  _internal_set_runtime_status(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActorRuntime.runtime_status)
}
inline ::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus ActorRuntime::_internal_runtime_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus>(_impl_.runtime_status_);
}
inline void ActorRuntime::_internal_set_runtime_status(::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_status_ = value;
}

// repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors = 2 [json_name = "activeActors"];
inline int ActorRuntime::_internal_active_actors_size() const {
  return _internal_active_actors().size();
}
inline int ActorRuntime::active_actors_size() const {
  return _internal_active_actors_size();
}
inline void ActorRuntime::clear_active_actors() {
  _internal_mutable_active_actors()->Clear();
}
inline ::dapr::proto::runtime::v1::ActiveActorsCount* ActorRuntime::mutable_active_actors(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ActorRuntime.active_actors)
  return _internal_mutable_active_actors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >*
ActorRuntime::mutable_active_actors() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ActorRuntime.active_actors)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_active_actors();
}
inline const ::dapr::proto::runtime::v1::ActiveActorsCount& ActorRuntime::active_actors(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActorRuntime.active_actors)
    return _internal_active_actors().Get(index);
}
inline ::dapr::proto::runtime::v1::ActiveActorsCount* ActorRuntime::add_active_actors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::ActiveActorsCount* _add = _internal_mutable_active_actors()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ActorRuntime.active_actors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >&
ActorRuntime::active_actors() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ActorRuntime.active_actors)
  return _internal_active_actors();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>&
ActorRuntime::_internal_active_actors() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.active_actors_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::ActiveActorsCount>*
ActorRuntime::_internal_mutable_active_actors() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.active_actors_;
}

// bool host_ready = 3 [json_name = "hostReady"];
inline void ActorRuntime::clear_host_ready() {
  _impl_.host_ready_ = false;
}
inline bool ActorRuntime::host_ready() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActorRuntime.host_ready)
  return _internal_host_ready();
}
inline void ActorRuntime::set_host_ready(bool value) {
  _internal_set_host_ready(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActorRuntime.host_ready)
}
inline bool ActorRuntime::_internal_host_ready() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.host_ready_;
}
inline void ActorRuntime::_internal_set_host_ready(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_ready_ = value;
}

// string placement = 4 [json_name = "placement"];
inline void ActorRuntime::clear_placement() {
  _impl_.placement_.ClearToEmpty();
}
inline const std::string& ActorRuntime::placement() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActorRuntime.placement)
  return _internal_placement();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActorRuntime::set_placement(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.placement_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActorRuntime.placement)
}
inline std::string* ActorRuntime::mutable_placement() {
  std::string* _s = _internal_mutable_placement();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ActorRuntime.placement)
  return _s;
}
inline const std::string& ActorRuntime::_internal_placement() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.placement_.Get();
}
inline void ActorRuntime::_internal_set_placement(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.placement_.Set(value, GetArenaForAllocation());
}
inline std::string* ActorRuntime::_internal_mutable_placement() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.placement_.Mutable( GetArenaForAllocation());
}
inline std::string* ActorRuntime::release_placement() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ActorRuntime.placement)
  return _impl_.placement_.Release();
}
inline void ActorRuntime::set_allocated_placement(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.placement_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.placement_.IsDefault()) {
          _impl_.placement_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ActorRuntime.placement)
}

// -------------------------------------------------------------------

// ActiveActorsCount

// string type = 1;
inline void ActiveActorsCount::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& ActiveActorsCount::type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActiveActorsCount.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActiveActorsCount::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActiveActorsCount.type)
}
inline std::string* ActiveActorsCount::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ActiveActorsCount.type)
  return _s;
}
inline const std::string& ActiveActorsCount::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void ActiveActorsCount::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* ActiveActorsCount::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* ActiveActorsCount::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ActiveActorsCount.type)
  return _impl_.type_.Release();
}
inline void ActiveActorsCount::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ActiveActorsCount.type)
}

// int32 count = 2;
inline void ActiveActorsCount::clear_count() {
  _impl_.count_ = 0;
}
inline ::int32_t ActiveActorsCount::count() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActiveActorsCount.count)
  return _internal_count();
}
inline void ActiveActorsCount::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActiveActorsCount.count)
}
inline ::int32_t ActiveActorsCount::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void ActiveActorsCount::_internal_set_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// RegisteredComponents

// string name = 1;
inline void RegisteredComponents::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RegisteredComponents::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisteredComponents::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.name)
}
inline std::string* RegisteredComponents::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.name)
  return _s;
}
inline const std::string& RegisteredComponents::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void RegisteredComponents::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisteredComponents::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisteredComponents::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisteredComponents.name)
  return _impl_.name_.Release();
}
inline void RegisteredComponents::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisteredComponents.name)
}

// string type = 2;
inline void RegisteredComponents::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& RegisteredComponents::type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisteredComponents::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.type)
}
inline std::string* RegisteredComponents::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.type)
  return _s;
}
inline const std::string& RegisteredComponents::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void RegisteredComponents::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisteredComponents::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisteredComponents::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisteredComponents.type)
  return _impl_.type_.Release();
}
inline void RegisteredComponents::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisteredComponents.type)
}

// string version = 3;
inline void RegisteredComponents::clear_version() {
  _impl_.version_.ClearToEmpty();
}
inline const std::string& RegisteredComponents::version() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisteredComponents::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.version)
}
inline std::string* RegisteredComponents::mutable_version() {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.version)
  return _s;
}
inline const std::string& RegisteredComponents::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void RegisteredComponents::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArenaForAllocation());
}
inline std::string* RegisteredComponents::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArenaForAllocation());
}
inline std::string* RegisteredComponents::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisteredComponents.version)
  return _impl_.version_.Release();
}
inline void RegisteredComponents::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisteredComponents.version)
}

// repeated string capabilities = 4;
inline int RegisteredComponents::_internal_capabilities_size() const {
  return _internal_capabilities().size();
}
inline int RegisteredComponents::capabilities_size() const {
  return _internal_capabilities_size();
}
inline void RegisteredComponents::clear_capabilities() {
  _internal_mutable_capabilities()->Clear();
}
inline std::string* RegisteredComponents::add_capabilities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_capabilities()->Add();
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return _s;
}
inline const std::string& RegisteredComponents::capabilities(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return _internal_capabilities().Get(index);
}
inline std::string* RegisteredComponents::mutable_capabilities(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return _internal_mutable_capabilities()->Mutable(index);
}
inline void RegisteredComponents::set_capabilities(int index, const std::string& value) {
  _internal_mutable_capabilities()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::set_capabilities(int index, std::string&& value) {
  _internal_mutable_capabilities()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::set_capabilities(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_capabilities()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::set_capabilities(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_capabilities()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::set_capabilities(int index, absl::string_view value) {
  _internal_mutable_capabilities()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::add_capabilities(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_capabilities()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::add_capabilities(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_capabilities()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::add_capabilities(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_capabilities()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::add_capabilities(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_capabilities()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::add_capabilities(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_capabilities()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisteredComponents::capabilities() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return _internal_capabilities();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* RegisteredComponents::mutable_capabilities() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_capabilities();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisteredComponents::_internal_capabilities() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.capabilities_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisteredComponents::_internal_mutable_capabilities() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.capabilities_;
}

// -------------------------------------------------------------------

// MetadataHTTPEndpoint

// string name = 1 [json_name = "name"];
inline void MetadataHTTPEndpoint::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& MetadataHTTPEndpoint::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.MetadataHTTPEndpoint.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MetadataHTTPEndpoint::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.MetadataHTTPEndpoint.name)
}
inline std::string* MetadataHTTPEndpoint::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.MetadataHTTPEndpoint.name)
  return _s;
}
inline const std::string& MetadataHTTPEndpoint::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void MetadataHTTPEndpoint::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* MetadataHTTPEndpoint::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* MetadataHTTPEndpoint::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.MetadataHTTPEndpoint.name)
  return _impl_.name_.Release();
}
inline void MetadataHTTPEndpoint::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.MetadataHTTPEndpoint.name)
}

// -------------------------------------------------------------------

// AppConnectionProperties

// int32 port = 1;
inline void AppConnectionProperties::clear_port() {
  _impl_.port_ = 0;
}
inline ::int32_t AppConnectionProperties::port() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionProperties.port)
  return _internal_port();
}
inline void AppConnectionProperties::set_port(::int32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionProperties.port)
}
inline ::int32_t AppConnectionProperties::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_;
}
inline void AppConnectionProperties::_internal_set_port(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_ = value;
}

// string protocol = 2;
inline void AppConnectionProperties::clear_protocol() {
  _impl_.protocol_.ClearToEmpty();
}
inline const std::string& AppConnectionProperties::protocol() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionProperties.protocol)
  return _internal_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AppConnectionProperties::set_protocol(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionProperties.protocol)
}
inline std::string* AppConnectionProperties::mutable_protocol() {
  std::string* _s = _internal_mutable_protocol();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.AppConnectionProperties.protocol)
  return _s;
}
inline const std::string& AppConnectionProperties::_internal_protocol() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.protocol_.Get();
}
inline void AppConnectionProperties::_internal_set_protocol(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_.Set(value, GetArenaForAllocation());
}
inline std::string* AppConnectionProperties::_internal_mutable_protocol() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.protocol_.Mutable( GetArenaForAllocation());
}
inline std::string* AppConnectionProperties::release_protocol() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.AppConnectionProperties.protocol)
  return _impl_.protocol_.Release();
}
inline void AppConnectionProperties::set_allocated_protocol(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.protocol_.IsDefault()) {
          _impl_.protocol_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.AppConnectionProperties.protocol)
}

// string channel_address = 3 [json_name = "channelAddress"];
inline void AppConnectionProperties::clear_channel_address() {
  _impl_.channel_address_.ClearToEmpty();
}
inline const std::string& AppConnectionProperties::channel_address() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionProperties.channel_address)
  return _internal_channel_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AppConnectionProperties::set_channel_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel_address_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionProperties.channel_address)
}
inline std::string* AppConnectionProperties::mutable_channel_address() {
  std::string* _s = _internal_mutable_channel_address();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.AppConnectionProperties.channel_address)
  return _s;
}
inline const std::string& AppConnectionProperties::_internal_channel_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channel_address_.Get();
}
inline void AppConnectionProperties::_internal_set_channel_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.channel_address_.Set(value, GetArenaForAllocation());
}
inline std::string* AppConnectionProperties::_internal_mutable_channel_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.channel_address_.Mutable( GetArenaForAllocation());
}
inline std::string* AppConnectionProperties::release_channel_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.AppConnectionProperties.channel_address)
  return _impl_.channel_address_.Release();
}
inline void AppConnectionProperties::set_allocated_channel_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channel_address_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_address_.IsDefault()) {
          _impl_.channel_address_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.AppConnectionProperties.channel_address)
}

// int32 max_concurrency = 4 [json_name = "maxConcurrency"];
inline void AppConnectionProperties::clear_max_concurrency() {
  _impl_.max_concurrency_ = 0;
}
inline ::int32_t AppConnectionProperties::max_concurrency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionProperties.max_concurrency)
  return _internal_max_concurrency();
}
inline void AppConnectionProperties::set_max_concurrency(::int32_t value) {
  _internal_set_max_concurrency(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionProperties.max_concurrency)
}
inline ::int32_t AppConnectionProperties::_internal_max_concurrency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_concurrency_;
}
inline void AppConnectionProperties::_internal_set_max_concurrency(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_concurrency_ = value;
}

// .dapr.proto.runtime.v1.AppConnectionHealthProperties health = 5;
inline bool AppConnectionProperties::has_health() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.health_ != nullptr);
  return value;
}
inline void AppConnectionProperties::clear_health() {
  if (_impl_.health_ != nullptr) _impl_.health_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dapr::proto::runtime::v1::AppConnectionHealthProperties& AppConnectionProperties::_internal_health() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::runtime::v1::AppConnectionHealthProperties* p = _impl_.health_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::runtime::v1::AppConnectionHealthProperties&>(::dapr::proto::runtime::v1::_AppConnectionHealthProperties_default_instance_);
}
inline const ::dapr::proto::runtime::v1::AppConnectionHealthProperties& AppConnectionProperties::health() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionProperties.health)
  return _internal_health();
}
inline void AppConnectionProperties::unsafe_arena_set_allocated_health(::dapr::proto::runtime::v1::AppConnectionHealthProperties* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.health_);
  }
  _impl_.health_ = reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionHealthProperties*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.AppConnectionProperties.health)
}
inline ::dapr::proto::runtime::v1::AppConnectionHealthProperties* AppConnectionProperties::release_health() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties* released = _impl_.health_;
  _impl_.health_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::runtime::v1::AppConnectionHealthProperties* AppConnectionProperties::unsafe_arena_release_health() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.AppConnectionProperties.health)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties* temp = _impl_.health_;
  _impl_.health_ = nullptr;
  return temp;
}
inline ::dapr::proto::runtime::v1::AppConnectionHealthProperties* AppConnectionProperties::_internal_mutable_health() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.health_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::AppConnectionHealthProperties>(GetArenaForAllocation());
    _impl_.health_ = reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionHealthProperties*>(p);
  }
  return _impl_.health_;
}
inline ::dapr::proto::runtime::v1::AppConnectionHealthProperties* AppConnectionProperties::mutable_health() {
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties* _msg = _internal_mutable_health();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.AppConnectionProperties.health)
  return _msg;
}
inline void AppConnectionProperties::set_allocated_health(::dapr::proto::runtime::v1::AppConnectionHealthProperties* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionHealthProperties*>(_impl_.health_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionHealthProperties*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.health_ = reinterpret_cast<::dapr::proto::runtime::v1::AppConnectionHealthProperties*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.AppConnectionProperties.health)
}

// -------------------------------------------------------------------

// AppConnectionHealthProperties

// string health_check_path = 1 [json_name = "healthCheckPath"];
inline void AppConnectionHealthProperties::clear_health_check_path() {
  _impl_.health_check_path_.ClearToEmpty();
}
inline const std::string& AppConnectionHealthProperties::health_check_path() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path)
  return _internal_health_check_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AppConnectionHealthProperties::set_health_check_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_check_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path)
}
inline std::string* AppConnectionHealthProperties::mutable_health_check_path() {
  std::string* _s = _internal_mutable_health_check_path();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path)
  return _s;
}
inline const std::string& AppConnectionHealthProperties::_internal_health_check_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.health_check_path_.Get();
}
inline void AppConnectionHealthProperties::_internal_set_health_check_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_check_path_.Set(value, GetArenaForAllocation());
}
inline std::string* AppConnectionHealthProperties::_internal_mutable_health_check_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.health_check_path_.Mutable( GetArenaForAllocation());
}
inline std::string* AppConnectionHealthProperties::release_health_check_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path)
  return _impl_.health_check_path_.Release();
}
inline void AppConnectionHealthProperties::set_allocated_health_check_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.health_check_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.health_check_path_.IsDefault()) {
          _impl_.health_check_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path)
}

// string health_probe_interval = 2 [json_name = "healthProbeInterval"];
inline void AppConnectionHealthProperties::clear_health_probe_interval() {
  _impl_.health_probe_interval_.ClearToEmpty();
}
inline const std::string& AppConnectionHealthProperties::health_probe_interval() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval)
  return _internal_health_probe_interval();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AppConnectionHealthProperties::set_health_probe_interval(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_probe_interval_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval)
}
inline std::string* AppConnectionHealthProperties::mutable_health_probe_interval() {
  std::string* _s = _internal_mutable_health_probe_interval();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval)
  return _s;
}
inline const std::string& AppConnectionHealthProperties::_internal_health_probe_interval() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.health_probe_interval_.Get();
}
inline void AppConnectionHealthProperties::_internal_set_health_probe_interval(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_probe_interval_.Set(value, GetArenaForAllocation());
}
inline std::string* AppConnectionHealthProperties::_internal_mutable_health_probe_interval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.health_probe_interval_.Mutable( GetArenaForAllocation());
}
inline std::string* AppConnectionHealthProperties::release_health_probe_interval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval)
  return _impl_.health_probe_interval_.Release();
}
inline void AppConnectionHealthProperties::set_allocated_health_probe_interval(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.health_probe_interval_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.health_probe_interval_.IsDefault()) {
          _impl_.health_probe_interval_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval)
}

// string health_probe_timeout = 3 [json_name = "healthProbeTimeout"];
inline void AppConnectionHealthProperties::clear_health_probe_timeout() {
  _impl_.health_probe_timeout_.ClearToEmpty();
}
inline const std::string& AppConnectionHealthProperties::health_probe_timeout() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout)
  return _internal_health_probe_timeout();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AppConnectionHealthProperties::set_health_probe_timeout(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_probe_timeout_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout)
}
inline std::string* AppConnectionHealthProperties::mutable_health_probe_timeout() {
  std::string* _s = _internal_mutable_health_probe_timeout();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout)
  return _s;
}
inline const std::string& AppConnectionHealthProperties::_internal_health_probe_timeout() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.health_probe_timeout_.Get();
}
inline void AppConnectionHealthProperties::_internal_set_health_probe_timeout(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_probe_timeout_.Set(value, GetArenaForAllocation());
}
inline std::string* AppConnectionHealthProperties::_internal_mutable_health_probe_timeout() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.health_probe_timeout_.Mutable( GetArenaForAllocation());
}
inline std::string* AppConnectionHealthProperties::release_health_probe_timeout() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout)
  return _impl_.health_probe_timeout_.Release();
}
inline void AppConnectionHealthProperties::set_allocated_health_probe_timeout(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.health_probe_timeout_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.health_probe_timeout_.IsDefault()) {
          _impl_.health_probe_timeout_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout)
}

// int32 health_threshold = 4 [json_name = "healthThreshold"];
inline void AppConnectionHealthProperties::clear_health_threshold() {
  _impl_.health_threshold_ = 0;
}
inline ::int32_t AppConnectionHealthProperties::health_threshold() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_threshold)
  return _internal_health_threshold();
}
inline void AppConnectionHealthProperties::set_health_threshold(::int32_t value) {
  _internal_set_health_threshold(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.AppConnectionHealthProperties.health_threshold)
}
inline ::int32_t AppConnectionHealthProperties::_internal_health_threshold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.health_threshold_;
}
inline void AppConnectionHealthProperties::_internal_set_health_threshold(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.health_threshold_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PubsubSubscription

// string pubsub_name = 1 [json_name = "pubsubname"];
inline void PubsubSubscription::clear_pubsub_name() {
  _impl_.pubsub_name_.ClearToEmpty();
}
inline const std::string& PubsubSubscription::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
  return _internal_pubsub_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PubsubSubscription::set_pubsub_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pubsub_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}
inline std::string* PubsubSubscription::mutable_pubsub_name() {
  std::string* _s = _internal_mutable_pubsub_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
  return _s;
}
inline const std::string& PubsubSubscription::_internal_pubsub_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pubsub_name_.Get();
}
inline void PubsubSubscription::_internal_set_pubsub_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pubsub_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PubsubSubscription::_internal_mutable_pubsub_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pubsub_name_.Mutable( GetArenaForAllocation());
}
inline std::string* PubsubSubscription::release_pubsub_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
  return _impl_.pubsub_name_.Release();
}
inline void PubsubSubscription::set_allocated_pubsub_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pubsub_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubsub_name_.IsDefault()) {
          _impl_.pubsub_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}

// string topic = 2 [json_name = "topic"];
inline void PubsubSubscription::clear_topic() {
  _impl_.topic_.ClearToEmpty();
}
inline const std::string& PubsubSubscription::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PubsubSubscription::set_topic(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscription.topic)
}
inline std::string* PubsubSubscription::mutable_topic() {
  std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.topic)
  return _s;
}
inline const std::string& PubsubSubscription::_internal_topic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.topic_.Get();
}
inline void PubsubSubscription::_internal_set_topic(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.topic_.Set(value, GetArenaForAllocation());
}
inline std::string* PubsubSubscription::_internal_mutable_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.topic_.Mutable( GetArenaForAllocation());
}
inline std::string* PubsubSubscription::release_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.topic)
  return _impl_.topic_.Release();
}
inline void PubsubSubscription::set_allocated_topic(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.topic_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.topic_.IsDefault()) {
          _impl_.topic_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.topic)
}

// map<string, string> metadata = 3 [json_name = "metadata"];
inline int PubsubSubscription::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int PubsubSubscription::metadata_size() const {
  return _internal_metadata_size();
}
inline void PubsubSubscription::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PubsubSubscription::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PubsubSubscription::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.PubsubSubscription.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* PubsubSubscription::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PubsubSubscription::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.PubsubSubscription.metadata)
  return _internal_mutable_metadata();
}

// .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4 [json_name = "rules"];
inline bool PubsubSubscription::has_rules() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rules_ != nullptr);
  return value;
}
inline void PubsubSubscription::clear_rules() {
  if (_impl_.rules_ != nullptr) _impl_.rules_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& PubsubSubscription::_internal_rules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRules* p = _impl_.rules_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::runtime::v1::PubsubSubscriptionRules&>(::dapr::proto::runtime::v1::_PubsubSubscriptionRules_default_instance_);
}
inline const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& PubsubSubscription::rules() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.rules)
  return _internal_rules();
}
inline void PubsubSubscription::unsafe_arena_set_allocated_rules(::dapr::proto::runtime::v1::PubsubSubscriptionRules* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rules_);
  }
  _impl_.rules_ = reinterpret_cast<::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.rules)
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRules* PubsubSubscription::release_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* released = _impl_.rules_;
  _impl_.rules_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRules* PubsubSubscription::unsafe_arena_release_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.rules)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* temp = _impl_.rules_;
  _impl_.rules_ = nullptr;
  return temp;
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRules* PubsubSubscription::_internal_mutable_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.rules_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::PubsubSubscriptionRules>(GetArenaForAllocation());
    _impl_.rules_ = reinterpret_cast<::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(p);
  }
  return _impl_.rules_;
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRules* PubsubSubscription::mutable_rules() {
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* _msg = _internal_mutable_rules();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.rules)
  return _msg;
}
inline void PubsubSubscription::set_allocated_rules(::dapr::proto::runtime::v1::PubsubSubscriptionRules* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(_impl_.rules_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rules_ = reinterpret_cast<::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.rules)
}

// string dead_letter_topic = 5 [json_name = "deadLetterTopic"];
inline void PubsubSubscription::clear_dead_letter_topic() {
  _impl_.dead_letter_topic_.ClearToEmpty();
}
inline const std::string& PubsubSubscription::dead_letter_topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
  return _internal_dead_letter_topic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PubsubSubscription::set_dead_letter_topic(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dead_letter_topic_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}
inline std::string* PubsubSubscription::mutable_dead_letter_topic() {
  std::string* _s = _internal_mutable_dead_letter_topic();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
  return _s;
}
inline const std::string& PubsubSubscription::_internal_dead_letter_topic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dead_letter_topic_.Get();
}
inline void PubsubSubscription::_internal_set_dead_letter_topic(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dead_letter_topic_.Set(value, GetArenaForAllocation());
}
inline std::string* PubsubSubscription::_internal_mutable_dead_letter_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.dead_letter_topic_.Mutable( GetArenaForAllocation());
}
inline std::string* PubsubSubscription::release_dead_letter_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
  return _impl_.dead_letter_topic_.Release();
}
inline void PubsubSubscription::set_allocated_dead_letter_topic(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dead_letter_topic_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dead_letter_topic_.IsDefault()) {
          _impl_.dead_letter_topic_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}

// -------------------------------------------------------------------

// PubsubSubscriptionRules

// repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
inline int PubsubSubscriptionRules::_internal_rules_size() const {
  return _internal_rules().size();
}
inline int PubsubSubscriptionRules::rules_size() const {
  return _internal_rules_size();
}
inline void PubsubSubscriptionRules::clear_rules() {
  _internal_mutable_rules()->Clear();
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRule* PubsubSubscriptionRules::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return _internal_mutable_rules()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >*
PubsubSubscriptionRules::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rules();
}
inline const ::dapr::proto::runtime::v1::PubsubSubscriptionRule& PubsubSubscriptionRules::rules(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
    return _internal_rules().Get(index);
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRule* PubsubSubscriptionRules::add_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::dapr::proto::runtime::v1::PubsubSubscriptionRule* _add = _internal_mutable_rules()->Add();
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >&
PubsubSubscriptionRules::rules() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return _internal_rules();
}
inline const ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscriptionRule>&
PubsubSubscriptionRules::_internal_rules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rules_;
}
inline ::google::protobuf::RepeatedPtrField<::dapr::proto::runtime::v1::PubsubSubscriptionRule>*
PubsubSubscriptionRules::_internal_mutable_rules() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rules_;
}

// -------------------------------------------------------------------

// PubsubSubscriptionRule

// string match = 1;
inline void PubsubSubscriptionRule::clear_match() {
  _impl_.match_.ClearToEmpty();
}
inline const std::string& PubsubSubscriptionRule::match() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
  return _internal_match();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PubsubSubscriptionRule::set_match(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.match_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}
inline std::string* PubsubSubscriptionRule::mutable_match() {
  std::string* _s = _internal_mutable_match();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
  return _s;
}
inline const std::string& PubsubSubscriptionRule::_internal_match() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.match_.Get();
}
inline void PubsubSubscriptionRule::_internal_set_match(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.match_.Set(value, GetArenaForAllocation());
}
inline std::string* PubsubSubscriptionRule::_internal_mutable_match() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.match_.Mutable( GetArenaForAllocation());
}
inline std::string* PubsubSubscriptionRule::release_match() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
  return _impl_.match_.Release();
}
inline void PubsubSubscriptionRule::set_allocated_match(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.match_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.match_.IsDefault()) {
          _impl_.match_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}

// string path = 2;
inline void PubsubSubscriptionRule::clear_path() {
  _impl_.path_.ClearToEmpty();
}
inline const std::string& PubsubSubscriptionRule::path() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PubsubSubscriptionRule::set_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}
inline std::string* PubsubSubscriptionRule::mutable_path() {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
  return _s;
}
inline const std::string& PubsubSubscriptionRule::_internal_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.path_.Get();
}
inline void PubsubSubscriptionRule::_internal_set_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.path_.Set(value, GetArenaForAllocation());
}
inline std::string* PubsubSubscriptionRule::_internal_mutable_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.path_.Mutable( GetArenaForAllocation());
}
inline std::string* PubsubSubscriptionRule::release_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
  return _impl_.path_.Release();
}
inline void PubsubSubscriptionRule::set_allocated_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}

// -------------------------------------------------------------------

// SetMetadataRequest

// string key = 1;
inline void SetMetadataRequest::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SetMetadataRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SetMetadataRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMetadataRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SetMetadataRequest.key)
}
inline std::string* SetMetadataRequest::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SetMetadataRequest.key)
  return _s;
}
inline const std::string& SetMetadataRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SetMetadataRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* SetMetadataRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* SetMetadataRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SetMetadataRequest.key)
  return _impl_.key_.Release();
}
inline void SetMetadataRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SetMetadataRequest.key)
}

// string value = 2;
inline void SetMetadataRequest::clear_value() {
  _impl_.value_.ClearToEmpty();
}
inline const std::string& SetMetadataRequest::value() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SetMetadataRequest.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMetadataRequest::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SetMetadataRequest.value)
}
inline std::string* SetMetadataRequest::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SetMetadataRequest.value)
  return _s;
}
inline const std::string& SetMetadataRequest::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void SetMetadataRequest::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* SetMetadataRequest::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArenaForAllocation());
}
inline std::string* SetMetadataRequest::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SetMetadataRequest.value)
  return _impl_.value_.Release();
}
inline void SetMetadataRequest::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SetMetadataRequest.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetConfigurationRequest

// string store_name = 1;
inline void GetConfigurationRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& GetConfigurationRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetConfigurationRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}
inline std::string* GetConfigurationRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
  return _s;
}
inline const std::string& GetConfigurationRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void GetConfigurationRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetConfigurationRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetConfigurationRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void GetConfigurationRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}

// repeated string keys = 2;
inline int GetConfigurationRequest::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int GetConfigurationRequest::keys_size() const {
  return _internal_keys_size();
}
inline void GetConfigurationRequest::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline std::string* GetConfigurationRequest::add_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return _s;
}
inline const std::string& GetConfigurationRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return _internal_keys().Get(index);
}
inline std::string* GetConfigurationRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return _internal_mutable_keys()->Mutable(index);
}
inline void GetConfigurationRequest::set_keys(int index, const std::string& value) {
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::set_keys(int index, std::string&& value) {
  _internal_mutable_keys()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::set_keys(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::set_keys(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_keys()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::set_keys(int index, absl::string_view value) {
  _internal_mutable_keys()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::add_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::add_keys(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::add_keys(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::add_keys(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::add_keys(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetConfigurationRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* GetConfigurationRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetConfigurationRequest::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetConfigurationRequest::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// map<string, string> metadata = 3;
inline int GetConfigurationRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int GetConfigurationRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void GetConfigurationRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetConfigurationRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetConfigurationRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetConfigurationRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* GetConfigurationRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetConfigurationRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetConfigurationRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetConfigurationResponse

// map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
inline int GetConfigurationResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int GetConfigurationResponse::items_size() const {
  return _internal_items_size();
}
inline const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& GetConfigurationResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& GetConfigurationResponse::items() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetConfigurationResponse.items)
  return _internal_items();
}
inline ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* GetConfigurationResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.items_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* GetConfigurationResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetConfigurationResponse.items)
  return _internal_mutable_items();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SubscribeConfigurationRequest

// string store_name = 1;
inline void SubscribeConfigurationRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& SubscribeConfigurationRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeConfigurationRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}
inline std::string* SubscribeConfigurationRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
  return _s;
}
inline const std::string& SubscribeConfigurationRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void SubscribeConfigurationRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubscribeConfigurationRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubscribeConfigurationRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void SubscribeConfigurationRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}

// repeated string keys = 2;
inline int SubscribeConfigurationRequest::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int SubscribeConfigurationRequest::keys_size() const {
  return _internal_keys_size();
}
inline void SubscribeConfigurationRequest::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline std::string* SubscribeConfigurationRequest::add_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return _s;
}
inline const std::string& SubscribeConfigurationRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return _internal_keys().Get(index);
}
inline std::string* SubscribeConfigurationRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return _internal_mutable_keys()->Mutable(index);
}
inline void SubscribeConfigurationRequest::set_keys(int index, const std::string& value) {
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::set_keys(int index, std::string&& value) {
  _internal_mutable_keys()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::set_keys(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::set_keys(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_keys()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::set_keys(int index, absl::string_view value) {
  _internal_mutable_keys()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::add_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::add_keys(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::add_keys(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::add_keys(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::add_keys(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SubscribeConfigurationRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* SubscribeConfigurationRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SubscribeConfigurationRequest::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SubscribeConfigurationRequest::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// map<string, string> metadata = 3;
inline int SubscribeConfigurationRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int SubscribeConfigurationRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void SubscribeConfigurationRequest::clear_metadata() {
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SubscribeConfigurationRequest::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SubscribeConfigurationRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.SubscribeConfigurationRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SubscribeConfigurationRequest::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SubscribeConfigurationRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.SubscribeConfigurationRequest.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// UnsubscribeConfigurationRequest

// string store_name = 1;
inline void UnsubscribeConfigurationRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& UnsubscribeConfigurationRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnsubscribeConfigurationRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}
inline std::string* UnsubscribeConfigurationRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
  return _s;
}
inline const std::string& UnsubscribeConfigurationRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void UnsubscribeConfigurationRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* UnsubscribeConfigurationRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* UnsubscribeConfigurationRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void UnsubscribeConfigurationRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}

// string id = 2;
inline void UnsubscribeConfigurationRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& UnsubscribeConfigurationRequest::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnsubscribeConfigurationRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}
inline std::string* UnsubscribeConfigurationRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
  return _s;
}
inline const std::string& UnsubscribeConfigurationRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void UnsubscribeConfigurationRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* UnsubscribeConfigurationRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* UnsubscribeConfigurationRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
  return _impl_.id_.Release();
}
inline void UnsubscribeConfigurationRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SubscribeConfigurationResponse

// string id = 1;
inline void SubscribeConfigurationResponse::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SubscribeConfigurationResponse::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeConfigurationResponse::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}
inline std::string* SubscribeConfigurationResponse::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
  return _s;
}
inline const std::string& SubscribeConfigurationResponse::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void SubscribeConfigurationResponse::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* SubscribeConfigurationResponse::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* SubscribeConfigurationResponse::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
  return _impl_.id_.Release();
}
inline void SubscribeConfigurationResponse::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}

// map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
inline int SubscribeConfigurationResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int SubscribeConfigurationResponse::items_size() const {
  return _internal_items_size();
}
inline const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& SubscribeConfigurationResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>& SubscribeConfigurationResponse::items() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.SubscribeConfigurationResponse.items)
  return _internal_items();
}
inline ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* SubscribeConfigurationResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.items_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::dapr::proto::common::v1::ConfigurationItem>* SubscribeConfigurationResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.SubscribeConfigurationResponse.items)
  return _internal_mutable_items();
}

// -------------------------------------------------------------------

// UnsubscribeConfigurationResponse

// bool ok = 1;
inline void UnsubscribeConfigurationResponse::clear_ok() {
  _impl_.ok_ = false;
}
inline bool UnsubscribeConfigurationResponse::ok() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.ok)
  return _internal_ok();
}
inline void UnsubscribeConfigurationResponse::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.ok)
}
inline bool UnsubscribeConfigurationResponse::_internal_ok() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ok_;
}
inline void UnsubscribeConfigurationResponse::_internal_set_ok(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ok_ = value;
}

// string message = 2;
inline void UnsubscribeConfigurationResponse::clear_message() {
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UnsubscribeConfigurationResponse::message() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnsubscribeConfigurationResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}
inline std::string* UnsubscribeConfigurationResponse::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
  return _s;
}
inline const std::string& UnsubscribeConfigurationResponse::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void UnsubscribeConfigurationResponse::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* UnsubscribeConfigurationResponse::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArenaForAllocation());
}
inline std::string* UnsubscribeConfigurationResponse::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
  return _impl_.message_.Release();
}
inline void UnsubscribeConfigurationResponse::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}

// -------------------------------------------------------------------

// TryLockRequest

// string store_name = 1 [json_name = "storeName"];
inline void TryLockRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& TryLockRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TryLockRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.store_name)
}
inline std::string* TryLockRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TryLockRequest.store_name)
  return _s;
}
inline const std::string& TryLockRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void TryLockRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* TryLockRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* TryLockRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TryLockRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void TryLockRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TryLockRequest.store_name)
}

// string resource_id = 2 [json_name = "resourceId"];
inline void TryLockRequest::clear_resource_id() {
  _impl_.resource_id_.ClearToEmpty();
}
inline const std::string& TryLockRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.resource_id)
  return _internal_resource_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TryLockRequest::set_resource_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}
inline std::string* TryLockRequest::mutable_resource_id() {
  std::string* _s = _internal_mutable_resource_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TryLockRequest.resource_id)
  return _s;
}
inline const std::string& TryLockRequest::_internal_resource_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_id_.Get();
}
inline void TryLockRequest::_internal_set_resource_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_id_.Set(value, GetArenaForAllocation());
}
inline std::string* TryLockRequest::_internal_mutable_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resource_id_.Mutable( GetArenaForAllocation());
}
inline std::string* TryLockRequest::release_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TryLockRequest.resource_id)
  return _impl_.resource_id_.Release();
}
inline void TryLockRequest::set_allocated_resource_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_id_.IsDefault()) {
          _impl_.resource_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}

// string lock_owner = 3 [json_name = "lockOwner"];
inline void TryLockRequest::clear_lock_owner() {
  _impl_.lock_owner_.ClearToEmpty();
}
inline const std::string& TryLockRequest::lock_owner() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
  return _internal_lock_owner();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TryLockRequest::set_lock_owner(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lock_owner_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}
inline std::string* TryLockRequest::mutable_lock_owner() {
  std::string* _s = _internal_mutable_lock_owner();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
  return _s;
}
inline const std::string& TryLockRequest::_internal_lock_owner() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lock_owner_.Get();
}
inline void TryLockRequest::_internal_set_lock_owner(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lock_owner_.Set(value, GetArenaForAllocation());
}
inline std::string* TryLockRequest::_internal_mutable_lock_owner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lock_owner_.Mutable( GetArenaForAllocation());
}
inline std::string* TryLockRequest::release_lock_owner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
  return _impl_.lock_owner_.Release();
}
inline void TryLockRequest::set_allocated_lock_owner(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lock_owner_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lock_owner_.IsDefault()) {
          _impl_.lock_owner_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}

// int32 expiry_in_seconds = 4 [json_name = "expiryInSeconds"];
inline void TryLockRequest::clear_expiry_in_seconds() {
  _impl_.expiry_in_seconds_ = 0;
}
inline ::int32_t TryLockRequest::expiry_in_seconds() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.expiry_in_seconds)
  return _internal_expiry_in_seconds();
}
inline void TryLockRequest::set_expiry_in_seconds(::int32_t value) {
  _internal_set_expiry_in_seconds(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.expiry_in_seconds)
}
inline ::int32_t TryLockRequest::_internal_expiry_in_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.expiry_in_seconds_;
}
inline void TryLockRequest::_internal_set_expiry_in_seconds(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.expiry_in_seconds_ = value;
}

// -------------------------------------------------------------------

// TryLockResponse

// bool success = 1;
inline void TryLockResponse::clear_success() {
  _impl_.success_ = false;
}
inline bool TryLockResponse::success() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockResponse.success)
  return _internal_success();
}
inline void TryLockResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockResponse.success)
}
inline bool TryLockResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void TryLockResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// UnlockRequest

// string store_name = 1 [json_name = "storeName"];
inline void UnlockRequest::clear_store_name() {
  _impl_.store_name_.ClearToEmpty();
}
inline const std::string& UnlockRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockRequest.store_name)
  return _internal_store_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnlockRequest::set_store_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockRequest.store_name)
}
inline std::string* UnlockRequest::mutable_store_name() {
  std::string* _s = _internal_mutable_store_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnlockRequest.store_name)
  return _s;
}
inline const std::string& UnlockRequest::_internal_store_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.store_name_.Get();
}
inline void UnlockRequest::_internal_set_store_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.store_name_.Set(value, GetArenaForAllocation());
}
inline std::string* UnlockRequest::_internal_mutable_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.store_name_.Mutable( GetArenaForAllocation());
}
inline std::string* UnlockRequest::release_store_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnlockRequest.store_name)
  return _impl_.store_name_.Release();
}
inline void UnlockRequest::set_allocated_store_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.store_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.store_name_.IsDefault()) {
          _impl_.store_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnlockRequest.store_name)
}

// string resource_id = 2 [json_name = "resourceId"];
inline void UnlockRequest::clear_resource_id() {
  _impl_.resource_id_.ClearToEmpty();
}
inline const std::string& UnlockRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockRequest.resource_id)
  return _internal_resource_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnlockRequest::set_resource_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}
inline std::string* UnlockRequest::mutable_resource_id() {
  std::string* _s = _internal_mutable_resource_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnlockRequest.resource_id)
  return _s;
}
inline const std::string& UnlockRequest::_internal_resource_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_id_.Get();
}
inline void UnlockRequest::_internal_set_resource_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_id_.Set(value, GetArenaForAllocation());
}
inline std::string* UnlockRequest::_internal_mutable_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resource_id_.Mutable( GetArenaForAllocation());
}
inline std::string* UnlockRequest::release_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnlockRequest.resource_id)
  return _impl_.resource_id_.Release();
}
inline void UnlockRequest::set_allocated_resource_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_id_.IsDefault()) {
          _impl_.resource_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}

// string lock_owner = 3 [json_name = "lockOwner"];
inline void UnlockRequest::clear_lock_owner() {
  _impl_.lock_owner_.ClearToEmpty();
}
inline const std::string& UnlockRequest::lock_owner() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
  return _internal_lock_owner();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UnlockRequest::set_lock_owner(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lock_owner_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}
inline std::string* UnlockRequest::mutable_lock_owner() {
  std::string* _s = _internal_mutable_lock_owner();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
  return _s;
}
inline const std::string& UnlockRequest::_internal_lock_owner() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lock_owner_.Get();
}
inline void UnlockRequest::_internal_set_lock_owner(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lock_owner_.Set(value, GetArenaForAllocation());
}
inline std::string* UnlockRequest::_internal_mutable_lock_owner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lock_owner_.Mutable( GetArenaForAllocation());
}
inline std::string* UnlockRequest::release_lock_owner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
  return _impl_.lock_owner_.Release();
}
inline void UnlockRequest::set_allocated_lock_owner(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lock_owner_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lock_owner_.IsDefault()) {
          _impl_.lock_owner_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}

// -------------------------------------------------------------------

// UnlockResponse

// .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
inline void UnlockResponse::clear_status() {
  _impl_.status_ = 0;
}
inline ::dapr::proto::runtime::v1::UnlockResponse_Status UnlockResponse::status() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockResponse.status)
  return _internal_status();
}
inline void UnlockResponse::set_status(::dapr::proto::runtime::v1::UnlockResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockResponse.status)
}
inline ::dapr::proto::runtime::v1::UnlockResponse_Status UnlockResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::dapr::proto::runtime::v1::UnlockResponse_Status>(_impl_.status_);
}
inline void UnlockResponse::_internal_set_status(::dapr::proto::runtime::v1::UnlockResponse_Status value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SubtleGetKeyRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleGetKeyRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleGetKeyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleGetKeyRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}
inline std::string* SubtleGetKeyRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
  return _s;
}
inline const std::string& SubtleGetKeyRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleGetKeyRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleGetKeyRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleGetKeyRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleGetKeyRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}

// string name = 2;
inline void SubtleGetKeyRequest::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SubtleGetKeyRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleGetKeyRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}
inline std::string* SubtleGetKeyRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
  return _s;
}
inline const std::string& SubtleGetKeyRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SubtleGetKeyRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleGetKeyRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleGetKeyRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
  return _impl_.name_.Release();
}
inline void SubtleGetKeyRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}

// .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
inline void SubtleGetKeyRequest::clear_format() {
  _impl_.format_ = 0;
}
inline ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::format() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyRequest.format)
  return _internal_format();
}
inline void SubtleGetKeyRequest::set_format(::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyRequest.format)
}
inline ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::_internal_format() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat>(_impl_.format_);
}
inline void SubtleGetKeyRequest::_internal_set_format(::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.format_ = value;
}

// -------------------------------------------------------------------

// SubtleGetKeyResponse

// string name = 1;
inline void SubtleGetKeyResponse::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SubtleGetKeyResponse::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleGetKeyResponse::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}
inline std::string* SubtleGetKeyResponse::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
  return _s;
}
inline const std::string& SubtleGetKeyResponse::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SubtleGetKeyResponse::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleGetKeyResponse::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleGetKeyResponse::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
  return _impl_.name_.Release();
}
inline void SubtleGetKeyResponse::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}

// string public_key = 2 [json_name = "publicKey"];
inline void SubtleGetKeyResponse::clear_public_key() {
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& SubtleGetKeyResponse::public_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleGetKeyResponse::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}
inline std::string* SubtleGetKeyResponse::mutable_public_key() {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
  return _s;
}
inline const std::string& SubtleGetKeyResponse::_internal_public_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.public_key_.Get();
}
inline void SubtleGetKeyResponse::_internal_set_public_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.public_key_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleGetKeyResponse::_internal_mutable_public_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.public_key_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleGetKeyResponse::release_public_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
  return _impl_.public_key_.Release();
}
inline void SubtleGetKeyResponse::set_allocated_public_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.public_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}

// -------------------------------------------------------------------

// SubtleEncryptRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleEncryptRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleEncryptRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}
inline std::string* SubtleEncryptRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
  return _s;
}
inline const std::string& SubtleEncryptRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleEncryptRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleEncryptRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}

// bytes plaintext = 2;
inline void SubtleEncryptRequest::clear_plaintext() {
  _impl_.plaintext_.ClearToEmpty();
}
inline const std::string& SubtleEncryptRequest::plaintext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
  return _internal_plaintext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptRequest::set_plaintext(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}
inline std::string* SubtleEncryptRequest::mutable_plaintext() {
  std::string* _s = _internal_mutable_plaintext();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
  return _s;
}
inline const std::string& SubtleEncryptRequest::_internal_plaintext() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plaintext_.Get();
}
inline void SubtleEncryptRequest::_internal_set_plaintext(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::_internal_mutable_plaintext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plaintext_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::release_plaintext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
  return _impl_.plaintext_.Release();
}
inline void SubtleEncryptRequest::set_allocated_plaintext(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plaintext_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plaintext_.IsDefault()) {
          _impl_.plaintext_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}

// string algorithm = 3;
inline void SubtleEncryptRequest::clear_algorithm() {
  _impl_.algorithm_.ClearToEmpty();
}
inline const std::string& SubtleEncryptRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
  return _internal_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptRequest::set_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}
inline std::string* SubtleEncryptRequest::mutable_algorithm() {
  std::string* _s = _internal_mutable_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
  return _s;
}
inline const std::string& SubtleEncryptRequest::_internal_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.algorithm_.Get();
}
inline void SubtleEncryptRequest::_internal_set_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::_internal_mutable_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::release_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
  return _impl_.algorithm_.Release();
}
inline void SubtleEncryptRequest::set_allocated_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.algorithm_.IsDefault()) {
          _impl_.algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}

// string key_name = 4 [json_name = "keyName"];
inline void SubtleEncryptRequest::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& SubtleEncryptRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptRequest::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}
inline std::string* SubtleEncryptRequest::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
  return _s;
}
inline const std::string& SubtleEncryptRequest::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void SubtleEncryptRequest::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
  return _impl_.key_name_.Release();
}
inline void SubtleEncryptRequest::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleEncryptRequest::clear_nonce() {
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& SubtleEncryptRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptRequest::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}
inline std::string* SubtleEncryptRequest::mutable_nonce() {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
  return _s;
}
inline const std::string& SubtleEncryptRequest::_internal_nonce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_.Get();
}
inline void SubtleEncryptRequest::_internal_set_nonce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::_internal_mutable_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::release_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
  return _impl_.nonce_.Release();
}
inline void SubtleEncryptRequest::set_allocated_nonce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}

// bytes associated_data = 6 [json_name = "associatedData"];
inline void SubtleEncryptRequest::clear_associated_data() {
  _impl_.associated_data_.ClearToEmpty();
}
inline const std::string& SubtleEncryptRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
  return _internal_associated_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptRequest::set_associated_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}
inline std::string* SubtleEncryptRequest::mutable_associated_data() {
  std::string* _s = _internal_mutable_associated_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
  return _s;
}
inline const std::string& SubtleEncryptRequest::_internal_associated_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.associated_data_.Get();
}
inline void SubtleEncryptRequest::_internal_set_associated_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::_internal_mutable_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.associated_data_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptRequest::release_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
  return _impl_.associated_data_.Release();
}
inline void SubtleEncryptRequest::set_allocated_associated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.associated_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.associated_data_.IsDefault()) {
          _impl_.associated_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleEncryptResponse

// bytes ciphertext = 1;
inline void SubtleEncryptResponse::clear_ciphertext() {
  _impl_.ciphertext_.ClearToEmpty();
}
inline const std::string& SubtleEncryptResponse::ciphertext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
  return _internal_ciphertext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptResponse::set_ciphertext(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ciphertext_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}
inline std::string* SubtleEncryptResponse::mutable_ciphertext() {
  std::string* _s = _internal_mutable_ciphertext();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
  return _s;
}
inline const std::string& SubtleEncryptResponse::_internal_ciphertext() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ciphertext_.Get();
}
inline void SubtleEncryptResponse::_internal_set_ciphertext(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ciphertext_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptResponse::_internal_mutable_ciphertext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ciphertext_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptResponse::release_ciphertext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
  return _impl_.ciphertext_.Release();
}
inline void SubtleEncryptResponse::set_allocated_ciphertext(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ciphertext_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ciphertext_.IsDefault()) {
          _impl_.ciphertext_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}

// bytes tag = 2;
inline void SubtleEncryptResponse::clear_tag() {
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& SubtleEncryptResponse::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleEncryptResponse::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}
inline std::string* SubtleEncryptResponse::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
  return _s;
}
inline const std::string& SubtleEncryptResponse::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void SubtleEncryptResponse::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleEncryptResponse::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleEncryptResponse::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
  return _impl_.tag_.Release();
}
inline void SubtleEncryptResponse::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}

// -------------------------------------------------------------------

// SubtleDecryptRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleDecryptRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}
inline std::string* SubtleDecryptRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleDecryptRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleDecryptRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}

// bytes ciphertext = 2;
inline void SubtleDecryptRequest::clear_ciphertext() {
  _impl_.ciphertext_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::ciphertext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
  return _internal_ciphertext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_ciphertext(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ciphertext_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}
inline std::string* SubtleDecryptRequest::mutable_ciphertext() {
  std::string* _s = _internal_mutable_ciphertext();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_ciphertext() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ciphertext_.Get();
}
inline void SubtleDecryptRequest::_internal_set_ciphertext(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ciphertext_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_ciphertext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ciphertext_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_ciphertext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
  return _impl_.ciphertext_.Release();
}
inline void SubtleDecryptRequest::set_allocated_ciphertext(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ciphertext_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ciphertext_.IsDefault()) {
          _impl_.ciphertext_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}

// string algorithm = 3;
inline void SubtleDecryptRequest::clear_algorithm() {
  _impl_.algorithm_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
  return _internal_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}
inline std::string* SubtleDecryptRequest::mutable_algorithm() {
  std::string* _s = _internal_mutable_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.algorithm_.Get();
}
inline void SubtleDecryptRequest::_internal_set_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
  return _impl_.algorithm_.Release();
}
inline void SubtleDecryptRequest::set_allocated_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.algorithm_.IsDefault()) {
          _impl_.algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}

// string key_name = 4 [json_name = "keyName"];
inline void SubtleDecryptRequest::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}
inline std::string* SubtleDecryptRequest::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void SubtleDecryptRequest::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
  return _impl_.key_name_.Release();
}
inline void SubtleDecryptRequest::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleDecryptRequest::clear_nonce() {
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}
inline std::string* SubtleDecryptRequest::mutable_nonce() {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_nonce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_.Get();
}
inline void SubtleDecryptRequest::_internal_set_nonce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
  return _impl_.nonce_.Release();
}
inline void SubtleDecryptRequest::set_allocated_nonce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}

// bytes tag = 6;
inline void SubtleDecryptRequest::clear_tag() {
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}
inline std::string* SubtleDecryptRequest::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void SubtleDecryptRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
  return _impl_.tag_.Release();
}
inline void SubtleDecryptRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}

// bytes associated_data = 7 [json_name = "associatedData"];
inline void SubtleDecryptRequest::clear_associated_data() {
  _impl_.associated_data_.ClearToEmpty();
}
inline const std::string& SubtleDecryptRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
  return _internal_associated_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptRequest::set_associated_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}
inline std::string* SubtleDecryptRequest::mutable_associated_data() {
  std::string* _s = _internal_mutable_associated_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
  return _s;
}
inline const std::string& SubtleDecryptRequest::_internal_associated_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.associated_data_.Get();
}
inline void SubtleDecryptRequest::_internal_set_associated_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::_internal_mutable_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.associated_data_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptRequest::release_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
  return _impl_.associated_data_.Release();
}
inline void SubtleDecryptRequest::set_allocated_associated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.associated_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.associated_data_.IsDefault()) {
          _impl_.associated_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleDecryptResponse

// bytes plaintext = 1;
inline void SubtleDecryptResponse::clear_plaintext() {
  _impl_.plaintext_.ClearToEmpty();
}
inline const std::string& SubtleDecryptResponse::plaintext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
  return _internal_plaintext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleDecryptResponse::set_plaintext(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}
inline std::string* SubtleDecryptResponse::mutable_plaintext() {
  std::string* _s = _internal_mutable_plaintext();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
  return _s;
}
inline const std::string& SubtleDecryptResponse::_internal_plaintext() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plaintext_.Get();
}
inline void SubtleDecryptResponse::_internal_set_plaintext(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleDecryptResponse::_internal_mutable_plaintext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plaintext_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleDecryptResponse::release_plaintext() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
  return _impl_.plaintext_.Release();
}
inline void SubtleDecryptResponse::set_allocated_plaintext(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plaintext_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plaintext_.IsDefault()) {
          _impl_.plaintext_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}

// -------------------------------------------------------------------

// SubtleWrapKeyRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleWrapKeyRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}
inline std::string* SubtleWrapKeyRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
  return _s;
}
inline const std::string& SubtleWrapKeyRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleWrapKeyRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleWrapKeyRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}

// bytes plaintext_key = 2 [json_name = "plaintextKey"];
inline void SubtleWrapKeyRequest::clear_plaintext_key() {
  _impl_.plaintext_key_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyRequest::plaintext_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
  return _internal_plaintext_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyRequest::set_plaintext_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}
inline std::string* SubtleWrapKeyRequest::mutable_plaintext_key() {
  std::string* _s = _internal_mutable_plaintext_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
  return _s;
}
inline const std::string& SubtleWrapKeyRequest::_internal_plaintext_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plaintext_key_.Get();
}
inline void SubtleWrapKeyRequest::_internal_set_plaintext_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_key_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::_internal_mutable_plaintext_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plaintext_key_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::release_plaintext_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
  return _impl_.plaintext_key_.Release();
}
inline void SubtleWrapKeyRequest::set_allocated_plaintext_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plaintext_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plaintext_key_.IsDefault()) {
          _impl_.plaintext_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}

// string algorithm = 3;
inline void SubtleWrapKeyRequest::clear_algorithm() {
  _impl_.algorithm_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
  return _internal_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyRequest::set_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}
inline std::string* SubtleWrapKeyRequest::mutable_algorithm() {
  std::string* _s = _internal_mutable_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
  return _s;
}
inline const std::string& SubtleWrapKeyRequest::_internal_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.algorithm_.Get();
}
inline void SubtleWrapKeyRequest::_internal_set_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::_internal_mutable_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::release_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
  return _impl_.algorithm_.Release();
}
inline void SubtleWrapKeyRequest::set_allocated_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.algorithm_.IsDefault()) {
          _impl_.algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}

// string key_name = 4 [json_name = "keyName"];
inline void SubtleWrapKeyRequest::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyRequest::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}
inline std::string* SubtleWrapKeyRequest::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
  return _s;
}
inline const std::string& SubtleWrapKeyRequest::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void SubtleWrapKeyRequest::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
  return _impl_.key_name_.Release();
}
inline void SubtleWrapKeyRequest::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleWrapKeyRequest::clear_nonce() {
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyRequest::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}
inline std::string* SubtleWrapKeyRequest::mutable_nonce() {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
  return _s;
}
inline const std::string& SubtleWrapKeyRequest::_internal_nonce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_.Get();
}
inline void SubtleWrapKeyRequest::_internal_set_nonce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::_internal_mutable_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::release_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
  return _impl_.nonce_.Release();
}
inline void SubtleWrapKeyRequest::set_allocated_nonce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}

// bytes associated_data = 6 [json_name = "associatedData"];
inline void SubtleWrapKeyRequest::clear_associated_data() {
  _impl_.associated_data_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
  return _internal_associated_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyRequest::set_associated_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}
inline std::string* SubtleWrapKeyRequest::mutable_associated_data() {
  std::string* _s = _internal_mutable_associated_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
  return _s;
}
inline const std::string& SubtleWrapKeyRequest::_internal_associated_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.associated_data_.Get();
}
inline void SubtleWrapKeyRequest::_internal_set_associated_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::_internal_mutable_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.associated_data_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyRequest::release_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
  return _impl_.associated_data_.Release();
}
inline void SubtleWrapKeyRequest::set_allocated_associated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.associated_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.associated_data_.IsDefault()) {
          _impl_.associated_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleWrapKeyResponse

// bytes wrapped_key = 1 [json_name = "wrappedKey"];
inline void SubtleWrapKeyResponse::clear_wrapped_key() {
  _impl_.wrapped_key_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyResponse::wrapped_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
  return _internal_wrapped_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyResponse::set_wrapped_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wrapped_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}
inline std::string* SubtleWrapKeyResponse::mutable_wrapped_key() {
  std::string* _s = _internal_mutable_wrapped_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
  return _s;
}
inline const std::string& SubtleWrapKeyResponse::_internal_wrapped_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.wrapped_key_.Get();
}
inline void SubtleWrapKeyResponse::_internal_set_wrapped_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wrapped_key_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyResponse::_internal_mutable_wrapped_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.wrapped_key_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyResponse::release_wrapped_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
  return _impl_.wrapped_key_.Release();
}
inline void SubtleWrapKeyResponse::set_allocated_wrapped_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.wrapped_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wrapped_key_.IsDefault()) {
          _impl_.wrapped_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}

// bytes tag = 2;
inline void SubtleWrapKeyResponse::clear_tag() {
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& SubtleWrapKeyResponse::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleWrapKeyResponse::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}
inline std::string* SubtleWrapKeyResponse::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
  return _s;
}
inline const std::string& SubtleWrapKeyResponse::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void SubtleWrapKeyResponse::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyResponse::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleWrapKeyResponse::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
  return _impl_.tag_.Release();
}
inline void SubtleWrapKeyResponse::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}

// -------------------------------------------------------------------

// SubtleUnwrapKeyRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleUnwrapKeyRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}

// bytes wrapped_key = 2 [json_name = "wrappedKey"];
inline void SubtleUnwrapKeyRequest::clear_wrapped_key() {
  _impl_.wrapped_key_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::wrapped_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
  return _internal_wrapped_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_wrapped_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wrapped_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_wrapped_key() {
  std::string* _s = _internal_mutable_wrapped_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_wrapped_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.wrapped_key_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_wrapped_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wrapped_key_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_wrapped_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.wrapped_key_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_wrapped_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
  return _impl_.wrapped_key_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_wrapped_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.wrapped_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.wrapped_key_.IsDefault()) {
          _impl_.wrapped_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}

// string algorithm = 3;
inline void SubtleUnwrapKeyRequest::clear_algorithm() {
  _impl_.algorithm_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
  return _internal_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_algorithm() {
  std::string* _s = _internal_mutable_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.algorithm_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
  return _impl_.algorithm_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.algorithm_.IsDefault()) {
          _impl_.algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}

// string key_name = 4 [json_name = "keyName"];
inline void SubtleUnwrapKeyRequest::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
  return _impl_.key_name_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleUnwrapKeyRequest::clear_nonce() {
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_nonce() {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_nonce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nonce_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_nonce(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nonce_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nonce_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_nonce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
  return _impl_.nonce_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_nonce(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nonce_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}

// bytes tag = 6;
inline void SubtleUnwrapKeyRequest::clear_tag() {
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
  return _impl_.tag_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}

// bytes associated_data = 7 [json_name = "associatedData"];
inline void SubtleUnwrapKeyRequest::clear_associated_data() {
  _impl_.associated_data_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
  return _internal_associated_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyRequest::set_associated_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}
inline std::string* SubtleUnwrapKeyRequest::mutable_associated_data() {
  std::string* _s = _internal_mutable_associated_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
  return _s;
}
inline const std::string& SubtleUnwrapKeyRequest::_internal_associated_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.associated_data_.Get();
}
inline void SubtleUnwrapKeyRequest::_internal_set_associated_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.associated_data_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::_internal_mutable_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.associated_data_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyRequest::release_associated_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
  return _impl_.associated_data_.Release();
}
inline void SubtleUnwrapKeyRequest::set_allocated_associated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.associated_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.associated_data_.IsDefault()) {
          _impl_.associated_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleUnwrapKeyResponse

// bytes plaintext_key = 1 [json_name = "plaintextKey"];
inline void SubtleUnwrapKeyResponse::clear_plaintext_key() {
  _impl_.plaintext_key_.ClearToEmpty();
}
inline const std::string& SubtleUnwrapKeyResponse::plaintext_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
  return _internal_plaintext_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleUnwrapKeyResponse::set_plaintext_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}
inline std::string* SubtleUnwrapKeyResponse::mutable_plaintext_key() {
  std::string* _s = _internal_mutable_plaintext_key();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
  return _s;
}
inline const std::string& SubtleUnwrapKeyResponse::_internal_plaintext_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plaintext_key_.Get();
}
inline void SubtleUnwrapKeyResponse::_internal_set_plaintext_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plaintext_key_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyResponse::_internal_mutable_plaintext_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plaintext_key_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleUnwrapKeyResponse::release_plaintext_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
  return _impl_.plaintext_key_.Release();
}
inline void SubtleUnwrapKeyResponse::set_allocated_plaintext_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plaintext_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plaintext_key_.IsDefault()) {
          _impl_.plaintext_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}

// -------------------------------------------------------------------

// SubtleSignRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleSignRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleSignRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleSignRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}
inline std::string* SubtleSignRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
  return _s;
}
inline const std::string& SubtleSignRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleSignRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleSignRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}

// bytes digest = 2;
inline void SubtleSignRequest::clear_digest() {
  _impl_.digest_.ClearToEmpty();
}
inline const std::string& SubtleSignRequest::digest() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.digest)
  return _internal_digest();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleSignRequest::set_digest(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digest_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}
inline std::string* SubtleSignRequest::mutable_digest() {
  std::string* _s = _internal_mutable_digest();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.digest)
  return _s;
}
inline const std::string& SubtleSignRequest::_internal_digest() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.digest_.Get();
}
inline void SubtleSignRequest::_internal_set_digest(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digest_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::_internal_mutable_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.digest_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::release_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.digest)
  return _impl_.digest_.Release();
}
inline void SubtleSignRequest::set_allocated_digest(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digest_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.digest_.IsDefault()) {
          _impl_.digest_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}

// string algorithm = 3;
inline void SubtleSignRequest::clear_algorithm() {
  _impl_.algorithm_.ClearToEmpty();
}
inline const std::string& SubtleSignRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
  return _internal_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleSignRequest::set_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}
inline std::string* SubtleSignRequest::mutable_algorithm() {
  std::string* _s = _internal_mutable_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
  return _s;
}
inline const std::string& SubtleSignRequest::_internal_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.algorithm_.Get();
}
inline void SubtleSignRequest::_internal_set_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::_internal_mutable_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::release_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
  return _impl_.algorithm_.Release();
}
inline void SubtleSignRequest::set_allocated_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.algorithm_.IsDefault()) {
          _impl_.algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}

// string key_name = 4 [json_name = "keyName"];
inline void SubtleSignRequest::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& SubtleSignRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleSignRequest::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}
inline std::string* SubtleSignRequest::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
  return _s;
}
inline const std::string& SubtleSignRequest::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void SubtleSignRequest::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleSignRequest::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
  return _impl_.key_name_.Release();
}
inline void SubtleSignRequest::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}

// -------------------------------------------------------------------

// SubtleSignResponse

// bytes signature = 1;
inline void SubtleSignResponse::clear_signature() {
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& SubtleSignResponse::signature() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignResponse.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleSignResponse::set_signature(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}
inline std::string* SubtleSignResponse::mutable_signature() {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignResponse.signature)
  return _s;
}
inline const std::string& SubtleSignResponse::_internal_signature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signature_.Get();
}
inline void SubtleSignResponse::_internal_set_signature(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.signature_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleSignResponse::_internal_mutable_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.signature_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleSignResponse::release_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignResponse.signature)
  return _impl_.signature_.Release();
}
inline void SubtleSignResponse::set_allocated_signature(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.signature_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}

// -------------------------------------------------------------------

// SubtleVerifyRequest

// string component_name = 1 [json_name = "componentName"];
inline void SubtleVerifyRequest::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& SubtleVerifyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleVerifyRequest::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}
inline std::string* SubtleVerifyRequest::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
  return _s;
}
inline const std::string& SubtleVerifyRequest::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void SubtleVerifyRequest::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
  return _impl_.component_name_.Release();
}
inline void SubtleVerifyRequest::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}

// bytes digest = 2;
inline void SubtleVerifyRequest::clear_digest() {
  _impl_.digest_.ClearToEmpty();
}
inline const std::string& SubtleVerifyRequest::digest() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
  return _internal_digest();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleVerifyRequest::set_digest(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digest_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}
inline std::string* SubtleVerifyRequest::mutable_digest() {
  std::string* _s = _internal_mutable_digest();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
  return _s;
}
inline const std::string& SubtleVerifyRequest::_internal_digest() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.digest_.Get();
}
inline void SubtleVerifyRequest::_internal_set_digest(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digest_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::_internal_mutable_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.digest_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::release_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
  return _impl_.digest_.Release();
}
inline void SubtleVerifyRequest::set_allocated_digest(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digest_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.digest_.IsDefault()) {
          _impl_.digest_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}

// string algorithm = 3;
inline void SubtleVerifyRequest::clear_algorithm() {
  _impl_.algorithm_.ClearToEmpty();
}
inline const std::string& SubtleVerifyRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
  return _internal_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleVerifyRequest::set_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}
inline std::string* SubtleVerifyRequest::mutable_algorithm() {
  std::string* _s = _internal_mutable_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
  return _s;
}
inline const std::string& SubtleVerifyRequest::_internal_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.algorithm_.Get();
}
inline void SubtleVerifyRequest::_internal_set_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::_internal_mutable_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::release_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
  return _impl_.algorithm_.Release();
}
inline void SubtleVerifyRequest::set_allocated_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.algorithm_.IsDefault()) {
          _impl_.algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}

// string key_name = 4 [json_name = "keyName"];
inline void SubtleVerifyRequest::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& SubtleVerifyRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleVerifyRequest::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}
inline std::string* SubtleVerifyRequest::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
  return _s;
}
inline const std::string& SubtleVerifyRequest::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void SubtleVerifyRequest::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
  return _impl_.key_name_.Release();
}
inline void SubtleVerifyRequest::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}

// bytes signature = 5;
inline void SubtleVerifyRequest::clear_signature() {
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& SubtleVerifyRequest::signature() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubtleVerifyRequest::set_signature(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}
inline std::string* SubtleVerifyRequest::mutable_signature() {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
  return _s;
}
inline const std::string& SubtleVerifyRequest::_internal_signature() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signature_.Get();
}
inline void SubtleVerifyRequest::_internal_set_signature(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.signature_.Set(value, GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::_internal_mutable_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.signature_.Mutable( GetArenaForAllocation());
}
inline std::string* SubtleVerifyRequest::release_signature() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
  return _impl_.signature_.Release();
}
inline void SubtleVerifyRequest::set_allocated_signature(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.signature_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}

// -------------------------------------------------------------------

// SubtleVerifyResponse

// bool valid = 1;
inline void SubtleVerifyResponse::clear_valid() {
  _impl_.valid_ = false;
}
inline bool SubtleVerifyResponse::valid() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyResponse.valid)
  return _internal_valid();
}
inline void SubtleVerifyResponse::set_valid(bool value) {
  _internal_set_valid(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyResponse.valid)
}
inline bool SubtleVerifyResponse::_internal_valid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.valid_;
}
inline void SubtleVerifyResponse::_internal_set_valid(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.valid_ = value;
}

// -------------------------------------------------------------------

// EncryptRequest

// .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
inline bool EncryptRequest::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void EncryptRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dapr::proto::runtime::v1::EncryptRequestOptions& EncryptRequest::_internal_options() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::runtime::v1::EncryptRequestOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::runtime::v1::EncryptRequestOptions&>(::dapr::proto::runtime::v1::_EncryptRequestOptions_default_instance_);
}
inline const ::dapr::proto::runtime::v1::EncryptRequestOptions& EncryptRequest::options() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequest.options)
  return _internal_options();
}
inline void EncryptRequest::unsafe_arena_set_allocated_options(::dapr::proto::runtime::v1::EncryptRequestOptions* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::dapr::proto::runtime::v1::EncryptRequestOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.EncryptRequest.options)
}
inline ::dapr::proto::runtime::v1::EncryptRequestOptions* EncryptRequest::release_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::EncryptRequestOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::runtime::v1::EncryptRequestOptions* EncryptRequest::unsafe_arena_release_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequest.options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::EncryptRequestOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::dapr::proto::runtime::v1::EncryptRequestOptions* EncryptRequest::_internal_mutable_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::EncryptRequestOptions>(GetArenaForAllocation());
    _impl_.options_ = reinterpret_cast<::dapr::proto::runtime::v1::EncryptRequestOptions*>(p);
  }
  return _impl_.options_;
}
inline ::dapr::proto::runtime::v1::EncryptRequestOptions* EncryptRequest::mutable_options() {
  ::dapr::proto::runtime::v1::EncryptRequestOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequest.options)
  return _msg;
}
inline void EncryptRequest::set_allocated_options(::dapr::proto::runtime::v1::EncryptRequestOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::dapr::proto::runtime::v1::EncryptRequestOptions*>(_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::dapr::proto::runtime::v1::EncryptRequestOptions*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.options_ = reinterpret_cast<::dapr::proto::runtime::v1::EncryptRequestOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequest.options)
}

// .dapr.proto.common.v1.StreamPayload payload = 2;
inline bool EncryptRequest::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptRequest::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::StreamPayload* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload&>(::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptRequest::payload() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequest.payload)
  return _internal_payload();
}
inline void EncryptRequest::unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.EncryptRequest.payload)
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptRequest::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::common::v1::StreamPayload* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptRequest::unsafe_arena_release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequest.payload)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::common::v1::StreamPayload* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptRequest::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaForAllocation());
    _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(p);
  }
  return _impl_.payload_;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptRequest::mutable_payload() {
  ::dapr::proto::common::v1::StreamPayload* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequest.payload)
  return _msg;
}
inline void EncryptRequest::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequest.payload)
}

// -------------------------------------------------------------------

// EncryptRequestOptions

// string component_name = 1 [json_name = "componentName"];
inline void EncryptRequestOptions::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& EncryptRequestOptions::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EncryptRequestOptions::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}
inline std::string* EncryptRequestOptions::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
  return _s;
}
inline const std::string& EncryptRequestOptions::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void EncryptRequestOptions::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
  return _impl_.component_name_.Release();
}
inline void EncryptRequestOptions::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}

// string key_name = 2 [json_name = "keyName"];
inline void EncryptRequestOptions::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& EncryptRequestOptions::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EncryptRequestOptions::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}
inline std::string* EncryptRequestOptions::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
  return _s;
}
inline const std::string& EncryptRequestOptions::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void EncryptRequestOptions::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
  return _impl_.key_name_.Release();
}
inline void EncryptRequestOptions::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}

// string key_wrap_algorithm = 3;
inline void EncryptRequestOptions::clear_key_wrap_algorithm() {
  _impl_.key_wrap_algorithm_.ClearToEmpty();
}
inline const std::string& EncryptRequestOptions::key_wrap_algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
  return _internal_key_wrap_algorithm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EncryptRequestOptions::set_key_wrap_algorithm(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_wrap_algorithm_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}
inline std::string* EncryptRequestOptions::mutable_key_wrap_algorithm() {
  std::string* _s = _internal_mutable_key_wrap_algorithm();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
  return _s;
}
inline const std::string& EncryptRequestOptions::_internal_key_wrap_algorithm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_wrap_algorithm_.Get();
}
inline void EncryptRequestOptions::_internal_set_key_wrap_algorithm(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_wrap_algorithm_.Set(value, GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::_internal_mutable_key_wrap_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_wrap_algorithm_.Mutable( GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::release_key_wrap_algorithm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
  return _impl_.key_wrap_algorithm_.Release();
}
inline void EncryptRequestOptions::set_allocated_key_wrap_algorithm(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_wrap_algorithm_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_wrap_algorithm_.IsDefault()) {
          _impl_.key_wrap_algorithm_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}

// string data_encryption_cipher = 10;
inline void EncryptRequestOptions::clear_data_encryption_cipher() {
  _impl_.data_encryption_cipher_.ClearToEmpty();
}
inline const std::string& EncryptRequestOptions::data_encryption_cipher() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
  return _internal_data_encryption_cipher();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EncryptRequestOptions::set_data_encryption_cipher(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_encryption_cipher_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}
inline std::string* EncryptRequestOptions::mutable_data_encryption_cipher() {
  std::string* _s = _internal_mutable_data_encryption_cipher();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
  return _s;
}
inline const std::string& EncryptRequestOptions::_internal_data_encryption_cipher() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_encryption_cipher_.Get();
}
inline void EncryptRequestOptions::_internal_set_data_encryption_cipher(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_encryption_cipher_.Set(value, GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::_internal_mutable_data_encryption_cipher() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_encryption_cipher_.Mutable( GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::release_data_encryption_cipher() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
  return _impl_.data_encryption_cipher_.Release();
}
inline void EncryptRequestOptions::set_allocated_data_encryption_cipher(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_encryption_cipher_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_encryption_cipher_.IsDefault()) {
          _impl_.data_encryption_cipher_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}

// bool omit_decryption_key_name = 11 [json_name = "omitDecryptionKeyName"];
inline void EncryptRequestOptions::clear_omit_decryption_key_name() {
  _impl_.omit_decryption_key_name_ = false;
}
inline bool EncryptRequestOptions::omit_decryption_key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.omit_decryption_key_name)
  return _internal_omit_decryption_key_name();
}
inline void EncryptRequestOptions::set_omit_decryption_key_name(bool value) {
  _internal_set_omit_decryption_key_name(value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.omit_decryption_key_name)
}
inline bool EncryptRequestOptions::_internal_omit_decryption_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.omit_decryption_key_name_;
}
inline void EncryptRequestOptions::_internal_set_omit_decryption_key_name(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.omit_decryption_key_name_ = value;
}

// string decryption_key_name = 12 [json_name = "decryptionKeyName"];
inline void EncryptRequestOptions::clear_decryption_key_name() {
  _impl_.decryption_key_name_.ClearToEmpty();
}
inline const std::string& EncryptRequestOptions::decryption_key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
  return _internal_decryption_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EncryptRequestOptions::set_decryption_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.decryption_key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}
inline std::string* EncryptRequestOptions::mutable_decryption_key_name() {
  std::string* _s = _internal_mutable_decryption_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
  return _s;
}
inline const std::string& EncryptRequestOptions::_internal_decryption_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.decryption_key_name_.Get();
}
inline void EncryptRequestOptions::_internal_set_decryption_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.decryption_key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::_internal_mutable_decryption_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.decryption_key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* EncryptRequestOptions::release_decryption_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
  return _impl_.decryption_key_name_.Release();
}
inline void EncryptRequestOptions::set_allocated_decryption_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.decryption_key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.decryption_key_name_.IsDefault()) {
          _impl_.decryption_key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}

// -------------------------------------------------------------------

// EncryptResponse

// .dapr.proto.common.v1.StreamPayload payload = 1;
inline bool EncryptResponse::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptResponse::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::StreamPayload* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload&>(::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptResponse::payload() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptResponse.payload)
  return _internal_payload();
}
inline void EncryptResponse::unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.EncryptResponse.payload)
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptResponse::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::StreamPayload* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptResponse::unsafe_arena_release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptResponse.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::StreamPayload* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptResponse::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaForAllocation());
    _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(p);
  }
  return _impl_.payload_;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptResponse::mutable_payload() {
  ::dapr::proto::common::v1::StreamPayload* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptResponse.payload)
  return _msg;
}
inline void EncryptResponse::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptResponse.payload)
}

// -------------------------------------------------------------------

// DecryptRequest

// .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
inline bool DecryptRequest::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void DecryptRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dapr::proto::runtime::v1::DecryptRequestOptions& DecryptRequest::_internal_options() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::runtime::v1::DecryptRequestOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::runtime::v1::DecryptRequestOptions&>(::dapr::proto::runtime::v1::_DecryptRequestOptions_default_instance_);
}
inline const ::dapr::proto::runtime::v1::DecryptRequestOptions& DecryptRequest::options() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequest.options)
  return _internal_options();
}
inline void DecryptRequest::unsafe_arena_set_allocated_options(::dapr::proto::runtime::v1::DecryptRequestOptions* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::dapr::proto::runtime::v1::DecryptRequestOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.DecryptRequest.options)
}
inline ::dapr::proto::runtime::v1::DecryptRequestOptions* DecryptRequest::release_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::DecryptRequestOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::runtime::v1::DecryptRequestOptions* DecryptRequest::unsafe_arena_release_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequest.options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::runtime::v1::DecryptRequestOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::dapr::proto::runtime::v1::DecryptRequestOptions* DecryptRequest::_internal_mutable_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::DecryptRequestOptions>(GetArenaForAllocation());
    _impl_.options_ = reinterpret_cast<::dapr::proto::runtime::v1::DecryptRequestOptions*>(p);
  }
  return _impl_.options_;
}
inline ::dapr::proto::runtime::v1::DecryptRequestOptions* DecryptRequest::mutable_options() {
  ::dapr::proto::runtime::v1::DecryptRequestOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequest.options)
  return _msg;
}
inline void DecryptRequest::set_allocated_options(::dapr::proto::runtime::v1::DecryptRequestOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::dapr::proto::runtime::v1::DecryptRequestOptions*>(_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::dapr::proto::runtime::v1::DecryptRequestOptions*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.options_ = reinterpret_cast<::dapr::proto::runtime::v1::DecryptRequestOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequest.options)
}

// .dapr.proto.common.v1.StreamPayload payload = 2;
inline bool DecryptRequest::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptRequest::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::StreamPayload* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload&>(::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptRequest::payload() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequest.payload)
  return _internal_payload();
}
inline void DecryptRequest::unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.DecryptRequest.payload)
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptRequest::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::common::v1::StreamPayload* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptRequest::unsafe_arena_release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequest.payload)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dapr::proto::common::v1::StreamPayload* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptRequest::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaForAllocation());
    _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(p);
  }
  return _impl_.payload_;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptRequest::mutable_payload() {
  ::dapr::proto::common::v1::StreamPayload* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequest.payload)
  return _msg;
}
inline void DecryptRequest::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequest.payload)
}

// -------------------------------------------------------------------

// DecryptRequestOptions

// string component_name = 1 [json_name = "componentName"];
inline void DecryptRequestOptions::clear_component_name() {
  _impl_.component_name_.ClearToEmpty();
}
inline const std::string& DecryptRequestOptions::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
  return _internal_component_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DecryptRequestOptions::set_component_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}
inline std::string* DecryptRequestOptions::mutable_component_name() {
  std::string* _s = _internal_mutable_component_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
  return _s;
}
inline const std::string& DecryptRequestOptions::_internal_component_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_name_.Get();
}
inline void DecryptRequestOptions::_internal_set_component_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.component_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DecryptRequestOptions::_internal_mutable_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.component_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DecryptRequestOptions::release_component_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
  return _impl_.component_name_.Release();
}
inline void DecryptRequestOptions::set_allocated_component_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.component_name_.IsDefault()) {
          _impl_.component_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}

// string key_name = 12 [json_name = "keyName"];
inline void DecryptRequestOptions::clear_key_name() {
  _impl_.key_name_.ClearToEmpty();
}
inline const std::string& DecryptRequestOptions::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
  return _internal_key_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DecryptRequestOptions::set_key_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}
inline std::string* DecryptRequestOptions::mutable_key_name() {
  std::string* _s = _internal_mutable_key_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
  return _s;
}
inline const std::string& DecryptRequestOptions::_internal_key_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_name_.Get();
}
inline void DecryptRequestOptions::_internal_set_key_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DecryptRequestOptions::_internal_mutable_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DecryptRequestOptions::release_key_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
  return _impl_.key_name_.Release();
}
inline void DecryptRequestOptions::set_allocated_key_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_name_.IsDefault()) {
          _impl_.key_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}

// -------------------------------------------------------------------

// DecryptResponse

// .dapr.proto.common.v1.StreamPayload payload = 1;
inline bool DecryptResponse::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptResponse::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::dapr::proto::common::v1::StreamPayload* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload&>(::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptResponse::payload() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptResponse.payload)
  return _internal_payload();
}
inline void DecryptResponse::unsafe_arena_set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.DecryptResponse.payload)
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptResponse::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::StreamPayload* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptResponse::unsafe_arena_release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptResponse.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dapr::proto::common::v1::StreamPayload* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptResponse::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaForAllocation());
    _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(p);
  }
  return _impl_.payload_;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptResponse::mutable_payload() {
  ::dapr::proto::common::v1::StreamPayload* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptResponse.payload)
  return _msg;
}
inline void DecryptResponse::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::dapr::proto::common::v1::StreamPayload*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptResponse.payload)
}

// -------------------------------------------------------------------

// GetWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void GetWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& GetWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}
inline std::string* GetWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& GetWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void GetWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* GetWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void GetWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void GetWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& GetWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}
inline std::string* GetWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& GetWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void GetWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* GetWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* GetWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void GetWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetWorkflowResponse

// string instance_id = 1 [json_name = "instanceID"];
inline void GetWorkflowResponse::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& GetWorkflowResponse::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetWorkflowResponse::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}
inline std::string* GetWorkflowResponse::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
  return _s;
}
inline const std::string& GetWorkflowResponse::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void GetWorkflowResponse::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetWorkflowResponse::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* GetWorkflowResponse::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
  return _impl_.instance_id_.Release();
}
inline void GetWorkflowResponse::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}

// string workflow_name = 2 [json_name = "workflowName"];
inline void GetWorkflowResponse::clear_workflow_name() {
  _impl_.workflow_name_.ClearToEmpty();
}
inline const std::string& GetWorkflowResponse::workflow_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
  return _internal_workflow_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetWorkflowResponse::set_workflow_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}
inline std::string* GetWorkflowResponse::mutable_workflow_name() {
  std::string* _s = _internal_mutable_workflow_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
  return _s;
}
inline const std::string& GetWorkflowResponse::_internal_workflow_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_name_.Get();
}
inline void GetWorkflowResponse::_internal_set_workflow_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetWorkflowResponse::_internal_mutable_workflow_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_name_.Mutable( GetArenaForAllocation());
}
inline std::string* GetWorkflowResponse::release_workflow_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
  return _impl_.workflow_name_.Release();
}
inline void GetWorkflowResponse::set_allocated_workflow_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_name_.IsDefault()) {
          _impl_.workflow_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}

// .google.protobuf.Timestamp created_at = 3 [json_name = "createdAt"];
inline bool GetWorkflowResponse::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::created_at() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
  return _internal_created_at();
}
inline void GetWorkflowResponse::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::mutable_created_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
  return _msg;
}
inline void GetWorkflowResponse::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
}

// .google.protobuf.Timestamp last_updated_at = 4 [json_name = "lastUpdatedAt"];
inline bool GetWorkflowResponse::has_last_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::_internal_last_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.last_updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::last_updated_at() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
  return _internal_last_updated_at();
}
inline void GetWorkflowResponse::unsafe_arena_set_allocated_last_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_at_);
  }
  _impl_.last_updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::release_last_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.last_updated_at_;
  _impl_.last_updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::unsafe_arena_release_last_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.last_updated_at_;
  _impl_.last_updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::_internal_mutable_last_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.last_updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.last_updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_updated_at_;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::mutable_last_updated_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_updated_at();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
  return _msg;
}
inline void GetWorkflowResponse::set_allocated_last_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.last_updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
}

// string runtime_status = 5 [json_name = "runtimeStatus"];
inline void GetWorkflowResponse::clear_runtime_status() {
  _impl_.runtime_status_.ClearToEmpty();
}
inline const std::string& GetWorkflowResponse::runtime_status() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
  return _internal_runtime_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetWorkflowResponse::set_runtime_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_status_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}
inline std::string* GetWorkflowResponse::mutable_runtime_status() {
  std::string* _s = _internal_mutable_runtime_status();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
  return _s;
}
inline const std::string& GetWorkflowResponse::_internal_runtime_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runtime_status_.Get();
}
inline void GetWorkflowResponse::_internal_set_runtime_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_status_.Set(value, GetArenaForAllocation());
}
inline std::string* GetWorkflowResponse::_internal_mutable_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.runtime_status_.Mutable( GetArenaForAllocation());
}
inline std::string* GetWorkflowResponse::release_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
  return _impl_.runtime_status_.Release();
}
inline void GetWorkflowResponse::set_allocated_runtime_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_status_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.runtime_status_.IsDefault()) {
          _impl_.runtime_status_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}

// map<string, string> properties = 6;
inline int GetWorkflowResponse::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int GetWorkflowResponse::properties_size() const {
  return _internal_properties_size();
}
inline void GetWorkflowResponse::clear_properties() {
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetWorkflowResponse::_internal_properties() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetWorkflowResponse::properties() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetWorkflowResponse.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* GetWorkflowResponse::_internal_mutable_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetWorkflowResponse::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetWorkflowResponse.properties)
  return _internal_mutable_properties();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StartWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void StartWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& StartWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}
inline std::string* StartWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& StartWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void StartWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void StartWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void StartWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& StartWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}
inline std::string* StartWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& StartWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void StartWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void StartWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}

// string workflow_name = 3 [json_name = "workflowName"];
inline void StartWorkflowRequest::clear_workflow_name() {
  _impl_.workflow_name_.ClearToEmpty();
}
inline const std::string& StartWorkflowRequest::workflow_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
  return _internal_workflow_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartWorkflowRequest::set_workflow_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}
inline std::string* StartWorkflowRequest::mutable_workflow_name() {
  std::string* _s = _internal_mutable_workflow_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
  return _s;
}
inline const std::string& StartWorkflowRequest::_internal_workflow_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_name_.Get();
}
inline void StartWorkflowRequest::_internal_set_workflow_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_name_.Set(value, GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::_internal_mutable_workflow_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_name_.Mutable( GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::release_workflow_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
  return _impl_.workflow_name_.Release();
}
inline void StartWorkflowRequest::set_allocated_workflow_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_name_.IsDefault()) {
          _impl_.workflow_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}

// map<string, string> options = 4;
inline int StartWorkflowRequest::_internal_options_size() const {
  return _internal_options().size();
}
inline int StartWorkflowRequest::options_size() const {
  return _internal_options_size();
}
inline void StartWorkflowRequest::clear_options() {
  _impl_.options_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& StartWorkflowRequest::_internal_options() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.options_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& StartWorkflowRequest::options() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.StartWorkflowRequest.options)
  return _internal_options();
}
inline ::google::protobuf::Map<std::string, std::string>* StartWorkflowRequest::_internal_mutable_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.options_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* StartWorkflowRequest::mutable_options() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.StartWorkflowRequest.options)
  return _internal_mutable_options();
}

// bytes input = 5;
inline void StartWorkflowRequest::clear_input() {
  _impl_.input_.ClearToEmpty();
}
inline const std::string& StartWorkflowRequest::input() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.input)
  return _internal_input();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartWorkflowRequest::set_input(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.input_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}
inline std::string* StartWorkflowRequest::mutable_input() {
  std::string* _s = _internal_mutable_input();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.input)
  return _s;
}
inline const std::string& StartWorkflowRequest::_internal_input() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.input_.Get();
}
inline void StartWorkflowRequest::_internal_set_input(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.input_.Set(value, GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::_internal_mutable_input() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.input_.Mutable( GetArenaForAllocation());
}
inline std::string* StartWorkflowRequest::release_input() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.input)
  return _impl_.input_.Release();
}
inline void StartWorkflowRequest::set_allocated_input(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.input_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.input_.IsDefault()) {
          _impl_.input_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}

// -------------------------------------------------------------------

// StartWorkflowResponse

// string instance_id = 1 [json_name = "instanceID"];
inline void StartWorkflowResponse::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& StartWorkflowResponse::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartWorkflowResponse::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}
inline std::string* StartWorkflowResponse::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
  return _s;
}
inline const std::string& StartWorkflowResponse::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void StartWorkflowResponse::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* StartWorkflowResponse::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* StartWorkflowResponse::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
  return _impl_.instance_id_.Release();
}
inline void StartWorkflowResponse::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}

// -------------------------------------------------------------------

// TerminateWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void TerminateWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& TerminateWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TerminateWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}
inline std::string* TerminateWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& TerminateWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void TerminateWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* TerminateWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* TerminateWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void TerminateWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void TerminateWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& TerminateWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TerminateWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}
inline std::string* TerminateWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& TerminateWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void TerminateWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* TerminateWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* TerminateWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void TerminateWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// PauseWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void PauseWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& PauseWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PauseWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}
inline std::string* PauseWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& PauseWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void PauseWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PauseWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* PauseWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void PauseWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void PauseWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& PauseWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PauseWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}
inline std::string* PauseWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& PauseWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void PauseWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* PauseWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* PauseWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void PauseWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// ResumeWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void ResumeWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& ResumeWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResumeWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}
inline std::string* ResumeWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& ResumeWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void ResumeWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ResumeWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ResumeWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void ResumeWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void ResumeWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& ResumeWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResumeWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}
inline std::string* ResumeWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& ResumeWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void ResumeWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* ResumeWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* ResumeWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void ResumeWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// RaiseEventWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void RaiseEventWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& RaiseEventWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RaiseEventWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}
inline std::string* RaiseEventWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& RaiseEventWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void RaiseEventWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void RaiseEventWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void RaiseEventWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& RaiseEventWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RaiseEventWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}
inline std::string* RaiseEventWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& RaiseEventWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void RaiseEventWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void RaiseEventWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}

// string event_name = 3 [json_name = "eventName"];
inline void RaiseEventWorkflowRequest::clear_event_name() {
  _impl_.event_name_.ClearToEmpty();
}
inline const std::string& RaiseEventWorkflowRequest::event_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
  return _internal_event_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RaiseEventWorkflowRequest::set_event_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}
inline std::string* RaiseEventWorkflowRequest::mutable_event_name() {
  std::string* _s = _internal_mutable_event_name();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
  return _s;
}
inline const std::string& RaiseEventWorkflowRequest::_internal_event_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.event_name_.Get();
}
inline void RaiseEventWorkflowRequest::_internal_set_event_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_name_.Set(value, GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::_internal_mutable_event_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.event_name_.Mutable( GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::release_event_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
  return _impl_.event_name_.Release();
}
inline void RaiseEventWorkflowRequest::set_allocated_event_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.event_name_.IsDefault()) {
          _impl_.event_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}

// bytes event_data = 4;
inline void RaiseEventWorkflowRequest::clear_event_data() {
  _impl_.event_data_.ClearToEmpty();
}
inline const std::string& RaiseEventWorkflowRequest::event_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
  return _internal_event_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RaiseEventWorkflowRequest::set_event_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}
inline std::string* RaiseEventWorkflowRequest::mutable_event_data() {
  std::string* _s = _internal_mutable_event_data();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
  return _s;
}
inline const std::string& RaiseEventWorkflowRequest::_internal_event_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.event_data_.Get();
}
inline void RaiseEventWorkflowRequest::_internal_set_event_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.event_data_.Set(value, GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::_internal_mutable_event_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.event_data_.Mutable( GetArenaForAllocation());
}
inline std::string* RaiseEventWorkflowRequest::release_event_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
  return _impl_.event_data_.Release();
}
inline void RaiseEventWorkflowRequest::set_allocated_event_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.event_data_.IsDefault()) {
          _impl_.event_data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}

// -------------------------------------------------------------------

// PurgeWorkflowRequest

// string instance_id = 1 [json_name = "instanceID"];
inline void PurgeWorkflowRequest::clear_instance_id() {
  _impl_.instance_id_.ClearToEmpty();
}
inline const std::string& PurgeWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
  return _internal_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PurgeWorkflowRequest::set_instance_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}
inline std::string* PurgeWorkflowRequest::mutable_instance_id() {
  std::string* _s = _internal_mutable_instance_id();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
  return _s;
}
inline const std::string& PurgeWorkflowRequest::_internal_instance_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_id_.Get();
}
inline void PurgeWorkflowRequest::_internal_set_instance_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_id_.Set(value, GetArenaForAllocation());
}
inline std::string* PurgeWorkflowRequest::_internal_mutable_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.instance_id_.Mutable( GetArenaForAllocation());
}
inline std::string* PurgeWorkflowRequest::release_instance_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
  return _impl_.instance_id_.Release();
}
inline void PurgeWorkflowRequest::set_allocated_instance_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instance_id_.IsDefault()) {
          _impl_.instance_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}

// string workflow_component = 2 [json_name = "workflowComponent"];
inline void PurgeWorkflowRequest::clear_workflow_component() {
  _impl_.workflow_component_.ClearToEmpty();
}
inline const std::string& PurgeWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
  return _internal_workflow_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PurgeWorkflowRequest::set_workflow_component(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}
inline std::string* PurgeWorkflowRequest::mutable_workflow_component() {
  std::string* _s = _internal_mutable_workflow_component();
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
  return _s;
}
inline const std::string& PurgeWorkflowRequest::_internal_workflow_component() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.workflow_component_.Get();
}
inline void PurgeWorkflowRequest::_internal_set_workflow_component(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.workflow_component_.Set(value, GetArenaForAllocation());
}
inline std::string* PurgeWorkflowRequest::_internal_mutable_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.workflow_component_.Mutable( GetArenaForAllocation());
}
inline std::string* PurgeWorkflowRequest::release_workflow_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
  return _impl_.workflow_component_.Release();
}
inline void PurgeWorkflowRequest::set_allocated_workflow_component(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.workflow_component_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.workflow_component_.IsDefault()) {
          _impl_.workflow_component_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// ShutdownRequest

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus>() {
  return ::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus_descriptor();
}
template <>
struct is_proto_enum<::dapr::proto::runtime::v1::UnlockResponse_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::dapr::proto::runtime::v1::UnlockResponse_Status>() {
  return ::dapr::proto::runtime::v1::UnlockResponse_Status_descriptor();
}
template <>
struct is_proto_enum<::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat>() {
  return ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_2epb_2eh
