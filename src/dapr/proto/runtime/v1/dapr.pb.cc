// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/runtime/v1/dapr.proto

#include "dapr/proto/runtime/v1/dapr.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkPublishRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkPublishRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkStateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActorStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBulkSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBulkSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBulkStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetWorkflowResponse_PropertiesEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeActorRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeBindingRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeBindingResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PublishEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PubsubSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SecretResponse_SecretsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartWorkflowRequest_OptionsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransactionalActorStateOperation_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
class InvokeServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeServiceRequest> _instance;
} _InvokeServiceRequest_default_instance_;
class GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStateRequest_MetadataEntry_DoNotUse> _instance;
} _GetStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStateRequest> _instance;
} _GetStateRequest_default_instance_;
class GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkStateRequest_MetadataEntry_DoNotUse> _instance;
} _GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkStateRequest> _instance;
} _GetBulkStateRequest_default_instance_;
class GetBulkStateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkStateResponse> _instance;
} _GetBulkStateResponse_default_instance_;
class BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkStateItem_MetadataEntry_DoNotUse> _instance;
} _BulkStateItem_MetadataEntry_DoNotUse_default_instance_;
class BulkStateItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkStateItem> _instance;
} _BulkStateItem_default_instance_;
class GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStateResponse_MetadataEntry_DoNotUse> _instance;
} _GetStateResponse_MetadataEntry_DoNotUse_default_instance_;
class GetStateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStateResponse> _instance;
} _GetStateResponse_default_instance_;
class DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteStateRequest_MetadataEntry_DoNotUse> _instance;
} _DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_;
class DeleteStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteStateRequest> _instance;
} _DeleteStateRequest_default_instance_;
class DeleteBulkStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteBulkStateRequest> _instance;
} _DeleteBulkStateRequest_default_instance_;
class SaveStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveStateRequest> _instance;
} _SaveStateRequest_default_instance_;
class QueryStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStateRequest_MetadataEntry_DoNotUse> _instance;
} _QueryStateRequest_MetadataEntry_DoNotUse_default_instance_;
class QueryStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStateRequest> _instance;
} _QueryStateRequest_default_instance_;
class QueryStateItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStateItem> _instance;
} _QueryStateItem_default_instance_;
class QueryStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStateResponse_MetadataEntry_DoNotUse> _instance;
} _QueryStateResponse_MetadataEntry_DoNotUse_default_instance_;
class QueryStateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryStateResponse> _instance;
} _QueryStateResponse_default_instance_;
class PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublishEventRequest_MetadataEntry_DoNotUse> _instance;
} _PublishEventRequest_MetadataEntry_DoNotUse_default_instance_;
class PublishEventRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublishEventRequest> _instance;
} _PublishEventRequest_default_instance_;
class BulkPublishRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkPublishRequest_MetadataEntry_DoNotUse> _instance;
} _BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_;
class BulkPublishRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkPublishRequest> _instance;
} _BulkPublishRequest_default_instance_;
class BulkPublishRequestEntry_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkPublishRequestEntry_MetadataEntry_DoNotUse> _instance;
} _BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_;
class BulkPublishRequestEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkPublishRequestEntry> _instance;
} _BulkPublishRequestEntry_default_instance_;
class BulkPublishResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkPublishResponse> _instance;
} _BulkPublishResponse_default_instance_;
class BulkPublishResponseFailedEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkPublishResponseFailedEntry> _instance;
} _BulkPublishResponseFailedEntry_default_instance_;
class SubscribeTopicEventsRequestAlpha1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeTopicEventsRequestAlpha1> _instance;
  const ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1* initial_request_;
  const ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1* event_processed_;
} _SubscribeTopicEventsRequestAlpha1_default_instance_;
class SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse> _instance;
} _SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_default_instance_;
class SubscribeTopicEventsRequestInitialAlpha1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeTopicEventsRequestInitialAlpha1> _instance;
} _SubscribeTopicEventsRequestInitialAlpha1_default_instance_;
class SubscribeTopicEventsRequestProcessedAlpha1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeTopicEventsRequestProcessedAlpha1> _instance;
} _SubscribeTopicEventsRequestProcessedAlpha1_default_instance_;
class SubscribeTopicEventsResponseAlpha1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeTopicEventsResponseAlpha1> _instance;
  const ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1* initial_response_;
  const ::dapr::proto::runtime::v1::TopicEventRequest* event_message_;
} _SubscribeTopicEventsResponseAlpha1_default_instance_;
class SubscribeTopicEventsResponseInitialAlpha1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeTopicEventsResponseInitialAlpha1> _instance;
} _SubscribeTopicEventsResponseInitialAlpha1_default_instance_;
class InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeBindingRequest_MetadataEntry_DoNotUse> _instance;
} _InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeBindingRequest> _instance;
} _InvokeBindingRequest_default_instance_;
class InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeBindingResponse_MetadataEntry_DoNotUse> _instance;
} _InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeBindingResponse> _instance;
} _InvokeBindingResponse_default_instance_;
class GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretRequest_MetadataEntry_DoNotUse> _instance;
} _GetSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetSecretRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretRequest> _instance;
} _GetSecretRequest_default_instance_;
class GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretResponse_DataEntry_DoNotUse> _instance;
} _GetSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetSecretResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretResponse> _instance;
} _GetSecretResponse_default_instance_;
class GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkSecretRequest_MetadataEntry_DoNotUse> _instance;
} _GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkSecretRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkSecretRequest> _instance;
} _GetBulkSecretRequest_default_instance_;
class SecretResponse_SecretsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecretResponse_SecretsEntry_DoNotUse> _instance;
} _SecretResponse_SecretsEntry_DoNotUse_default_instance_;
class SecretResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecretResponse> _instance;
} _SecretResponse_default_instance_;
class GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkSecretResponse_DataEntry_DoNotUse> _instance;
} _GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetBulkSecretResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBulkSecretResponse> _instance;
} _GetBulkSecretResponse_default_instance_;
class TransactionalStateOperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionalStateOperation> _instance;
} _TransactionalStateOperation_default_instance_;
class ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse> _instance;
} _ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_;
class ExecuteStateTransactionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteStateTransactionRequest> _instance;
} _ExecuteStateTransactionRequest_default_instance_;
class RegisterActorTimerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterActorTimerRequest> _instance;
} _RegisterActorTimerRequest_default_instance_;
class UnregisterActorTimerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnregisterActorTimerRequest> _instance;
} _UnregisterActorTimerRequest_default_instance_;
class RegisterActorReminderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterActorReminderRequest> _instance;
} _RegisterActorReminderRequest_default_instance_;
class UnregisterActorReminderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnregisterActorReminderRequest> _instance;
} _UnregisterActorReminderRequest_default_instance_;
class GetActorStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActorStateRequest> _instance;
} _GetActorStateRequest_default_instance_;
class GetActorStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActorStateResponse_MetadataEntry_DoNotUse> _instance;
} _GetActorStateResponse_MetadataEntry_DoNotUse_default_instance_;
class GetActorStateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActorStateResponse> _instance;
} _GetActorStateResponse_default_instance_;
class ExecuteActorStateTransactionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExecuteActorStateTransactionRequest> _instance;
} _ExecuteActorStateTransactionRequest_default_instance_;
class TransactionalActorStateOperation_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionalActorStateOperation_MetadataEntry_DoNotUse> _instance;
} _TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_;
class TransactionalActorStateOperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionalActorStateOperation> _instance;
} _TransactionalActorStateOperation_default_instance_;
class InvokeActorRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeActorRequest_MetadataEntry_DoNotUse> _instance;
} _InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeActorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeActorRequest> _instance;
} _InvokeActorRequest_default_instance_;
class InvokeActorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeActorResponse> _instance;
} _InvokeActorResponse_default_instance_;
class GetMetadataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMetadataRequest> _instance;
} _GetMetadataRequest_default_instance_;
class GetMetadataResponse_ExtendedMetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMetadataResponse_ExtendedMetadataEntry_DoNotUse> _instance;
} _GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_;
class GetMetadataResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMetadataResponse> _instance;
} _GetMetadataResponse_default_instance_;
class ActorRuntimeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActorRuntime> _instance;
} _ActorRuntime_default_instance_;
class ActiveActorsCountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActiveActorsCount> _instance;
} _ActiveActorsCount_default_instance_;
class RegisteredComponentsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisteredComponents> _instance;
} _RegisteredComponents_default_instance_;
class MetadataHTTPEndpointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetadataHTTPEndpoint> _instance;
} _MetadataHTTPEndpoint_default_instance_;
class AppConnectionPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppConnectionProperties> _instance;
} _AppConnectionProperties_default_instance_;
class AppConnectionHealthPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppConnectionHealthProperties> _instance;
} _AppConnectionHealthProperties_default_instance_;
class PubsubSubscription_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PubsubSubscription_MetadataEntry_DoNotUse> _instance;
} _PubsubSubscription_MetadataEntry_DoNotUse_default_instance_;
class PubsubSubscriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PubsubSubscription> _instance;
} _PubsubSubscription_default_instance_;
class PubsubSubscriptionRulesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PubsubSubscriptionRules> _instance;
} _PubsubSubscriptionRules_default_instance_;
class PubsubSubscriptionRuleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PubsubSubscriptionRule> _instance;
} _PubsubSubscriptionRule_default_instance_;
class SetMetadataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetMetadataRequest> _instance;
} _SetMetadataRequest_default_instance_;
class GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigurationRequest_MetadataEntry_DoNotUse> _instance;
} _GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
class GetConfigurationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigurationRequest> _instance;
} _GetConfigurationRequest_default_instance_;
class GetConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigurationResponse_ItemsEntry_DoNotUse> _instance;
} _GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
class GetConfigurationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigurationResponse> _instance;
} _GetConfigurationResponse_default_instance_;
class SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeConfigurationRequest_MetadataEntry_DoNotUse> _instance;
} _SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
class SubscribeConfigurationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeConfigurationRequest> _instance;
} _SubscribeConfigurationRequest_default_instance_;
class UnsubscribeConfigurationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnsubscribeConfigurationRequest> _instance;
} _UnsubscribeConfigurationRequest_default_instance_;
class SubscribeConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeConfigurationResponse_ItemsEntry_DoNotUse> _instance;
} _SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
class SubscribeConfigurationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeConfigurationResponse> _instance;
} _SubscribeConfigurationResponse_default_instance_;
class UnsubscribeConfigurationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnsubscribeConfigurationResponse> _instance;
} _UnsubscribeConfigurationResponse_default_instance_;
class TryLockRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TryLockRequest> _instance;
} _TryLockRequest_default_instance_;
class TryLockResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TryLockResponse> _instance;
} _TryLockResponse_default_instance_;
class UnlockRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnlockRequest> _instance;
} _UnlockRequest_default_instance_;
class UnlockResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnlockResponse> _instance;
} _UnlockResponse_default_instance_;
class SubtleGetKeyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleGetKeyRequest> _instance;
} _SubtleGetKeyRequest_default_instance_;
class SubtleGetKeyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleGetKeyResponse> _instance;
} _SubtleGetKeyResponse_default_instance_;
class SubtleEncryptRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleEncryptRequest> _instance;
} _SubtleEncryptRequest_default_instance_;
class SubtleEncryptResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleEncryptResponse> _instance;
} _SubtleEncryptResponse_default_instance_;
class SubtleDecryptRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleDecryptRequest> _instance;
} _SubtleDecryptRequest_default_instance_;
class SubtleDecryptResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleDecryptResponse> _instance;
} _SubtleDecryptResponse_default_instance_;
class SubtleWrapKeyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleWrapKeyRequest> _instance;
} _SubtleWrapKeyRequest_default_instance_;
class SubtleWrapKeyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleWrapKeyResponse> _instance;
} _SubtleWrapKeyResponse_default_instance_;
class SubtleUnwrapKeyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleUnwrapKeyRequest> _instance;
} _SubtleUnwrapKeyRequest_default_instance_;
class SubtleUnwrapKeyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleUnwrapKeyResponse> _instance;
} _SubtleUnwrapKeyResponse_default_instance_;
class SubtleSignRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleSignRequest> _instance;
} _SubtleSignRequest_default_instance_;
class SubtleSignResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleSignResponse> _instance;
} _SubtleSignResponse_default_instance_;
class SubtleVerifyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleVerifyRequest> _instance;
} _SubtleVerifyRequest_default_instance_;
class SubtleVerifyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubtleVerifyResponse> _instance;
} _SubtleVerifyResponse_default_instance_;
class EncryptRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EncryptRequest> _instance;
} _EncryptRequest_default_instance_;
class EncryptRequestOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EncryptRequestOptions> _instance;
} _EncryptRequestOptions_default_instance_;
class EncryptResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EncryptResponse> _instance;
} _EncryptResponse_default_instance_;
class DecryptRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DecryptRequest> _instance;
} _DecryptRequest_default_instance_;
class DecryptRequestOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DecryptRequestOptions> _instance;
} _DecryptRequestOptions_default_instance_;
class DecryptResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DecryptResponse> _instance;
} _DecryptResponse_default_instance_;
class GetWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkflowRequest> _instance;
} _GetWorkflowRequest_default_instance_;
class GetWorkflowResponse_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkflowResponse_PropertiesEntry_DoNotUse> _instance;
} _GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_;
class GetWorkflowResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetWorkflowResponse> _instance;
} _GetWorkflowResponse_default_instance_;
class StartWorkflowRequest_OptionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartWorkflowRequest_OptionsEntry_DoNotUse> _instance;
} _StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_;
class StartWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartWorkflowRequest> _instance;
} _StartWorkflowRequest_default_instance_;
class StartWorkflowResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartWorkflowResponse> _instance;
} _StartWorkflowResponse_default_instance_;
class TerminateWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TerminateWorkflowRequest> _instance;
} _TerminateWorkflowRequest_default_instance_;
class PauseWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseWorkflowRequest> _instance;
} _PauseWorkflowRequest_default_instance_;
class ResumeWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResumeWorkflowRequest> _instance;
} _ResumeWorkflowRequest_default_instance_;
class RaiseEventWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RaiseEventWorkflowRequest> _instance;
} _RaiseEventWorkflowRequest_default_instance_;
class PurgeWorkflowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PurgeWorkflowRequest> _instance;
} _PurgeWorkflowRequest_default_instance_;
class ShutdownRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShutdownRequest> _instance;
} _ShutdownRequest_default_instance_;
class JobDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Job> _instance;
} _Job_default_instance_;
class ScheduleJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScheduleJobRequest> _instance;
} _ScheduleJobRequest_default_instance_;
class ScheduleJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScheduleJobResponse> _instance;
} _ScheduleJobResponse_default_instance_;
class GetJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetJobRequest> _instance;
} _GetJobRequest_default_instance_;
class GetJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetJobResponse> _instance;
} _GetJobResponse_default_instance_;
class DeleteJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteJobRequest> _instance;
} _DeleteJobRequest_default_instance_;
class DeleteJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteJobResponse> _instance;
} _DeleteJobResponse_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
static void InitDefaultsscc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ActiveActorsCount_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ActiveActorsCount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ActiveActorsCount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ActorRuntime_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ActorRuntime();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ActorRuntime::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_AppConnectionHealthProperties_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::AppConnectionHealthProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::AppConnectionHealthProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_AppConnectionProperties_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::AppConnectionProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::AppConnectionProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_BulkPublishRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkPublishRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkPublishRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BulkPublishRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BulkPublishRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_BulkPublishRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_BulkPublishRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_BulkPublishRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkPublishRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulkPublishRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkPublishRequestEntry_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkPublishRequestEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_BulkPublishRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_BulkPublishRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkPublishRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulkPublishRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_BulkPublishResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkPublishResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkPublishResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BulkPublishResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BulkPublishResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BulkPublishResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkPublishResponseFailedEntry_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkStateItem_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkStateItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BulkStateItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_BulkStateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_BulkStateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkStateItem_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkStateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulkStateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_DecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DecryptRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DecryptRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DecryptRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DecryptRequestOptions_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DecryptRequestOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DecryptRequestOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_DecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DecryptResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DecryptResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DecryptResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_DeleteBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DeleteBulkStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DeleteBulkStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DeleteBulkStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_DeleteJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DeleteJobRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DeleteJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DeleteJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_DeleteJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DeleteJobResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DeleteJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DeleteJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_DeleteStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DeleteStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DeleteStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::DeleteStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DeleteStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_DeleteStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_Etag_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
      &scc_info_StateOptions_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,
      &scc_info_DeleteStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_DeleteStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_EncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_EncryptRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::EncryptRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::EncryptRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_EncryptRequestOptions_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::EncryptRequestOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::EncryptRequestOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_EncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_EncryptResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::EncryptResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::EncryptResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_StreamPayload_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteActorStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ExecuteActorStateTransactionRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExecuteActorStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExecuteActorStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ExecuteStateTransactionRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExecuteStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ExecuteStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetActorStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetActorStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetActorStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetActorStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActorStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetActorStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetActorStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetActorStateResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetActorStateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetActorStateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetActorStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetActorStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetActorStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetActorStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetActorStateResponse_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActorStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetActorStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetBulkSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkSecretRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkSecretRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetBulkSecretRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBulkSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBulkSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetBulkSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetBulkSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBulkSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBulkSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetBulkSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkSecretResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkSecretResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetBulkSecretResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBulkSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBulkSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetBulkSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetBulkSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBulkSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBulkSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetBulkStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetBulkStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetBulkStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBulkStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBulkStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetBulkStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetBulkStateResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetBulkStateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetBulkStateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBulkStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBulkStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetConfigurationRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetConfigurationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetConfigurationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetConfigurationResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetConfigurationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetConfigurationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_GetJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetJobRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetJobResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetMetadataRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetMetadataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetMetadataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetMetadataResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetMetadataResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetMetadataResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetMetadataResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_GetMetadataResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, 0, InitDefaultsscc_info_GetMetadataResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetSecretRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetSecretRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetSecretRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetSecretRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetSecretResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetSecretResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetSecretResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetSecretResponse_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetStateRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetStateResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetStateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetStateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_GetStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetStateResponse_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_GetWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetWorkflowResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetWorkflowResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::GetWorkflowResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_GetWorkflowResponse_PropertiesEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_GetWorkflowResponse_PropertiesEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetWorkflowResponse_PropertiesEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetWorkflowResponse_PropertiesEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeActorRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeActorRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeActorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::InvokeActorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InvokeActorRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InvokeActorRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_InvokeActorRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_InvokeActorRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeActorRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeActorRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeActorResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeActorResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeActorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::InvokeActorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeActorResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeActorResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeBindingRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeBindingRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeBindingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::InvokeBindingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InvokeBindingRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InvokeBindingRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_InvokeBindingRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_InvokeBindingRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeBindingRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeBindingRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeBindingResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeBindingResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeBindingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::InvokeBindingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InvokeBindingResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InvokeBindingResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_InvokeBindingResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_InvokeBindingResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeBindingResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeBindingResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeServiceRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_InvokeServiceRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::InvokeServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::InvokeServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InvokeServiceRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InvokeServiceRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_InvokeRequest_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_Job_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::Job();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::Job::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_MetadataHTTPEndpoint_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::MetadataHTTPEndpoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::MetadataHTTPEndpoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_PauseWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PauseWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PauseWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::PauseWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PauseWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PauseWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_PublishEventRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PublishEventRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PublishEventRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::PublishEventRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublishEventRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PublishEventRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_PublishEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_PublishEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PublishEventRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PublishEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PublishEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PubsubSubscription_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PubsubSubscription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::PubsubSubscription::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_PubsubSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_PubsubSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PubsubSubscription_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PubsubSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PubsubSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PubsubSubscriptionRule_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PubsubSubscriptionRule();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::PubsubSubscriptionRule::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PubsubSubscriptionRules_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PubsubSubscriptionRules();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_PurgeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_PurgeWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::PurgeWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::PurgeWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PurgeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PurgeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_QueryStateItem_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::QueryStateItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::QueryStateItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_QueryStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_QueryStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::QueryStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::QueryStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueryStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueryStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_QueryStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_QueryStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_QueryStateRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_QueryStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_QueryStateResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::QueryStateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::QueryStateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_QueryStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_QueryStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_QueryStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_QueryStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_QueryStateResponse_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_RaiseEventWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_RaiseEventWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RaiseEventWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RaiseEventWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_RegisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_RegisterActorReminderRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::RegisterActorReminderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::RegisterActorReminderRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_RegisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_RegisterActorTimerRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::RegisterActorTimerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::RegisterActorTimerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_RegisteredComponents_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::RegisteredComponents();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::RegisteredComponents::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_ResumeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ResumeWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ResumeWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ResumeWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResumeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResumeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SaveStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SaveStateRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SaveStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SaveStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SaveStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SaveStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_ScheduleJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ScheduleJobRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ScheduleJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ScheduleJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ScheduleJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ScheduleJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_ScheduleJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ScheduleJobResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ScheduleJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ScheduleJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScheduleJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScheduleJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SecretResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SecretResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SecretResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SecretResponse_SecretsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_SecretResponse_SecretsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SecretResponse_SecretsEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SecretResponse_SecretsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SecretResponse_SecretsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SetMetadataRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SetMetadataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SetMetadataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_ShutdownRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ShutdownRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ShutdownRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ShutdownRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShutdownRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShutdownRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_StartWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_StartWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::StartWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::StartWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StartWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StartWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_StartWorkflowRequest_OptionsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_StartWorkflowRequest_OptionsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartWorkflowRequest_OptionsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartWorkflowRequest_OptionsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_StartWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_StartWorkflowResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::StartWorkflowResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::StartWorkflowResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeConfigurationRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeConfigurationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeConfigurationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeConfigurationResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeConfigurationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeConfigurationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_ConfigurationItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeTopicEventsRequestAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestAlpha1_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SubscribeTopicEventsRequestAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SubscribeTopicEventsRequestAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestInitialAlpha1_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestProcessedAlpha1_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeTopicEventsResponseAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeTopicEventsResponseAlpha1_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SubscribeTopicEventsResponseAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SubscribeTopicEventsResponseAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
      &scc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubscribeTopicEventsResponseInitialAlpha1_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleDecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleDecryptRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleDecryptRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleDecryptRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleDecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleDecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleDecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleDecryptResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleDecryptResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleDecryptResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleDecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleDecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleEncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleEncryptRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleEncryptRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleEncryptRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleEncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleEncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleEncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleEncryptResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleEncryptResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleEncryptResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleEncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleEncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleGetKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleGetKeyRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleGetKeyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleGetKeyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleGetKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleGetKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleGetKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleGetKeyResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleGetKeyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleGetKeyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleGetKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleGetKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleSignRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleSignRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleSignRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleSignRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleSignRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleSignRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleSignResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleSignResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleSignResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleSignResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleSignResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleSignResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleUnwrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleUnwrapKeyRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleUnwrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleUnwrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleUnwrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleUnwrapKeyResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleUnwrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleUnwrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleVerifyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleVerifyRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleVerifyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleVerifyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleVerifyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleVerifyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleVerifyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleVerifyResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleVerifyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleVerifyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleVerifyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleVerifyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleWrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleWrapKeyRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleWrapKeyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleWrapKeyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleWrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleWrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_SubtleWrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_SubtleWrapKeyResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::SubtleWrapKeyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::SubtleWrapKeyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubtleWrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubtleWrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_TerminateWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TerminateWorkflowRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TerminateWorkflowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TerminateWorkflowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TerminateWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TerminateWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TransactionalActorStateOperation_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TransactionalActorStateOperation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_TransactionalActorStateOperation_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,}};

static void InitDefaultsscc_info_TransactionalActorStateOperation_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransactionalActorStateOperation_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TransactionalActorStateOperation_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TransactionalStateOperation_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TransactionalStateOperation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TransactionalStateOperation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {
      &scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_TryLockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TryLockRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TryLockRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TryLockRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryLockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TryLockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_TryLockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TryLockResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TryLockResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TryLockResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryLockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TryLockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_UnlockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_UnlockRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::UnlockRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::UnlockRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnlockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnlockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_UnlockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_UnlockResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::UnlockResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::UnlockResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnlockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnlockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_UnregisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_UnregisterActorReminderRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::UnregisterActorReminderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::UnregisterActorReminderRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnregisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnregisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_UnregisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_UnregisterActorTimerRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::UnregisterActorTimerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::UnregisterActorTimerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnregisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnregisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_UnsubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_UnsubscribeConfigurationRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnsubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnsubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static void InitDefaultsscc_info_UnsubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_UnsubscribeConfigurationResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnsubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnsubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[130];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeServiceRequest, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeServiceRequest, message_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest, consistency_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest, parallelism_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkStateResponse, items_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem, error_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkStateItem, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetStateResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest, options_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteStateRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteBulkStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteBulkStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteBulkStateRequest, states_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SaveStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SaveStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SaveStateRequest, states_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest, query_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateItem, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateItem, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateItem, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateItem, error_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse, results_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse, token_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::QueryStateResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest, data_content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PublishEventRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest, entries_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry, entry_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry, event_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry, content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishRequestEntry, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishResponse, failedentries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry, entry_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1DefaultTypeInternal, initial_request_),
  offsetof(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1DefaultTypeInternal, event_processed_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, subscribe_topic_events_request_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1, dead_letter_topic_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1DefaultTypeInternal, initial_response_),
  offsetof(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1DefaultTypeInternal, event_message_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, subscribe_topic_events_response_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingRequest, operation_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeBindingResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetSecretResponse, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SecretResponse, secrets_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetBulkSecretResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalStateOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalStateOperation, operationtype_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalStateOperation, request_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, storename_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, operations_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, due_time_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, period_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, callback_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorTimerRequest, ttl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorTimerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorTimerRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorTimerRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorTimerRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, due_time_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, period_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisterActorReminderRequest, ttl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorReminderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorReminderRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorReminderRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnregisterActorReminderRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetActorStateResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, operations_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation, operationtype_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation, value_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TransactionalActorStateOperation, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest, actor_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest, actor_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest, method_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::InvokeActorResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, active_actors_count_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, registered_components_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, extended_metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, subscriptions_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, http_endpoints_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, app_connection_properties_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, runtime_version_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, enabled_features_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetMetadataResponse, actor_runtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActorRuntime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActorRuntime, runtime_status_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActorRuntime, active_actors_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActorRuntime, host_ready_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActorRuntime, placement_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActiveActorsCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActiveActorsCount, type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ActiveActorsCount, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisteredComponents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisteredComponents, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisteredComponents, type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisteredComponents, version_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RegisteredComponents, capabilities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::MetadataHTTPEndpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::MetadataHTTPEndpoint, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionProperties, port_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionProperties, protocol_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionProperties, channel_address_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionProperties, max_concurrency_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionProperties, health_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionHealthProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionHealthProperties, health_check_path_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionHealthProperties, health_probe_interval_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionHealthProperties, health_probe_timeout_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::AppConnectionHealthProperties, health_threshold_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, rules_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, dead_letter_topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscription, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscriptionRules, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscriptionRules, rules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscriptionRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscriptionRule, match_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PubsubSubscriptionRule, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SetMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SetMetadataRequest, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SetMetadataRequest, value_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetConfigurationResponse, items_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubscribeConfigurationResponse, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse, ok_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockRequest, resource_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockRequest, lock_owner_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockRequest, expiry_in_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TryLockResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnlockRequest, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnlockRequest, resource_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnlockRequest, lock_owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::UnlockResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyRequest, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyRequest, format_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyResponse, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleGetKeyResponse, public_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, plaintext_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, nonce_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptRequest, associated_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptResponse, ciphertext_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleEncryptResponse, tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, ciphertext_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, nonce_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, tag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptRequest, associated_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleDecryptResponse, plaintext_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, plaintext_key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, nonce_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyRequest, associated_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyResponse, wrapped_key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleWrapKeyResponse, tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, wrapped_key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, nonce_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, tag_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, associated_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse, plaintext_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignRequest, digest_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignRequest, algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignRequest, key_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleSignResponse, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyRequest, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyRequest, digest_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyRequest, algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyRequest, key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyRequest, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::SubtleVerifyResponse, valid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequest, options_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequest, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, key_wrap_algorithm_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, data_encryption_cipher_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, omit_decryption_key_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptRequestOptions, decryption_key_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::EncryptResponse, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptRequest, options_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptRequest, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptRequestOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptRequestOptions, component_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptRequestOptions, key_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DecryptResponse, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowRequest, workflow_component_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, workflow_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, created_at_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, last_updated_at_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, runtime_status_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetWorkflowResponse, properties_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest, workflow_component_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest, workflow_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest, options_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowRequest, input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::StartWorkflowResponse, instance_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TerminateWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TerminateWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TerminateWorkflowRequest, workflow_component_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PauseWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PauseWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PauseWorkflowRequest, workflow_component_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ResumeWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ResumeWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ResumeWorkflowRequest, workflow_component_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, workflow_component_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, event_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, event_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PurgeWorkflowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PurgeWorkflowRequest, instance_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::PurgeWorkflowRequest, workflow_component_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ShutdownRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, schedule_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, repeats_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, due_time_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, ttl_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::Job, data_),
  ~0u,
  0,
  3,
  1,
  2,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ScheduleJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ScheduleJobRequest, job_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ScheduleJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetJobRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::GetJobResponse, job_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteJobRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::DeleteJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dapr::proto::runtime::v1::InvokeServiceRequest)},
  { 7, 14, sizeof(::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse)},
  { 16, -1, sizeof(::dapr::proto::runtime::v1::GetStateRequest)},
  { 25, 32, sizeof(::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse)},
  { 34, -1, sizeof(::dapr::proto::runtime::v1::GetBulkStateRequest)},
  { 43, -1, sizeof(::dapr::proto::runtime::v1::GetBulkStateResponse)},
  { 49, 56, sizeof(::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse)},
  { 58, -1, sizeof(::dapr::proto::runtime::v1::BulkStateItem)},
  { 68, 75, sizeof(::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse)},
  { 77, -1, sizeof(::dapr::proto::runtime::v1::GetStateResponse)},
  { 85, 92, sizeof(::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse)},
  { 94, -1, sizeof(::dapr::proto::runtime::v1::DeleteStateRequest)},
  { 104, -1, sizeof(::dapr::proto::runtime::v1::DeleteBulkStateRequest)},
  { 111, -1, sizeof(::dapr::proto::runtime::v1::SaveStateRequest)},
  { 118, 125, sizeof(::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse)},
  { 127, -1, sizeof(::dapr::proto::runtime::v1::QueryStateRequest)},
  { 135, -1, sizeof(::dapr::proto::runtime::v1::QueryStateItem)},
  { 144, 151, sizeof(::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse)},
  { 153, -1, sizeof(::dapr::proto::runtime::v1::QueryStateResponse)},
  { 161, 168, sizeof(::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse)},
  { 170, -1, sizeof(::dapr::proto::runtime::v1::PublishEventRequest)},
  { 180, 187, sizeof(::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse)},
  { 189, -1, sizeof(::dapr::proto::runtime::v1::BulkPublishRequest)},
  { 198, 205, sizeof(::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse)},
  { 207, -1, sizeof(::dapr::proto::runtime::v1::BulkPublishRequestEntry)},
  { 216, -1, sizeof(::dapr::proto::runtime::v1::BulkPublishResponse)},
  { 222, -1, sizeof(::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry)},
  { 229, -1, sizeof(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1)},
  { 237, 244, sizeof(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse)},
  { 246, 255, sizeof(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1)},
  { 259, -1, sizeof(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1)},
  { 266, -1, sizeof(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1)},
  { 274, -1, sizeof(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1)},
  { 279, 286, sizeof(::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse)},
  { 288, -1, sizeof(::dapr::proto::runtime::v1::InvokeBindingRequest)},
  { 297, 304, sizeof(::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse)},
  { 306, -1, sizeof(::dapr::proto::runtime::v1::InvokeBindingResponse)},
  { 313, 320, sizeof(::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse)},
  { 322, -1, sizeof(::dapr::proto::runtime::v1::GetSecretRequest)},
  { 330, 337, sizeof(::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse)},
  { 339, -1, sizeof(::dapr::proto::runtime::v1::GetSecretResponse)},
  { 345, 352, sizeof(::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse)},
  { 354, -1, sizeof(::dapr::proto::runtime::v1::GetBulkSecretRequest)},
  { 361, 368, sizeof(::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse)},
  { 370, -1, sizeof(::dapr::proto::runtime::v1::SecretResponse)},
  { 376, 383, sizeof(::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse)},
  { 385, -1, sizeof(::dapr::proto::runtime::v1::GetBulkSecretResponse)},
  { 391, -1, sizeof(::dapr::proto::runtime::v1::TransactionalStateOperation)},
  { 398, 405, sizeof(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse)},
  { 407, -1, sizeof(::dapr::proto::runtime::v1::ExecuteStateTransactionRequest)},
  { 415, -1, sizeof(::dapr::proto::runtime::v1::RegisterActorTimerRequest)},
  { 428, -1, sizeof(::dapr::proto::runtime::v1::UnregisterActorTimerRequest)},
  { 436, -1, sizeof(::dapr::proto::runtime::v1::RegisterActorReminderRequest)},
  { 448, -1, sizeof(::dapr::proto::runtime::v1::UnregisterActorReminderRequest)},
  { 456, -1, sizeof(::dapr::proto::runtime::v1::GetActorStateRequest)},
  { 464, 471, sizeof(::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse)},
  { 473, -1, sizeof(::dapr::proto::runtime::v1::GetActorStateResponse)},
  { 480, -1, sizeof(::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest)},
  { 488, 495, sizeof(::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse)},
  { 497, -1, sizeof(::dapr::proto::runtime::v1::TransactionalActorStateOperation)},
  { 506, 513, sizeof(::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse)},
  { 515, -1, sizeof(::dapr::proto::runtime::v1::InvokeActorRequest)},
  { 525, -1, sizeof(::dapr::proto::runtime::v1::InvokeActorResponse)},
  { 531, -1, sizeof(::dapr::proto::runtime::v1::GetMetadataRequest)},
  { 536, 543, sizeof(::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse)},
  { 545, -1, sizeof(::dapr::proto::runtime::v1::GetMetadataResponse)},
  { 560, -1, sizeof(::dapr::proto::runtime::v1::ActorRuntime)},
  { 569, -1, sizeof(::dapr::proto::runtime::v1::ActiveActorsCount)},
  { 576, -1, sizeof(::dapr::proto::runtime::v1::RegisteredComponents)},
  { 585, -1, sizeof(::dapr::proto::runtime::v1::MetadataHTTPEndpoint)},
  { 591, -1, sizeof(::dapr::proto::runtime::v1::AppConnectionProperties)},
  { 601, -1, sizeof(::dapr::proto::runtime::v1::AppConnectionHealthProperties)},
  { 610, 617, sizeof(::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse)},
  { 619, -1, sizeof(::dapr::proto::runtime::v1::PubsubSubscription)},
  { 630, -1, sizeof(::dapr::proto::runtime::v1::PubsubSubscriptionRules)},
  { 636, -1, sizeof(::dapr::proto::runtime::v1::PubsubSubscriptionRule)},
  { 643, -1, sizeof(::dapr::proto::runtime::v1::SetMetadataRequest)},
  { 650, 657, sizeof(::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse)},
  { 659, -1, sizeof(::dapr::proto::runtime::v1::GetConfigurationRequest)},
  { 667, 674, sizeof(::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse)},
  { 676, -1, sizeof(::dapr::proto::runtime::v1::GetConfigurationResponse)},
  { 682, 689, sizeof(::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse)},
  { 691, -1, sizeof(::dapr::proto::runtime::v1::SubscribeConfigurationRequest)},
  { 699, -1, sizeof(::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest)},
  { 706, 713, sizeof(::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse)},
  { 715, -1, sizeof(::dapr::proto::runtime::v1::SubscribeConfigurationResponse)},
  { 722, -1, sizeof(::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse)},
  { 729, -1, sizeof(::dapr::proto::runtime::v1::TryLockRequest)},
  { 738, -1, sizeof(::dapr::proto::runtime::v1::TryLockResponse)},
  { 744, -1, sizeof(::dapr::proto::runtime::v1::UnlockRequest)},
  { 752, -1, sizeof(::dapr::proto::runtime::v1::UnlockResponse)},
  { 758, -1, sizeof(::dapr::proto::runtime::v1::SubtleGetKeyRequest)},
  { 766, -1, sizeof(::dapr::proto::runtime::v1::SubtleGetKeyResponse)},
  { 773, -1, sizeof(::dapr::proto::runtime::v1::SubtleEncryptRequest)},
  { 784, -1, sizeof(::dapr::proto::runtime::v1::SubtleEncryptResponse)},
  { 791, -1, sizeof(::dapr::proto::runtime::v1::SubtleDecryptRequest)},
  { 803, -1, sizeof(::dapr::proto::runtime::v1::SubtleDecryptResponse)},
  { 809, -1, sizeof(::dapr::proto::runtime::v1::SubtleWrapKeyRequest)},
  { 820, -1, sizeof(::dapr::proto::runtime::v1::SubtleWrapKeyResponse)},
  { 827, -1, sizeof(::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest)},
  { 839, -1, sizeof(::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse)},
  { 845, -1, sizeof(::dapr::proto::runtime::v1::SubtleSignRequest)},
  { 854, -1, sizeof(::dapr::proto::runtime::v1::SubtleSignResponse)},
  { 860, -1, sizeof(::dapr::proto::runtime::v1::SubtleVerifyRequest)},
  { 870, -1, sizeof(::dapr::proto::runtime::v1::SubtleVerifyResponse)},
  { 876, -1, sizeof(::dapr::proto::runtime::v1::EncryptRequest)},
  { 883, -1, sizeof(::dapr::proto::runtime::v1::EncryptRequestOptions)},
  { 894, -1, sizeof(::dapr::proto::runtime::v1::EncryptResponse)},
  { 900, -1, sizeof(::dapr::proto::runtime::v1::DecryptRequest)},
  { 907, -1, sizeof(::dapr::proto::runtime::v1::DecryptRequestOptions)},
  { 914, -1, sizeof(::dapr::proto::runtime::v1::DecryptResponse)},
  { 920, -1, sizeof(::dapr::proto::runtime::v1::GetWorkflowRequest)},
  { 927, 934, sizeof(::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse)},
  { 936, -1, sizeof(::dapr::proto::runtime::v1::GetWorkflowResponse)},
  { 947, 954, sizeof(::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse)},
  { 956, -1, sizeof(::dapr::proto::runtime::v1::StartWorkflowRequest)},
  { 966, -1, sizeof(::dapr::proto::runtime::v1::StartWorkflowResponse)},
  { 972, -1, sizeof(::dapr::proto::runtime::v1::TerminateWorkflowRequest)},
  { 979, -1, sizeof(::dapr::proto::runtime::v1::PauseWorkflowRequest)},
  { 986, -1, sizeof(::dapr::proto::runtime::v1::ResumeWorkflowRequest)},
  { 993, -1, sizeof(::dapr::proto::runtime::v1::RaiseEventWorkflowRequest)},
  { 1002, -1, sizeof(::dapr::proto::runtime::v1::PurgeWorkflowRequest)},
  { 1009, -1, sizeof(::dapr::proto::runtime::v1::ShutdownRequest)},
  { 1014, 1025, sizeof(::dapr::proto::runtime::v1::Job)},
  { 1031, -1, sizeof(::dapr::proto::runtime::v1::ScheduleJobRequest)},
  { 1037, -1, sizeof(::dapr::proto::runtime::v1::ScheduleJobResponse)},
  { 1042, -1, sizeof(::dapr::proto::runtime::v1::GetJobRequest)},
  { 1048, -1, sizeof(::dapr::proto::runtime::v1::GetJobResponse)},
  { 1054, -1, sizeof(::dapr::proto::runtime::v1::DeleteJobRequest)},
  { 1060, -1, sizeof(::dapr::proto::runtime::v1::DeleteJobResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkStateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkStateItem_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkStateItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetStateResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetStateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DeleteStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DeleteBulkStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SaveStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_QueryStateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_QueryStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_QueryStateItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_QueryStateResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_QueryStateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PublishEventRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PublishEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkPublishRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkPublishRequestEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkPublishResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkPublishResponseFailedEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestAlpha1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestInitialAlpha1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestProcessedAlpha1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeTopicEventsResponseAlpha1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeTopicEventsResponseInitialAlpha1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeBindingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeBindingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetSecretRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetSecretRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetSecretResponse_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetSecretResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkSecretRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SecretResponse_SecretsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SecretResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetBulkSecretResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TransactionalStateOperation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ExecuteStateTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_RegisterActorTimerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_UnregisterActorTimerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_RegisterActorReminderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_UnregisterActorReminderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetActorStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetActorStateResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetActorStateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ExecuteActorStateTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TransactionalActorStateOperation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeActorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_InvokeActorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetMetadataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetMetadataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ActorRuntime_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ActiveActorsCount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_RegisteredComponents_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_MetadataHTTPEndpoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_AppConnectionProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_AppConnectionHealthProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PubsubSubscription_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PubsubSubscription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PubsubSubscriptionRules_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PubsubSubscriptionRule_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SetMetadataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_UnsubscribeConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubscribeConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_UnsubscribeConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TryLockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TryLockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_UnlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_UnlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleGetKeyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleGetKeyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleEncryptRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleEncryptResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleDecryptRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleDecryptResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleWrapKeyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleWrapKeyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleUnwrapKeyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleUnwrapKeyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleSignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleSignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleVerifyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_SubtleVerifyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_EncryptRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_EncryptRequestOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_EncryptResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DecryptRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DecryptRequestOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DecryptResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetWorkflowResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_StartWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_StartWorkflowResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TerminateWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PauseWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ResumeWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_RaiseEventWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_PurgeWorkflowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ShutdownRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_Job_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ScheduleJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ScheduleJobResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_GetJobResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DeleteJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_DeleteJobResponse_default_instance_),
};

const char descriptor_table_protodef_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n dapr/proto/runtime/v1/dapr.proto\022\025dapr"
  ".proto.runtime.v1\032\031google/protobuf/any.p"
  "roto\032\033google/protobuf/empty.proto\032\037googl"
  "e/protobuf/timestamp.proto\032!dapr/proto/c"
  "ommon/v1/common.proto\032\'dapr/proto/runtim"
  "e/v1/appcallback.proto\"X\n\024InvokeServiceR"
  "equest\022\n\n\002id\030\001 \001(\t\0224\n\007message\030\003 \001(\0132#.da"
  "pr.proto.common.v1.InvokeRequest\"\365\001\n\017Get"
  "StateRequest\022\022\n\nstore_name\030\001 \001(\t\022\013\n\003key\030"
  "\002 \001(\t\022H\n\013consistency\030\003 \001(\01623.dapr.proto."
  "common.v1.StateOptions.StateConsistency\022"
  "F\n\010metadata\030\004 \003(\01324.dapr.proto.runtime.v"
  "1.GetStateRequest.MetadataEntry\032/\n\rMetad"
  "ataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
  "\"\311\001\n\023GetBulkStateRequest\022\022\n\nstore_name\030\001"
  " \001(\t\022\014\n\004keys\030\002 \003(\t\022\023\n\013parallelism\030\003 \001(\005\022"
  "J\n\010metadata\030\004 \003(\01328.dapr.proto.runtime.v"
  "1.GetBulkStateRequest.MetadataEntry\032/\n\rM"
  "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
  ":\0028\001\"K\n\024GetBulkStateResponse\0223\n\005items\030\001 "
  "\003(\0132$.dapr.proto.runtime.v1.BulkStateIte"
  "m\"\276\001\n\rBulkStateItem\022\013\n\003key\030\001 \001(\t\022\014\n\004data"
  "\030\002 \001(\014\022\014\n\004etag\030\003 \001(\t\022\r\n\005error\030\004 \001(\t\022D\n\010m"
  "etadata\030\005 \003(\01322.dapr.proto.runtime.v1.Bu"
  "lkStateItem.MetadataEntry\032/\n\rMetadataEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\250\001\n\020G"
  "etStateResponse\022\014\n\004data\030\001 \001(\014\022\014\n\004etag\030\002 "
  "\001(\t\022G\n\010metadata\030\003 \003(\01325.dapr.proto.runti"
  "me.v1.GetStateResponse.MetadataEntry\032/\n\r"
  "MetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\001\"\220\002\n\022DeleteStateRequest\022\022\n\nstore_na"
  "me\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022(\n\004etag\030\003 \001(\0132\032.da"
  "pr.proto.common.v1.Etag\0223\n\007options\030\004 \001(\013"
  "2\".dapr.proto.common.v1.StateOptions\022I\n\010"
  "metadata\030\005 \003(\01327.dapr.proto.runtime.v1.D"
  "eleteStateRequest.MetadataEntry\032/\n\rMetad"
  "ataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
  "\"]\n\026DeleteBulkStateRequest\022\022\n\nstore_name"
  "\030\001 \001(\t\022/\n\006states\030\002 \003(\0132\037.dapr.proto.comm"
  "on.v1.StateItem\"W\n\020SaveStateRequest\022\022\n\ns"
  "tore_name\030\001 \001(\t\022/\n\006states\030\002 \003(\0132\037.dapr.p"
  "roto.common.v1.StateItem\"\274\001\n\021QueryStateR"
  "equest\022\035\n\nstore_name\030\001 \001(\tR\tstoreName\022\r\n"
  "\005query\030\002 \001(\t\022H\n\010metadata\030\003 \003(\01326.dapr.pr"
  "oto.runtime.v1.QueryStateRequest.Metadat"
  "aEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
  "value\030\002 \001(\t:\0028\001\"H\n\016QueryStateItem\022\013\n\003key"
  "\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\022\014\n\004etag\030\003 \001(\t\022\r\n\005er"
  "ror\030\004 \001(\t\"\327\001\n\022QueryStateResponse\0226\n\007resu"
  "lts\030\001 \003(\0132%.dapr.proto.runtime.v1.QueryS"
  "tateItem\022\r\n\005token\030\002 \001(\t\022I\n\010metadata\030\003 \003("
  "\01327.dapr.proto.runtime.v1.QueryStateResp"
  "onse.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\337\001\n\023PublishE"
  "ventRequest\022\023\n\013pubsub_name\030\001 \001(\t\022\r\n\005topi"
  "c\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\022\031\n\021data_content_ty"
  "pe\030\004 \001(\t\022J\n\010metadata\030\005 \003(\01328.dapr.proto."
  "runtime.v1.PublishEventRequest.MetadataE"
  "ntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
  "lue\030\002 \001(\t:\0028\001\"\365\001\n\022BulkPublishRequest\022\023\n\013"
  "pubsub_name\030\001 \001(\t\022\r\n\005topic\030\002 \001(\t\022\?\n\007entr"
  "ies\030\003 \003(\0132..dapr.proto.runtime.v1.BulkPu"
  "blishRequestEntry\022I\n\010metadata\030\004 \003(\01327.da"
  "pr.proto.runtime.v1.BulkPublishRequest.M"
  "etadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001"
  "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\321\001\n\027BulkPublishReq"
  "uestEntry\022\020\n\010entry_id\030\001 \001(\t\022\r\n\005event\030\002 \001"
  "(\014\022\024\n\014content_type\030\003 \001(\t\022N\n\010metadata\030\004 \003"
  "(\0132<.dapr.proto.runtime.v1.BulkPublishRe"
  "questEntry.MetadataEntry\032/\n\rMetadataEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"c\n\023Bul"
  "kPublishResponse\022L\n\rfailedEntries\030\001 \003(\0132"
  "5.dapr.proto.runtime.v1.BulkPublishRespo"
  "nseFailedEntry\"A\n\036BulkPublishResponseFai"
  "ledEntry\022\020\n\010entry_id\030\001 \001(\t\022\r\n\005error\030\002 \001("
  "\t\"\204\002\n!SubscribeTopicEventsRequestAlpha1\022"
  "Z\n\017initial_request\030\001 \001(\0132\?.dapr.proto.ru"
  "ntime.v1.SubscribeTopicEventsRequestInit"
  "ialAlpha1H\000\022\\\n\017event_processed\030\002 \001(\0132A.d"
  "apr.proto.runtime.v1.SubscribeTopicEvent"
  "sRequestProcessedAlpha1H\000B%\n#subscribe_t"
  "opic_events_request_type\"\226\002\n(SubscribeTo"
  "picEventsRequestInitialAlpha1\022\023\n\013pubsub_"
  "name\030\001 \001(\t\022\r\n\005topic\030\002 \001(\t\022_\n\010metadata\030\003 "
  "\003(\0132M.dapr.proto.runtime.v1.SubscribeTop"
  "icEventsRequestInitialAlpha1.MetadataEnt"
  "ry\022\036\n\021dead_letter_topic\030\004 \001(\tH\000\210\001\001\032/\n\rMe"
  "tadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
  "\0028\001B\024\n\022_dead_letter_topic\"s\n*SubscribeTo"
  "picEventsRequestProcessedAlpha1\022\n\n\002id\030\001 "
  "\001(\t\0229\n\006status\030\002 \001(\0132).dapr.proto.runtime"
  ".v1.TopicEventResponse\"\355\001\n\"SubscribeTopi"
  "cEventsResponseAlpha1\022\\\n\020initial_respons"
  "e\030\001 \001(\0132@.dapr.proto.runtime.v1.Subscrib"
  "eTopicEventsResponseInitialAlpha1H\000\022A\n\re"
  "vent_message\030\002 \001(\0132(.dapr.proto.runtime."
  "v1.TopicEventRequestH\000B&\n$subscribe_topi"
  "c_events_response_type\"+\n)SubscribeTopic"
  "EventsResponseInitialAlpha1\"\303\001\n\024InvokeBi"
  "ndingRequest\022\014\n\004name\030\001 \001(\t\022\014\n\004data\030\002 \001(\014"
  "\022K\n\010metadata\030\003 \003(\01329.dapr.proto.runtime."
  "v1.InvokeBindingRequest.MetadataEntry\022\021\n"
  "\toperation\030\004 \001(\t\032/\n\rMetadataEntry\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\244\001\n\025InvokeBind"
  "ingResponse\022\014\n\004data\030\001 \001(\014\022L\n\010metadata\030\002 "
  "\003(\0132:.dapr.proto.runtime.v1.InvokeBindin"
  "gResponse.MetadataEntry\032/\n\rMetadataEntry"
  "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\270\001\n\020Get"
  "SecretRequest\022\035\n\nstore_name\030\001 \001(\tR\tstore"
  "Name\022\013\n\003key\030\002 \001(\t\022G\n\010metadata\030\003 \003(\01325.da"
  "pr.proto.runtime.v1.GetSecretRequest.Met"
  "adataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
  "\022\r\n\005value\030\002 \001(\t:\0028\001\"\202\001\n\021GetSecretRespons"
  "e\022@\n\004data\030\001 \003(\01322.dapr.proto.runtime.v1."
  "GetSecretResponse.DataEntry\032+\n\tDataEntry"
  "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\263\001\n\024Get"
  "BulkSecretRequest\022\035\n\nstore_name\030\001 \001(\tR\ts"
  "toreName\022K\n\010metadata\030\002 \003(\01329.dapr.proto."
  "runtime.v1.GetBulkSecretRequest.Metadata"
  "Entry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t:\0028\001\"\205\001\n\016SecretResponse\022C\n\007sec"
  "rets\030\001 \003(\01322.dapr.proto.runtime.v1.Secre"
  "tResponse.SecretsEntry\032.\n\014SecretsEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\261\001\n\025GetBu"
  "lkSecretResponse\022D\n\004data\030\001 \003(\01326.dapr.pr"
  "oto.runtime.v1.GetBulkSecretResponse.Dat"
  "aEntry\032R\n\tDataEntry\022\013\n\003key\030\001 \001(\t\0224\n\005valu"
  "e\030\002 \001(\0132%.dapr.proto.runtime.v1.SecretRe"
  "sponse:\0028\001\"f\n\033TransactionalStateOperatio"
  "n\022\025\n\roperationType\030\001 \001(\t\0220\n\007request\030\002 \001("
  "\0132\037.dapr.proto.common.v1.StateItem\"\203\002\n\036E"
  "xecuteStateTransactionRequest\022\021\n\tstoreNa"
  "me\030\001 \001(\t\022F\n\noperations\030\002 \003(\01322.dapr.prot"
  "o.runtime.v1.TransactionalStateOperation"
  "\022U\n\010metadata\030\003 \003(\0132C.dapr.proto.runtime."
  "v1.ExecuteStateTransactionRequest.Metada"
  "taEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
  "\005value\030\002 \001(\t:\0028\001\"\273\001\n\031RegisterActorTimerR"
  "equest\022\035\n\nactor_type\030\001 \001(\tR\tactorType\022\031\n"
  "\010actor_id\030\002 \001(\tR\007actorId\022\014\n\004name\030\003 \001(\t\022\031"
  "\n\010due_time\030\004 \001(\tR\007dueTime\022\016\n\006period\030\005 \001("
  "\t\022\020\n\010callback\030\006 \001(\t\022\014\n\004data\030\007 \001(\014\022\013\n\003ttl"
  "\030\010 \001(\t\"e\n\033UnregisterActorTimerRequest\022\035\n"
  "\nactor_type\030\001 \001(\tR\tactorType\022\031\n\010actor_id"
  "\030\002 \001(\tR\007actorId\022\014\n\004name\030\003 \001(\t\"\254\001\n\034Regist"
  "erActorReminderRequest\022\035\n\nactor_type\030\001 \001"
  "(\tR\tactorType\022\031\n\010actor_id\030\002 \001(\tR\007actorId"
  "\022\014\n\004name\030\003 \001(\t\022\031\n\010due_time\030\004 \001(\tR\007dueTim"
  "e\022\016\n\006period\030\005 \001(\t\022\014\n\004data\030\006 \001(\014\022\013\n\003ttl\030\007"
  " \001(\t\"h\n\036UnregisterActorReminderRequest\022\035"
  "\n\nactor_type\030\001 \001(\tR\tactorType\022\031\n\010actor_i"
  "d\030\002 \001(\tR\007actorId\022\014\n\004name\030\003 \001(\t\"]\n\024GetAct"
  "orStateRequest\022\035\n\nactor_type\030\001 \001(\tR\tacto"
  "rType\022\031\n\010actor_id\030\002 \001(\tR\007actorId\022\013\n\003key\030"
  "\003 \001(\t\"\244\001\n\025GetActorStateResponse\022\014\n\004data\030"
  "\001 \001(\014\022L\n\010metadata\030\002 \003(\0132:.dapr.proto.run"
  "time.v1.GetActorStateResponse.MetadataEn"
  "try\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
  "ue\030\002 \001(\t:\0028\001\"\254\001\n#ExecuteActorStateTransa"
  "ctionRequest\022\035\n\nactor_type\030\001 \001(\tR\tactorT"
  "ype\022\031\n\010actor_id\030\002 \001(\tR\007actorId\022K\n\noperat"
  "ions\030\003 \003(\01327.dapr.proto.runtime.v1.Trans"
  "actionalActorStateOperation\"\365\001\n Transact"
  "ionalActorStateOperation\022\025\n\roperationTyp"
  "e\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022#\n\005value\030\003 \001(\0132\024.go"
  "ogle.protobuf.Any\022W\n\010metadata\030\004 \003(\0132E.da"
  "pr.proto.runtime.v1.TransactionalActorSt"
  "ateOperation.MetadataEntry\032/\n\rMetadataEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\350\001\n\022"
  "InvokeActorRequest\022\035\n\nactor_type\030\001 \001(\tR\t"
  "actorType\022\031\n\010actor_id\030\002 \001(\tR\007actorId\022\016\n\006"
  "method\030\003 \001(\t\022\014\n\004data\030\004 \001(\014\022I\n\010metadata\030\005"
  " \003(\01327.dapr.proto.runtime.v1.InvokeActor"
  "Request.MetadataEntry\032/\n\rMetadataEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"#\n\023Invoke"
  "ActorResponse\022\014\n\004data\030\001 \001(\014\"\024\n\022GetMetada"
  "taRequest\"\233\006\n\023GetMetadataResponse\022\n\n\002id\030"
  "\001 \001(\t\022Q\n\023active_actors_count\030\002 \003(\0132(.dap"
  "r.proto.runtime.v1.ActiveActorsCountB\002\030\001"
  "R\006actors\022V\n\025registered_components\030\003 \003(\0132"
  "+.dapr.proto.runtime.v1.RegisteredCompon"
  "entsR\ncomponents\022e\n\021extended_metadata\030\004 "
  "\003(\0132@.dapr.proto.runtime.v1.GetMetadataR"
  "esponse.ExtendedMetadataEntryR\010extended\022"
  "O\n\rsubscriptions\030\005 \003(\0132).dapr.proto.runt"
  "ime.v1.PubsubSubscriptionR\rsubscriptions"
  "\022R\n\016http_endpoints\030\006 \003(\0132+.dapr.proto.ru"
  "ntime.v1.MetadataHTTPEndpointR\rhttpEndpo"
  "ints\022j\n\031app_connection_properties\030\007 \001(\0132"
  "..dapr.proto.runtime.v1.AppConnectionPro"
  "pertiesR\027appConnectionProperties\022\'\n\017runt"
  "ime_version\030\010 \001(\tR\016runtimeVersion\022)\n\020ena"
  "bled_features\030\t \003(\tR\017enabledFeatures\022H\n\r"
  "actor_runtime\030\n \001(\0132#.dapr.proto.runtime"
  ".v1.ActorRuntimeR\014actorRuntime\0327\n\025Extend"
  "edMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t:\0028\001\"\274\002\n\014ActorRuntime\022]\n\016runtime_stat"
  "us\030\001 \001(\01626.dapr.proto.runtime.v1.ActorRu"
  "ntime.ActorRuntimeStatusR\rruntimeStatus\022"
  "M\n\ractive_actors\030\002 \003(\0132(.dapr.proto.runt"
  "ime.v1.ActiveActorsCountR\014activeActors\022\035"
  "\n\nhost_ready\030\003 \001(\010R\thostReady\022\034\n\tplaceme"
  "nt\030\004 \001(\tR\tplacement\"A\n\022ActorRuntimeStatu"
  "s\022\020\n\014INITIALIZING\020\000\022\014\n\010DISABLED\020\001\022\013\n\007RUN"
  "NING\020\002\"0\n\021ActiveActorsCount\022\014\n\004type\030\001 \001("
  "\t\022\r\n\005count\030\002 \001(\005\"Y\n\024RegisteredComponents"
  "\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\017\n\007version\030"
  "\003 \001(\t\022\024\n\014capabilities\030\004 \003(\t\"*\n\024MetadataH"
  "TTPEndpoint\022\022\n\004name\030\001 \001(\tR\004name\"\321\001\n\027AppC"
  "onnectionProperties\022\014\n\004port\030\001 \001(\005\022\020\n\010pro"
  "tocol\030\002 \001(\t\022\'\n\017channel_address\030\003 \001(\tR\016ch"
  "annelAddress\022\'\n\017max_concurrency\030\004 \001(\005R\016m"
  "axConcurrency\022D\n\006health\030\005 \001(\01324.dapr.pro"
  "to.runtime.v1.AppConnectionHealthPropert"
  "ies\"\334\001\n\035AppConnectionHealthProperties\022*\n"
  "\021health_check_path\030\001 \001(\tR\017healthCheckPat"
  "h\0222\n\025health_probe_interval\030\002 \001(\tR\023health"
  "ProbeInterval\0220\n\024health_probe_timeout\030\003 "
  "\001(\tR\022healthProbeTimeout\022)\n\020health_thresh"
  "old\030\004 \001(\005R\017healthThreshold\"\206\003\n\022PubsubSub"
  "scription\022\037\n\013pubsub_name\030\001 \001(\tR\npubsubna"
  "me\022\024\n\005topic\030\002 \001(\tR\005topic\022S\n\010metadata\030\003 \003"
  "(\01327.dapr.proto.runtime.v1.PubsubSubscri"
  "ption.MetadataEntryR\010metadata\022D\n\005rules\030\004"
  " \001(\0132..dapr.proto.runtime.v1.PubsubSubsc"
  "riptionRulesR\005rules\022*\n\021dead_letter_topic"
  "\030\005 \001(\tR\017deadLetterTopic\022A\n\004type\030\006 \001(\0162-."
  "dapr.proto.runtime.v1.PubsubSubscription"
  "TypeR\004type\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
  "\022\r\n\005value\030\002 \001(\t:\0028\001\"W\n\027PubsubSubscriptio"
  "nRules\022<\n\005rules\030\001 \003(\0132-.dapr.proto.runti"
  "me.v1.PubsubSubscriptionRule\"5\n\026PubsubSu"
  "bscriptionRule\022\r\n\005match\030\001 \001(\t\022\014\n\004path\030\002 "
  "\001(\t\"0\n\022SetMetadataRequest\022\013\n\003key\030\001 \001(\t\022\r"
  "\n\005value\030\002 \001(\t\"\274\001\n\027GetConfigurationReques"
  "t\022\022\n\nstore_name\030\001 \001(\t\022\014\n\004keys\030\002 \003(\t\022N\n\010m"
  "etadata\030\003 \003(\0132<.dapr.proto.runtime.v1.Ge"
  "tConfigurationRequest.MetadataEntry\032/\n\rM"
  "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
  ":\0028\001\"\274\001\n\030GetConfigurationResponse\022I\n\005ite"
  "ms\030\001 \003(\0132:.dapr.proto.runtime.v1.GetConf"
  "igurationResponse.ItemsEntry\032U\n\nItemsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\0226\n\005value\030\002 \001(\0132\'.dapr.pr"
  "oto.common.v1.ConfigurationItem:\0028\001\"\310\001\n\035"
  "SubscribeConfigurationRequest\022\022\n\nstore_n"
  "ame\030\001 \001(\t\022\014\n\004keys\030\002 \003(\t\022T\n\010metadata\030\003 \003("
  "\0132B.dapr.proto.runtime.v1.SubscribeConfi"
  "gurationRequest.MetadataEntry\032/\n\rMetadat"
  "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"A"
  "\n\037UnsubscribeConfigurationRequest\022\022\n\nsto"
  "re_name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"\324\001\n\036SubscribeC"
  "onfigurationResponse\022\n\n\002id\030\001 \001(\t\022O\n\005item"
  "s\030\002 \003(\0132@.dapr.proto.runtime.v1.Subscrib"
  "eConfigurationResponse.ItemsEntry\032U\n\nIte"
  "msEntry\022\013\n\003key\030\001 \001(\t\0226\n\005value\030\002 \001(\0132\'.da"
  "pr.proto.common.v1.ConfigurationItem:\0028\001"
  "\"\?\n UnsubscribeConfigurationResponse\022\n\n\002"
  "ok\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"\233\001\n\016TryLockReq"
  "uest\022\035\n\nstore_name\030\001 \001(\tR\tstoreName\022\037\n\013r"
  "esource_id\030\002 \001(\tR\nresourceId\022\035\n\nlock_own"
  "er\030\003 \001(\tR\tlockOwner\022*\n\021expiry_in_seconds"
  "\030\004 \001(\005R\017expiryInSeconds\"\"\n\017TryLockRespon"
  "se\022\017\n\007success\030\001 \001(\010\"n\n\rUnlockRequest\022\035\n\n"
  "store_name\030\001 \001(\tR\tstoreName\022\037\n\013resource_"
  "id\030\002 \001(\tR\nresourceId\022\035\n\nlock_owner\030\003 \001(\t"
  "R\tlockOwner\"\256\001\n\016UnlockResponse\022<\n\006status"
  "\030\001 \001(\0162,.dapr.proto.runtime.v1.UnlockRes"
  "ponse.Status\"^\n\006Status\022\013\n\007SUCCESS\020\000\022\027\n\023L"
  "OCK_DOES_NOT_EXIST\020\001\022\032\n\026LOCK_BELONGS_TO_"
  "OTHERS\020\002\022\022\n\016INTERNAL_ERROR\020\003\"\260\001\n\023SubtleG"
  "etKeyRequest\022%\n\016component_name\030\001 \001(\tR\rco"
  "mponentName\022\014\n\004name\030\002 \001(\t\022D\n\006format\030\003 \001("
  "\01624.dapr.proto.runtime.v1.SubtleGetKeyRe"
  "quest.KeyFormat\"\036\n\tKeyFormat\022\007\n\003PEM\020\000\022\010\n"
  "\004JSON\020\001\"C\n\024SubtleGetKeyResponse\022\014\n\004name\030"
  "\001 \001(\t\022\035\n\npublic_key\030\002 \001(\tR\tpublicKey\"\266\001\n"
  "\024SubtleEncryptRequest\022%\n\016component_name\030"
  "\001 \001(\tR\rcomponentName\022\021\n\tplaintext\030\002 \001(\014\022"
  "\021\n\talgorithm\030\003 \001(\t\022\031\n\010key_name\030\004 \001(\tR\007ke"
  "yName\022\r\n\005nonce\030\005 \001(\014\022\'\n\017associated_data\030"
  "\006 \001(\014R\016associatedData\"8\n\025SubtleEncryptRe"
  "sponse\022\022\n\nciphertext\030\001 \001(\014\022\013\n\003tag\030\002 \001(\014\""
  "\304\001\n\024SubtleDecryptRequest\022%\n\016component_na"
  "me\030\001 \001(\tR\rcomponentName\022\022\n\nciphertext\030\002 "
  "\001(\014\022\021\n\talgorithm\030\003 \001(\t\022\031\n\010key_name\030\004 \001(\t"
  "R\007keyName\022\r\n\005nonce\030\005 \001(\014\022\013\n\003tag\030\006 \001(\014\022\'\n"
  "\017associated_data\030\007 \001(\014R\016associatedData\"*"
  "\n\025SubtleDecryptResponse\022\021\n\tplaintext\030\001 \001"
  "(\014\"\310\001\n\024SubtleWrapKeyRequest\022%\n\016component"
  "_name\030\001 \001(\tR\rcomponentName\022#\n\rplaintext_"
  "key\030\002 \001(\014R\014plaintextKey\022\021\n\talgorithm\030\003 \001"
  "(\t\022\031\n\010key_name\030\004 \001(\tR\007keyName\022\r\n\005nonce\030\005"
  " \001(\014\022\'\n\017associated_data\030\006 \001(\014R\016associate"
  "dData\"E\n\025SubtleWrapKeyResponse\022\037\n\013wrappe"
  "d_key\030\001 \001(\014R\nwrappedKey\022\013\n\003tag\030\002 \001(\014\"\323\001\n"
  "\026SubtleUnwrapKeyRequest\022%\n\016component_nam"
  "e\030\001 \001(\tR\rcomponentName\022\037\n\013wrapped_key\030\002 "
  "\001(\014R\nwrappedKey\022\021\n\talgorithm\030\003 \001(\t\022\031\n\010ke"
  "y_name\030\004 \001(\tR\007keyName\022\r\n\005nonce\030\005 \001(\014\022\013\n\003"
  "tag\030\006 \001(\014\022\'\n\017associated_data\030\007 \001(\014R\016asso"
  "ciatedData\">\n\027SubtleUnwrapKeyResponse\022#\n"
  "\rplaintext_key\030\001 \001(\014R\014plaintextKey\"x\n\021Su"
  "btleSignRequest\022%\n\016component_name\030\001 \001(\tR"
  "\rcomponentName\022\016\n\006digest\030\002 \001(\014\022\021\n\talgori"
  "thm\030\003 \001(\t\022\031\n\010key_name\030\004 \001(\tR\007keyName\"\'\n\022"
  "SubtleSignResponse\022\021\n\tsignature\030\001 \001(\014\"\215\001"
  "\n\023SubtleVerifyRequest\022%\n\016component_name\030"
  "\001 \001(\tR\rcomponentName\022\016\n\006digest\030\002 \001(\014\022\021\n\t"
  "algorithm\030\003 \001(\t\022\031\n\010key_name\030\004 \001(\tR\007keyNa"
  "me\022\021\n\tsignature\030\005 \001(\014\"%\n\024SubtleVerifyRes"
  "ponse\022\r\n\005valid\030\001 \001(\010\"\205\001\n\016EncryptRequest\022"
  "=\n\007options\030\001 \001(\0132,.dapr.proto.runtime.v1"
  ".EncryptRequestOptions\0224\n\007payload\030\002 \001(\0132"
  "#.dapr.proto.common.v1.StreamPayload\"\376\001\n"
  "\025EncryptRequestOptions\022%\n\016component_name"
  "\030\001 \001(\tR\rcomponentName\022\031\n\010key_name\030\002 \001(\tR"
  "\007keyName\022\032\n\022key_wrap_algorithm\030\003 \001(\t\022\036\n\026"
  "data_encryption_cipher\030\n \001(\t\0227\n\030omit_dec"
  "ryption_key_name\030\013 \001(\010R\025omitDecryptionKe"
  "yName\022.\n\023decryption_key_name\030\014 \001(\tR\021decr"
  "yptionKeyName\"G\n\017EncryptResponse\0224\n\007payl"
  "oad\030\001 \001(\0132#.dapr.proto.common.v1.StreamP"
  "ayload\"\205\001\n\016DecryptRequest\022=\n\007options\030\001 \001"
  "(\0132,.dapr.proto.runtime.v1.DecryptReques"
  "tOptions\0224\n\007payload\030\002 \001(\0132#.dapr.proto.c"
  "ommon.v1.StreamPayload\"Y\n\025DecryptRequest"
  "Options\022%\n\016component_name\030\001 \001(\tR\rcompone"
  "ntName\022\031\n\010key_name\030\014 \001(\tR\007keyName\"G\n\017Dec"
  "ryptResponse\0224\n\007payload\030\001 \001(\0132#.dapr.pro"
  "to.common.v1.StreamPayload\"d\n\022GetWorkflo"
  "wRequest\022\037\n\013instance_id\030\001 \001(\tR\ninstanceI"
  "D\022-\n\022workflow_component\030\002 \001(\tR\021workflowC"
  "omponent\"\204\003\n\023GetWorkflowResponse\022\037\n\013inst"
  "ance_id\030\001 \001(\tR\ninstanceID\022#\n\rworkflow_na"
  "me\030\002 \001(\tR\014workflowName\0229\n\ncreated_at\030\003 \001"
  "(\0132\032.google.protobuf.TimestampR\tcreatedA"
  "t\022B\n\017last_updated_at\030\004 \001(\0132\032.google.prot"
  "obuf.TimestampR\rlastUpdatedAt\022%\n\016runtime"
  "_status\030\005 \001(\tR\rruntimeStatus\022N\n\nproperti"
  "es\030\006 \003(\0132:.dapr.proto.runtime.v1.GetWork"
  "flowResponse.PropertiesEntry\0321\n\017Properti"
  "esEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
  "\225\002\n\024StartWorkflowRequest\022\037\n\013instance_id\030"
  "\001 \001(\tR\ninstanceID\022-\n\022workflow_component\030"
  "\002 \001(\tR\021workflowComponent\022#\n\rworkflow_nam"
  "e\030\003 \001(\tR\014workflowName\022I\n\007options\030\004 \003(\01328"
  ".dapr.proto.runtime.v1.StartWorkflowRequ"
  "est.OptionsEntry\022\r\n\005input\030\005 \001(\014\032.\n\014Optio"
  "nsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
  "8\n\025StartWorkflowResponse\022\037\n\013instance_id\030"
  "\001 \001(\tR\ninstanceID\"j\n\030TerminateWorkflowRe"
  "quest\022\037\n\013instance_id\030\001 \001(\tR\ninstanceID\022-"
  "\n\022workflow_component\030\002 \001(\tR\021workflowComp"
  "onent\"f\n\024PauseWorkflowRequest\022\037\n\013instanc"
  "e_id\030\001 \001(\tR\ninstanceID\022-\n\022workflow_compo"
  "nent\030\002 \001(\tR\021workflowComponent\"g\n\025ResumeW"
  "orkflowRequest\022\037\n\013instance_id\030\001 \001(\tR\nins"
  "tanceID\022-\n\022workflow_component\030\002 \001(\tR\021wor"
  "kflowComponent\"\236\001\n\031RaiseEventWorkflowReq"
  "uest\022\037\n\013instance_id\030\001 \001(\tR\ninstanceID\022-\n"
  "\022workflow_component\030\002 \001(\tR\021workflowCompo"
  "nent\022\035\n\nevent_name\030\003 \001(\tR\teventName\022\022\n\ne"
  "vent_data\030\004 \001(\014\"f\n\024PurgeWorkflowRequest\022"
  "\037\n\013instance_id\030\001 \001(\tR\ninstanceID\022-\n\022work"
  "flow_component\030\002 \001(\tR\021workflowComponent\""
  "\021\n\017ShutdownRequest\"\350\001\n\003Job\022\022\n\004name\030\001 \001(\t"
  "R\004name\022\037\n\010schedule\030\002 \001(\tH\000R\010schedule\210\001\001\022"
  "\035\n\007repeats\030\003 \001(\rH\001R\007repeats\210\001\001\022\036\n\010due_ti"
  "me\030\004 \001(\tH\002R\007dueTime\210\001\001\022\025\n\003ttl\030\005 \001(\tH\003R\003t"
  "tl\210\001\001\022(\n\004data\030\006 \001(\0132\024.google.protobuf.An"
  "yR\004dataB\013\n\t_scheduleB\n\n\010_repeatsB\013\n\t_due"
  "_timeB\006\n\004_ttl\"=\n\022ScheduleJobRequest\022\'\n\003j"
  "ob\030\001 \001(\0132\032.dapr.proto.runtime.v1.Job\"\025\n\023"
  "ScheduleJobResponse\"\035\n\rGetJobRequest\022\014\n\004"
  "name\030\001 \001(\t\"9\n\016GetJobResponse\022\'\n\003job\030\001 \001("
  "\0132\032.dapr.proto.runtime.v1.Job\" \n\020DeleteJ"
  "obRequest\022\014\n\004name\030\001 \001(\t\"\023\n\021DeleteJobResp"
  "onse*W\n\026PubsubSubscriptionType\022\013\n\007UNKNOW"
  "N\020\000\022\017\n\013DECLARATIVE\020\001\022\020\n\014PROGRAMMATIC\020\002\022\r"
  "\n\tSTREAMING\020\0032\2740\n\004Dapr\022d\n\rInvokeService\022"
  "+.dapr.proto.runtime.v1.InvokeServiceReq"
  "uest\032$.dapr.proto.common.v1.InvokeRespon"
  "se\"\000\022]\n\010GetState\022&.dapr.proto.runtime.v1"
  ".GetStateRequest\032\'.dapr.proto.runtime.v1"
  ".GetStateResponse\"\000\022i\n\014GetBulkState\022*.da"
  "pr.proto.runtime.v1.GetBulkStateRequest\032"
  "+.dapr.proto.runtime.v1.GetBulkStateResp"
  "onse\"\000\022N\n\tSaveState\022\'.dapr.proto.runtime"
  ".v1.SaveStateRequest\032\026.google.protobuf.E"
  "mpty\"\000\022i\n\020QueryStateAlpha1\022(.dapr.proto."
  "runtime.v1.QueryStateRequest\032).dapr.prot"
  "o.runtime.v1.QueryStateResponse\"\000\022R\n\013Del"
  "eteState\022).dapr.proto.runtime.v1.DeleteS"
  "tateRequest\032\026.google.protobuf.Empty\"\000\022Z\n"
  "\017DeleteBulkState\022-.dapr.proto.runtime.v1"
  ".DeleteBulkStateRequest\032\026.google.protobu"
  "f.Empty\"\000\022j\n\027ExecuteStateTransaction\0225.d"
  "apr.proto.runtime.v1.ExecuteStateTransac"
  "tionRequest\032\026.google.protobuf.Empty\"\000\022T\n"
  "\014PublishEvent\022*.dapr.proto.runtime.v1.Pu"
  "blishEventRequest\032\026.google.protobuf.Empt"
  "y\"\000\022q\n\026BulkPublishEventAlpha1\022).dapr.pro"
  "to.runtime.v1.BulkPublishRequest\032*.dapr."
  "proto.runtime.v1.BulkPublishResponse\"\000\022\227"
  "\001\n\032SubscribeTopicEventsAlpha1\0228.dapr.pro"
  "to.runtime.v1.SubscribeTopicEventsReques"
  "tAlpha1\0329.dapr.proto.runtime.v1.Subscrib"
  "eTopicEventsResponseAlpha1\"\000(\0010\001\022l\n\rInvo"
  "keBinding\022+.dapr.proto.runtime.v1.Invoke"
  "BindingRequest\032,.dapr.proto.runtime.v1.I"
  "nvokeBindingResponse\"\000\022`\n\tGetSecret\022\'.da"
  "pr.proto.runtime.v1.GetSecretRequest\032(.d"
  "apr.proto.runtime.v1.GetSecretResponse\"\000"
  "\022l\n\rGetBulkSecret\022+.dapr.proto.runtime.v"
  "1.GetBulkSecretRequest\032,.dapr.proto.runt"
  "ime.v1.GetBulkSecretResponse\"\000\022`\n\022Regist"
  "erActorTimer\0220.dapr.proto.runtime.v1.Reg"
  "isterActorTimerRequest\032\026.google.protobuf"
  ".Empty\"\000\022d\n\024UnregisterActorTimer\0222.dapr."
  "proto.runtime.v1.UnregisterActorTimerReq"
  "uest\032\026.google.protobuf.Empty\"\000\022f\n\025Regist"
  "erActorReminder\0223.dapr.proto.runtime.v1."
  "RegisterActorReminderRequest\032\026.google.pr"
  "otobuf.Empty\"\000\022j\n\027UnregisterActorReminde"
  "r\0225.dapr.proto.runtime.v1.UnregisterActo"
  "rReminderRequest\032\026.google.protobuf.Empty"
  "\"\000\022l\n\rGetActorState\022+.dapr.proto.runtime"
  ".v1.GetActorStateRequest\032,.dapr.proto.ru"
  "ntime.v1.GetActorStateResponse\"\000\022t\n\034Exec"
  "uteActorStateTransaction\022:.dapr.proto.ru"
  "ntime.v1.ExecuteActorStateTransactionReq"
  "uest\032\026.google.protobuf.Empty\"\000\022f\n\013Invoke"
  "Actor\022).dapr.proto.runtime.v1.InvokeActo"
  "rRequest\032*.dapr.proto.runtime.v1.InvokeA"
  "ctorResponse\"\000\022{\n\026GetConfigurationAlpha1"
  "\022..dapr.proto.runtime.v1.GetConfiguratio"
  "nRequest\032/.dapr.proto.runtime.v1.GetConf"
  "igurationResponse\"\000\022u\n\020GetConfiguration\022"
  "..dapr.proto.runtime.v1.GetConfiguration"
  "Request\032/.dapr.proto.runtime.v1.GetConfi"
  "gurationResponse\"\000\022\217\001\n\034SubscribeConfigur"
  "ationAlpha1\0224.dapr.proto.runtime.v1.Subs"
  "cribeConfigurationRequest\0325.dapr.proto.r"
  "untime.v1.SubscribeConfigurationResponse"
  "\"\0000\001\022\211\001\n\026SubscribeConfiguration\0224.dapr.p"
  "roto.runtime.v1.SubscribeConfigurationRe"
  "quest\0325.dapr.proto.runtime.v1.SubscribeC"
  "onfigurationResponse\"\0000\001\022\223\001\n\036Unsubscribe"
  "ConfigurationAlpha1\0226.dapr.proto.runtime"
  ".v1.UnsubscribeConfigurationRequest\0327.da"
  "pr.proto.runtime.v1.UnsubscribeConfigura"
  "tionResponse\"\000\022\215\001\n\030UnsubscribeConfigurat"
  "ion\0226.dapr.proto.runtime.v1.UnsubscribeC"
  "onfigurationRequest\0327.dapr.proto.runtime"
  ".v1.UnsubscribeConfigurationResponse\"\000\022`"
  "\n\rTryLockAlpha1\022%.dapr.proto.runtime.v1."
  "TryLockRequest\032&.dapr.proto.runtime.v1.T"
  "ryLockResponse\"\000\022]\n\014UnlockAlpha1\022$.dapr."
  "proto.runtime.v1.UnlockRequest\032%.dapr.pr"
  "oto.runtime.v1.UnlockResponse\"\000\022b\n\rEncry"
  "ptAlpha1\022%.dapr.proto.runtime.v1.Encrypt"
  "Request\032&.dapr.proto.runtime.v1.EncryptR"
  "esponse(\0010\001\022b\n\rDecryptAlpha1\022%.dapr.prot"
  "o.runtime.v1.DecryptRequest\032&.dapr.proto"
  ".runtime.v1.DecryptResponse(\0010\001\022f\n\013GetMe"
  "tadata\022).dapr.proto.runtime.v1.GetMetada"
  "taRequest\032*.dapr.proto.runtime.v1.GetMet"
  "adataResponse\"\000\022R\n\013SetMetadata\022).dapr.pr"
  "oto.runtime.v1.SetMetadataRequest\032\026.goog"
  "le.protobuf.Empty\"\000\022m\n\022SubtleGetKeyAlpha"
  "1\022*.dapr.proto.runtime.v1.SubtleGetKeyRe"
  "quest\032+.dapr.proto.runtime.v1.SubtleGetK"
  "eyResponse\022p\n\023SubtleEncryptAlpha1\022+.dapr"
  ".proto.runtime.v1.SubtleEncryptRequest\032,"
  ".dapr.proto.runtime.v1.SubtleEncryptResp"
  "onse\022p\n\023SubtleDecryptAlpha1\022+.dapr.proto"
  ".runtime.v1.SubtleDecryptRequest\032,.dapr."
  "proto.runtime.v1.SubtleDecryptResponse\022p"
  "\n\023SubtleWrapKeyAlpha1\022+.dapr.proto.runti"
  "me.v1.SubtleWrapKeyRequest\032,.dapr.proto."
  "runtime.v1.SubtleWrapKeyResponse\022v\n\025Subt"
  "leUnwrapKeyAlpha1\022-.dapr.proto.runtime.v"
  "1.SubtleUnwrapKeyRequest\032..dapr.proto.ru"
  "ntime.v1.SubtleUnwrapKeyResponse\022g\n\020Subt"
  "leSignAlpha1\022(.dapr.proto.runtime.v1.Sub"
  "tleSignRequest\032).dapr.proto.runtime.v1.S"
  "ubtleSignResponse\022m\n\022SubtleVerifyAlpha1\022"
  "*.dapr.proto.runtime.v1.SubtleVerifyRequ"
  "est\032+.dapr.proto.runtime.v1.SubtleVerify"
  "Response\022r\n\023StartWorkflowAlpha1\022+.dapr.p"
  "roto.runtime.v1.StartWorkflowRequest\032,.d"
  "apr.proto.runtime.v1.StartWorkflowRespon"
  "se\"\000\022l\n\021GetWorkflowAlpha1\022).dapr.proto.r"
  "untime.v1.GetWorkflowRequest\032*.dapr.prot"
  "o.runtime.v1.GetWorkflowResponse\"\000\022\\\n\023Pu"
  "rgeWorkflowAlpha1\022+.dapr.proto.runtime.v"
  "1.PurgeWorkflowRequest\032\026.google.protobuf"
  ".Empty\"\000\022d\n\027TerminateWorkflowAlpha1\022/.da"
  "pr.proto.runtime.v1.TerminateWorkflowReq"
  "uest\032\026.google.protobuf.Empty\"\000\022\\\n\023PauseW"
  "orkflowAlpha1\022+.dapr.proto.runtime.v1.Pa"
  "useWorkflowRequest\032\026.google.protobuf.Emp"
  "ty\"\000\022^\n\024ResumeWorkflowAlpha1\022,.dapr.prot"
  "o.runtime.v1.ResumeWorkflowRequest\032\026.goo"
  "gle.protobuf.Empty\"\000\022f\n\030RaiseEventWorkfl"
  "owAlpha1\0220.dapr.proto.runtime.v1.RaiseEv"
  "entWorkflowRequest\032\026.google.protobuf.Emp"
  "ty\"\000\022q\n\022StartWorkflowBeta1\022+.dapr.proto."
  "runtime.v1.StartWorkflowRequest\032,.dapr.p"
  "roto.runtime.v1.StartWorkflowResponse\"\000\022"
  "k\n\020GetWorkflowBeta1\022).dapr.proto.runtime"
  ".v1.GetWorkflowRequest\032*.dapr.proto.runt"
  "ime.v1.GetWorkflowResponse\"\000\022[\n\022PurgeWor"
  "kflowBeta1\022+.dapr.proto.runtime.v1.Purge"
  "WorkflowRequest\032\026.google.protobuf.Empty\""
  "\000\022c\n\026TerminateWorkflowBeta1\022/.dapr.proto"
  ".runtime.v1.TerminateWorkflowRequest\032\026.g"
  "oogle.protobuf.Empty\"\000\022[\n\022PauseWorkflowB"
  "eta1\022+.dapr.proto.runtime.v1.PauseWorkfl"
  "owRequest\032\026.google.protobuf.Empty\"\000\022]\n\023R"
  "esumeWorkflowBeta1\022,.dapr.proto.runtime."
  "v1.ResumeWorkflowRequest\032\026.google.protob"
  "uf.Empty\"\000\022e\n\027RaiseEventWorkflowBeta1\0220."
  "dapr.proto.runtime.v1.RaiseEventWorkflow"
  "Request\032\026.google.protobuf.Empty\"\000\022L\n\010Shu"
  "tdown\022&.dapr.proto.runtime.v1.ShutdownRe"
  "quest\032\026.google.protobuf.Empty\"\000\022l\n\021Sched"
  "uleJobAlpha1\022).dapr.proto.runtime.v1.Sch"
  "eduleJobRequest\032*.dapr.proto.runtime.v1."
  "ScheduleJobResponse\"\000\022]\n\014GetJobAlpha1\022$."
  "dapr.proto.runtime.v1.GetJobRequest\032%.da"
  "pr.proto.runtime.v1.GetJobResponse\"\000\022f\n\017"
  "DeleteJobAlpha1\022\'.dapr.proto.runtime.v1."
  "DeleteJobRequest\032(.dapr.proto.runtime.v1"
  ".DeleteJobResponse\"\000Bi\n\nio.dapr.v1B\nDapr"
  "ProtosZ1github.com/dapr/dapr/pkg/proto/r"
  "untime/v1;runtime\252\002\033Dapr.Client.Autogen."
  "Grpc.v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_deps[5] = {
  &::descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto,
  &::descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_sccs[130] = {
  &scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkPublishRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkPublishRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkPublishRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkPublishResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_BulkStateItem_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DeleteBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DeleteJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DeleteJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DeleteStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_DeleteStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_EncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_EncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ExecuteActorStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ExecuteStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetActorStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetActorStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetActorStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetBulkStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetMetadataResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetSecretRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetSecretResponse_DataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_GetWorkflowResponse_PropertiesEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeActorRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeActorRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeActorResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeBindingRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeBindingRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeBindingResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeBindingResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_InvokeServiceRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PauseWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PublishEventRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PublishEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PubsubSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_PurgeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_QueryStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_QueryStateRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_QueryStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_QueryStateResponse_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_RaiseEventWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_RegisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_RegisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ResumeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SaveStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ScheduleJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ScheduleJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SecretResponse_SecretsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_ShutdownRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_StartWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_StartWorkflowRequest_OptionsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_StartWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeTopicEventsRequestAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeTopicEventsResponseAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleDecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleDecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleEncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleEncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleGetKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleGetKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleSignRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleSignResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleUnwrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleUnwrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleVerifyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleVerifyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleWrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_SubtleWrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_TerminateWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_TransactionalActorStateOperation_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_TryLockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_TryLockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_UnlockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_UnlockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_UnregisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_UnregisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_UnsubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
  &scc_info_UnsubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto = {
  false, false, descriptor_table_protodef_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto, "dapr/proto/runtime/v1/dapr.proto", 21495,
  &descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_once, descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_sccs, descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto_deps, 130, 5,
  schemas, file_default_instances, TableStruct_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::offsets,
  file_level_metadata_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto, 130, file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto, file_level_service_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto)), true);
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActorRuntime_ActorRuntimeStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[0];
}
bool ActorRuntime_ActorRuntimeStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime::INITIALIZING;
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime::DISABLED;
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime::RUNNING;
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime::ActorRuntimeStatus_MIN;
constexpr ActorRuntime_ActorRuntimeStatus ActorRuntime::ActorRuntimeStatus_MAX;
constexpr int ActorRuntime::ActorRuntimeStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UnlockResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[1];
}
bool UnlockResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr UnlockResponse_Status UnlockResponse::SUCCESS;
constexpr UnlockResponse_Status UnlockResponse::LOCK_DOES_NOT_EXIST;
constexpr UnlockResponse_Status UnlockResponse::LOCK_BELONGS_TO_OTHERS;
constexpr UnlockResponse_Status UnlockResponse::INTERNAL_ERROR;
constexpr UnlockResponse_Status UnlockResponse::Status_MIN;
constexpr UnlockResponse_Status UnlockResponse::Status_MAX;
constexpr int UnlockResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubtleGetKeyRequest_KeyFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[2];
}
bool SubtleGetKeyRequest_KeyFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::PEM;
constexpr SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::JSON;
constexpr SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::KeyFormat_MIN;
constexpr SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::KeyFormat_MAX;
constexpr int SubtleGetKeyRequest::KeyFormat_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PubsubSubscriptionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto[3];
}
bool PubsubSubscriptionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void InvokeServiceRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_InvokeServiceRequest_default_instance_._instance.get_mutable()->message_ = const_cast< ::dapr::proto::common::v1::InvokeRequest*>(
      ::dapr::proto::common::v1::InvokeRequest::internal_default_instance());
}
class InvokeServiceRequest::_Internal {
 public:
  static const ::dapr::proto::common::v1::InvokeRequest& message(const InvokeServiceRequest* msg);
};

const ::dapr::proto::common::v1::InvokeRequest&
InvokeServiceRequest::_Internal::message(const InvokeServiceRequest* msg) {
  return *msg->message_;
}
void InvokeServiceRequest::clear_message() {
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
}
InvokeServiceRequest::InvokeServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.InvokeServiceRequest)
}
InvokeServiceRequest::InvokeServiceRequest(const InvokeServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_message()) {
    message_ = new ::dapr::proto::common::v1::InvokeRequest(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.InvokeServiceRequest)
}

void InvokeServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeServiceRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_ = nullptr;
}

InvokeServiceRequest::~InvokeServiceRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.InvokeServiceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void InvokeServiceRequest::ArenaDtor(void* object) {
  InvokeServiceRequest* _this = reinterpret_cast< InvokeServiceRequest* >(object);
  (void)_this;
}
void InvokeServiceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeServiceRequest& InvokeServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeServiceRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void InvokeServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.InvokeServiceRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.InvokeRequest message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeServiceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.InvokeServiceRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .dapr.proto.common.v1.InvokeRequest message = 3;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.InvokeServiceRequest)
  return target;
}

size_t InvokeServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .dapr.proto.common.v1.InvokeRequest message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.InvokeServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.InvokeServiceRequest)
    MergeFrom(*source);
  }
}

void InvokeServiceRequest::MergeFrom(const InvokeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_message()) {
    _internal_mutable_message()->::dapr::proto::common::v1::InvokeRequest::MergeFrom(from._internal_message());
  }
}

void InvokeServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeServiceRequest::CopyFrom(const InvokeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.InvokeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeServiceRequest::IsInitialized() const {
  return true;
}

void InvokeServiceRequest::InternalSwap(InvokeServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetStateRequest_MetadataEntry_DoNotUse::GetStateRequest_MetadataEntry_DoNotUse() {}
GetStateRequest_MetadataEntry_DoNotUse::GetStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetStateRequest_MetadataEntry_DoNotUse::MergeFrom(const GetStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetStateRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetStateRequest::InitAsDefaultInstance() {
}
class GetStateRequest::_Internal {
 public:
};

GetStateRequest::GetStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetStateRequest)
}
GetStateRequest::GetStateRequest(const GetStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  consistency_ = from.consistency_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetStateRequest)
}

void GetStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consistency_ = 0;
}

GetStateRequest::~GetStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStateRequest::ArenaDtor(void* object) {
  GetStateRequest* _this = reinterpret_cast< GetStateRequest* >(object);
  (void)_this;
}
void GetStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStateRequest& GetStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  consistency_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetStateRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetStateRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_consistency(static_cast<::dapr::proto::common::v1::StateOptions_StateConsistency>(val));
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetStateRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
  if (this->consistency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_consistency(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetStateRequest)
  return target;
}

size_t GetStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
  if (this->consistency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_consistency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetStateRequest)
    MergeFrom(*source);
  }
}

void GetStateRequest::MergeFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.consistency() != 0) {
    _internal_set_consistency(from._internal_consistency());
  }
}

void GetStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateRequest::CopyFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateRequest::IsInitialized() const {
  return true;
}

void GetStateRequest::InternalSwap(GetStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(consistency_, other->consistency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetBulkStateRequest_MetadataEntry_DoNotUse::GetBulkStateRequest_MetadataEntry_DoNotUse() {}
GetBulkStateRequest_MetadataEntry_DoNotUse::GetBulkStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetBulkStateRequest_MetadataEntry_DoNotUse::MergeFrom(const GetBulkStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetBulkStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetBulkStateRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetBulkStateRequest::InitAsDefaultInstance() {
}
class GetBulkStateRequest::_Internal {
 public:
};

GetBulkStateRequest::GetBulkStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetBulkStateRequest)
}
GetBulkStateRequest::GetBulkStateRequest(const GetBulkStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  parallelism_ = from.parallelism_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetBulkStateRequest)
}

void GetBulkStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parallelism_ = 0;
}

GetBulkStateRequest::~GetBulkStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetBulkStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBulkStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBulkStateRequest::ArenaDtor(void* object) {
  GetBulkStateRequest* _this = reinterpret_cast< GetBulkStateRequest* >(object);
  (void)_this;
}
void GetBulkStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBulkStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBulkStateRequest& GetBulkStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetBulkStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parallelism_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBulkStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetBulkStateRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetBulkStateRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 parallelism = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          parallelism_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBulkStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetBulkStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated string keys = 2;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetBulkStateRequest.keys");
    target = stream->WriteString(2, s, target);
  }

  // int32 parallelism = 3;
  if (this->parallelism() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_parallelism(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetBulkStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetBulkStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetBulkStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetBulkStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetBulkStateRequest)
  return target;
}

size_t GetBulkStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetBulkStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // int32 parallelism = 3;
  if (this->parallelism() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_parallelism());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBulkStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBulkStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBulkStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetBulkStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetBulkStateRequest)
    MergeFrom(*source);
  }
}

void GetBulkStateRequest::MergeFrom(const GetBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.parallelism() != 0) {
    _internal_set_parallelism(from._internal_parallelism());
  }
}

void GetBulkStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBulkStateRequest::CopyFrom(const GetBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetBulkStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBulkStateRequest::IsInitialized() const {
  return true;
}

void GetBulkStateRequest::InternalSwap(GetBulkStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(parallelism_, other->parallelism_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBulkStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBulkStateResponse::InitAsDefaultInstance() {
}
class GetBulkStateResponse::_Internal {
 public:
};

GetBulkStateResponse::GetBulkStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetBulkStateResponse)
}
GetBulkStateResponse::GetBulkStateResponse(const GetBulkStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetBulkStateResponse)
}

void GetBulkStateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBulkStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

GetBulkStateResponse::~GetBulkStateResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetBulkStateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBulkStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBulkStateResponse::ArenaDtor(void* object) {
  GetBulkStateResponse* _this = reinterpret_cast< GetBulkStateResponse* >(object);
  (void)_this;
}
void GetBulkStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBulkStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBulkStateResponse& GetBulkStateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBulkStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetBulkStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBulkStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBulkStateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetBulkStateResponse)
  return target;
}

size_t GetBulkStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBulkStateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBulkStateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBulkStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetBulkStateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetBulkStateResponse)
    MergeFrom(*source);
  }
}

void GetBulkStateResponse::MergeFrom(const GetBulkStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void GetBulkStateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBulkStateResponse::CopyFrom(const GetBulkStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetBulkStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBulkStateResponse::IsInitialized() const {
  return true;
}

void GetBulkStateResponse::InternalSwap(GetBulkStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBulkStateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

BulkStateItem_MetadataEntry_DoNotUse::BulkStateItem_MetadataEntry_DoNotUse() {}
BulkStateItem_MetadataEntry_DoNotUse::BulkStateItem_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BulkStateItem_MetadataEntry_DoNotUse::MergeFrom(const BulkStateItem_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BulkStateItem_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void BulkStateItem_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void BulkStateItem::InitAsDefaultInstance() {
}
class BulkStateItem::_Internal {
 public:
};

BulkStateItem::BulkStateItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BulkStateItem)
}
BulkStateItem::BulkStateItem(const BulkStateItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_etag().empty()) {
    etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_etag(),
      GetArena());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BulkStateItem)
}

void BulkStateItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BulkStateItem::~BulkStateItem() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BulkStateItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulkStateItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BulkStateItem::ArenaDtor(void* object) {
  BulkStateItem* _this = reinterpret_cast< BulkStateItem* >(object);
  (void)_this;
}
void BulkStateItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulkStateItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkStateItem& BulkStateItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void BulkStateItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BulkStateItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  etag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkStateItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkStateItem.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_etag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkStateItem.etag"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkStateItem.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkStateItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BulkStateItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkStateItem.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkStateItem.etag");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_etag(), target);
  }

  // string error = 4;
  if (this->error().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkStateItem.error");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error(), target);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BulkStateItem.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BulkStateItem.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = BulkStateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = BulkStateItem_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BulkStateItem)
  return target;
}

size_t BulkStateItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BulkStateItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += BulkStateItem_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  // string error = 4;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkStateItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BulkStateItem)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkStateItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkStateItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BulkStateItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BulkStateItem)
    MergeFrom(*source);
  }
}

void BulkStateItem::MergeFrom(const BulkStateItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BulkStateItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.etag().size() > 0) {
    _internal_set_etag(from._internal_etag());
  }
  if (from.error().size() > 0) {
    _internal_set_error(from._internal_error());
  }
}

void BulkStateItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BulkStateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkStateItem::CopyFrom(const BulkStateItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BulkStateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkStateItem::IsInitialized() const {
  return true;
}

void BulkStateItem::InternalSwap(BulkStateItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  etag_.Swap(&other->etag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_.Swap(&other->error_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkStateItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetStateResponse_MetadataEntry_DoNotUse::GetStateResponse_MetadataEntry_DoNotUse() {}
GetStateResponse_MetadataEntry_DoNotUse::GetStateResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetStateResponse_MetadataEntry_DoNotUse::MergeFrom(const GetStateResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetStateResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetStateResponse_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetStateResponse::InitAsDefaultInstance() {
}
class GetStateResponse::_Internal {
 public:
};

GetStateResponse::GetStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetStateResponse)
}
GetStateResponse::GetStateResponse(const GetStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_etag().empty()) {
    etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_etag(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetStateResponse)
}

void GetStateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetStateResponse::~GetStateResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetStateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStateResponse::ArenaDtor(void* object) {
  GetStateResponse* _this = reinterpret_cast< GetStateResponse* >(object);
  (void)_this;
}
void GetStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStateResponse& GetStateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  etag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string etag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_etag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetStateResponse.etag"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetStateResponse.etag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_etag(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetStateResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetStateResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetStateResponse)
  return target;
}

size_t GetStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetStateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetStateResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetStateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetStateResponse)
    MergeFrom(*source);
  }
}

void GetStateResponse::MergeFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.etag().size() > 0) {
    _internal_set_etag(from._internal_etag());
  }
}

void GetStateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateResponse::CopyFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateResponse::IsInitialized() const {
  return true;
}

void GetStateResponse::InternalSwap(GetStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  etag_.Swap(&other->etag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DeleteStateRequest_MetadataEntry_DoNotUse::DeleteStateRequest_MetadataEntry_DoNotUse() {}
DeleteStateRequest_MetadataEntry_DoNotUse::DeleteStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeleteStateRequest_MetadataEntry_DoNotUse::MergeFrom(const DeleteStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeleteStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DeleteStateRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DeleteStateRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_DeleteStateRequest_default_instance_._instance.get_mutable()->etag_ = const_cast< ::dapr::proto::common::v1::Etag*>(
      ::dapr::proto::common::v1::Etag::internal_default_instance());
  ::dapr::proto::runtime::v1::_DeleteStateRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::proto::common::v1::StateOptions*>(
      ::dapr::proto::common::v1::StateOptions::internal_default_instance());
}
class DeleteStateRequest::_Internal {
 public:
  static const ::dapr::proto::common::v1::Etag& etag(const DeleteStateRequest* msg);
  static const ::dapr::proto::common::v1::StateOptions& options(const DeleteStateRequest* msg);
};

const ::dapr::proto::common::v1::Etag&
DeleteStateRequest::_Internal::etag(const DeleteStateRequest* msg) {
  return *msg->etag_;
}
const ::dapr::proto::common::v1::StateOptions&
DeleteStateRequest::_Internal::options(const DeleteStateRequest* msg) {
  return *msg->options_;
}
void DeleteStateRequest::clear_etag() {
  if (GetArena() == nullptr && etag_ != nullptr) {
    delete etag_;
  }
  etag_ = nullptr;
}
void DeleteStateRequest::clear_options() {
  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
}
DeleteStateRequest::DeleteStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DeleteStateRequest)
}
DeleteStateRequest::DeleteStateRequest(const DeleteStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  if (from._internal_has_etag()) {
    etag_ = new ::dapr::proto::common::v1::Etag(*from.etag_);
  } else {
    etag_ = nullptr;
  }
  if (from._internal_has_options()) {
    options_ = new ::dapr::proto::common::v1::StateOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DeleteStateRequest)
}

void DeleteStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&etag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&etag_)) + sizeof(options_));
}

DeleteStateRequest::~DeleteStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DeleteStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete etag_;
  if (this != internal_default_instance()) delete options_;
}

void DeleteStateRequest::ArenaDtor(void* object) {
  DeleteStateRequest* _this = reinterpret_cast< DeleteStateRequest* >(object);
  (void)_this;
}
void DeleteStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteStateRequest& DeleteStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DeleteStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DeleteStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && etag_ != nullptr) {
    delete etag_;
  }
  etag_ = nullptr;
  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.DeleteStateRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.DeleteStateRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.Etag etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_etag(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StateOptions options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DeleteStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.DeleteStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.DeleteStateRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .dapr.proto.common.v1.Etag etag = 3;
  if (this->has_etag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::etag(this), target, stream);
  }

  // .dapr.proto.common.v1.StateOptions options = 4;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::options(this), target, stream);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.DeleteStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.DeleteStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DeleteStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = DeleteStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DeleteStateRequest)
  return target;
}

size_t DeleteStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DeleteStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += DeleteStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .dapr.proto.common.v1.Etag etag = 3;
  if (this->has_etag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *etag_);
  }

  // .dapr.proto.common.v1.StateOptions options = 4;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DeleteStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DeleteStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DeleteStateRequest)
    MergeFrom(*source);
  }
}

void DeleteStateRequest::MergeFrom(const DeleteStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DeleteStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.has_etag()) {
    _internal_mutable_etag()->::dapr::proto::common::v1::Etag::MergeFrom(from._internal_etag());
  }
  if (from.has_options()) {
    _internal_mutable_options()->::dapr::proto::common::v1::StateOptions::MergeFrom(from._internal_options());
  }
}

void DeleteStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DeleteStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteStateRequest::CopyFrom(const DeleteStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DeleteStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStateRequest::IsInitialized() const {
  return true;
}

void DeleteStateRequest::InternalSwap(DeleteStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteStateRequest, options_)
      + sizeof(DeleteStateRequest::options_)
      - PROTOBUF_FIELD_OFFSET(DeleteStateRequest, etag_)>(
          reinterpret_cast<char*>(&etag_),
          reinterpret_cast<char*>(&other->etag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteBulkStateRequest::InitAsDefaultInstance() {
}
class DeleteBulkStateRequest::_Internal {
 public:
};

void DeleteBulkStateRequest::clear_states() {
  states_.Clear();
}
DeleteBulkStateRequest::DeleteBulkStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  states_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DeleteBulkStateRequest)
}
DeleteBulkStateRequest::DeleteBulkStateRequest(const DeleteBulkStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      states_(from.states_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DeleteBulkStateRequest)
}

void DeleteBulkStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteBulkStateRequest::~DeleteBulkStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteBulkStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteBulkStateRequest::ArenaDtor(void* object) {
  DeleteBulkStateRequest* _this = reinterpret_cast< DeleteBulkStateRequest* >(object);
  (void)_this;
}
void DeleteBulkStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteBulkStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteBulkStateRequest& DeleteBulkStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteBulkStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DeleteBulkStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteBulkStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.common.v1.StateItem states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteBulkStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_states(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  return target;
}

size_t DeleteBulkStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteBulkStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteBulkStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteBulkStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DeleteBulkStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DeleteBulkStateRequest)
    MergeFrom(*source);
  }
}

void DeleteBulkStateRequest::MergeFrom(const DeleteBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
}

void DeleteBulkStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBulkStateRequest::CopyFrom(const DeleteBulkStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DeleteBulkStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBulkStateRequest::IsInitialized() const {
  return true;
}

void DeleteBulkStateRequest::InternalSwap(DeleteBulkStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  states_.InternalSwap(&other->states_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteBulkStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveStateRequest::InitAsDefaultInstance() {
}
class SaveStateRequest::_Internal {
 public:
};

void SaveStateRequest::clear_states() {
  states_.Clear();
}
SaveStateRequest::SaveStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  states_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SaveStateRequest)
}
SaveStateRequest::SaveStateRequest(const SaveStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      states_(from.states_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SaveStateRequest)
}

void SaveStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SaveStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SaveStateRequest::~SaveStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SaveStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SaveStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SaveStateRequest::ArenaDtor(void* object) {
  SaveStateRequest* _this = reinterpret_cast< SaveStateRequest* >(object);
  (void)_this;
}
void SaveStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SaveStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveStateRequest& SaveStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SaveStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SaveStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SaveStateRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.common.v1.StateItem states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SaveStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SaveStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_states(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SaveStateRequest)
  return target;
}

size_t SaveStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SaveStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SaveStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SaveStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SaveStateRequest)
    MergeFrom(*source);
  }
}

void SaveStateRequest::MergeFrom(const SaveStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SaveStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
}

void SaveStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SaveStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveStateRequest::CopyFrom(const SaveStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SaveStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveStateRequest::IsInitialized() const {
  return true;
}

void SaveStateRequest::InternalSwap(SaveStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  states_.InternalSwap(&other->states_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

QueryStateRequest_MetadataEntry_DoNotUse::QueryStateRequest_MetadataEntry_DoNotUse() {}
QueryStateRequest_MetadataEntry_DoNotUse::QueryStateRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void QueryStateRequest_MetadataEntry_DoNotUse::MergeFrom(const QueryStateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata QueryStateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void QueryStateRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void QueryStateRequest::InitAsDefaultInstance() {
}
class QueryStateRequest::_Internal {
 public:
};

QueryStateRequest::QueryStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.QueryStateRequest)
}
QueryStateRequest::QueryStateRequest(const QueryStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_query().empty()) {
    query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_query(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.QueryStateRequest)
}

void QueryStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QueryStateRequest::~QueryStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.QueryStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryStateRequest::ArenaDtor(void* object) {
  QueryStateRequest* _this = reinterpret_cast< QueryStateRequest* >(object);
  (void)_this;
}
void QueryStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryStateRequest& QueryStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void QueryStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.QueryStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1[json_name = "storeName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.QueryStateRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.QueryStateRequest.query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.QueryStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.QueryStateRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_query().data(), static_cast<int>(this->_internal_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.QueryStateRequest.query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_query(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.QueryStateRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.QueryStateRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = QueryStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = QueryStateRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.QueryStateRequest)
  return target;
}

size_t QueryStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.QueryStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += QueryStateRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_query());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.QueryStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.QueryStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.QueryStateRequest)
    MergeFrom(*source);
  }
}

void QueryStateRequest::MergeFrom(const QueryStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.QueryStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.query().size() > 0) {
    _internal_set_query(from._internal_query());
  }
}

void QueryStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.QueryStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStateRequest::CopyFrom(const QueryStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.QueryStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStateRequest::IsInitialized() const {
  return true;
}

void QueryStateRequest::InternalSwap(QueryStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  query_.Swap(&other->query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryStateItem::InitAsDefaultInstance() {
}
class QueryStateItem::_Internal {
 public:
};

QueryStateItem::QueryStateItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.QueryStateItem)
}
QueryStateItem::QueryStateItem(const QueryStateItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_etag().empty()) {
    etag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_etag(),
      GetArena());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.QueryStateItem)
}

void QueryStateItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QueryStateItem::~QueryStateItem() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.QueryStateItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryStateItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryStateItem::ArenaDtor(void* object) {
  QueryStateItem* _this = reinterpret_cast< QueryStateItem* >(object);
  (void)_this;
}
void QueryStateItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryStateItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryStateItem& QueryStateItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryStateItem_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void QueryStateItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.QueryStateItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  etag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryStateItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.QueryStateItem.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string etag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_etag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.QueryStateItem.etag"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.QueryStateItem.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryStateItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.QueryStateItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.QueryStateItem.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_etag().data(), static_cast<int>(this->_internal_etag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.QueryStateItem.etag");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_etag(), target);
  }

  // string error = 4;
  if (this->error().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.QueryStateItem.error");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.QueryStateItem)
  return target;
}

size_t QueryStateItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.QueryStateItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_etag());
  }

  // string error = 4;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryStateItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.QueryStateItem)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStateItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryStateItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.QueryStateItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.QueryStateItem)
    MergeFrom(*source);
  }
}

void QueryStateItem::MergeFrom(const QueryStateItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.QueryStateItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.etag().size() > 0) {
    _internal_set_etag(from._internal_etag());
  }
  if (from.error().size() > 0) {
    _internal_set_error(from._internal_error());
  }
}

void QueryStateItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.QueryStateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStateItem::CopyFrom(const QueryStateItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.QueryStateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStateItem::IsInitialized() const {
  return true;
}

void QueryStateItem::InternalSwap(QueryStateItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  etag_.Swap(&other->etag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_.Swap(&other->error_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryStateItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

QueryStateResponse_MetadataEntry_DoNotUse::QueryStateResponse_MetadataEntry_DoNotUse() {}
QueryStateResponse_MetadataEntry_DoNotUse::QueryStateResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void QueryStateResponse_MetadataEntry_DoNotUse::MergeFrom(const QueryStateResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata QueryStateResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void QueryStateResponse_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void QueryStateResponse::InitAsDefaultInstance() {
}
class QueryStateResponse::_Internal {
 public:
};

QueryStateResponse::QueryStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.QueryStateResponse)
}
QueryStateResponse::QueryStateResponse(const QueryStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.QueryStateResponse)
}

void QueryStateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QueryStateResponse::~QueryStateResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.QueryStateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryStateResponse::ArenaDtor(void* object) {
  QueryStateResponse* _this = reinterpret_cast< QueryStateResponse* >(object);
  (void)_this;
}
void QueryStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryStateResponse& QueryStateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void QueryStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.QueryStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  metadata_.Clear();
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.QueryStateResponse.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryStateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.QueryStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results(i), target, stream);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.QueryStateResponse.token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_token(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.QueryStateResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.QueryStateResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = QueryStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = QueryStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.QueryStateResponse)
  return target;
}

size_t QueryStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.QueryStateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += QueryStateResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryStateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.QueryStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryStateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.QueryStateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.QueryStateResponse)
    MergeFrom(*source);
  }
}

void QueryStateResponse::MergeFrom(const QueryStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.QueryStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  metadata_.MergeFrom(from.metadata_);
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void QueryStateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.QueryStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryStateResponse::CopyFrom(const QueryStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.QueryStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryStateResponse::IsInitialized() const {
  return true;
}

void QueryStateResponse::InternalSwap(QueryStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
  metadata_.Swap(&other->metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryStateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PublishEventRequest_MetadataEntry_DoNotUse::PublishEventRequest_MetadataEntry_DoNotUse() {}
PublishEventRequest_MetadataEntry_DoNotUse::PublishEventRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PublishEventRequest_MetadataEntry_DoNotUse::MergeFrom(const PublishEventRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PublishEventRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PublishEventRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void PublishEventRequest::InitAsDefaultInstance() {
}
class PublishEventRequest::_Internal {
 public:
};

PublishEventRequest::PublishEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.PublishEventRequest)
}
PublishEventRequest::PublishEventRequest(const PublishEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_content_type().empty()) {
    data_content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_content_type(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.PublishEventRequest)
}

void PublishEventRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PublishEventRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PublishEventRequest::~PublishEventRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.PublishEventRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PublishEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PublishEventRequest::ArenaDtor(void* object) {
  PublishEventRequest* _this = reinterpret_cast< PublishEventRequest* >(object);
  (void)_this;
}
void PublishEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PublishEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublishEventRequest& PublishEventRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PublishEventRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void PublishEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.PublishEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublishEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pubsub_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PublishEventRequest.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PublishEventRequest.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_content_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PublishEventRequest.data_content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PublishEventRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.PublishEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PublishEventRequest.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pubsub_name(), target);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PublishEventRequest.topic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_topic(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  // string data_content_type = 4;
  if (this->data_content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_content_type().data(), static_cast<int>(this->_internal_data_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PublishEventRequest.data_content_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_data_content_type(), target);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.PublishEventRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.PublishEventRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PublishEventRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = PublishEventRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.PublishEventRequest)
  return target;
}

size_t PublishEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.PublishEventRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += PublishEventRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string data_content_type = 4;
  if (this->data_content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_content_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishEventRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.PublishEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishEventRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PublishEventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.PublishEventRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.PublishEventRequest)
    MergeFrom(*source);
  }
}

void PublishEventRequest::MergeFrom(const PublishEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.PublishEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.data_content_type().size() > 0) {
    _internal_set_data_content_type(from._internal_data_content_type());
  }
}

void PublishEventRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.PublishEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishEventRequest::CopyFrom(const PublishEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.PublishEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishEventRequest::IsInitialized() const {
  return true;
}

void PublishEventRequest::InternalSwap(PublishEventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_content_type_.Swap(&other->data_content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PublishEventRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

BulkPublishRequest_MetadataEntry_DoNotUse::BulkPublishRequest_MetadataEntry_DoNotUse() {}
BulkPublishRequest_MetadataEntry_DoNotUse::BulkPublishRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BulkPublishRequest_MetadataEntry_DoNotUse::MergeFrom(const BulkPublishRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BulkPublishRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void BulkPublishRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void BulkPublishRequest::InitAsDefaultInstance() {
}
class BulkPublishRequest::_Internal {
 public:
};

BulkPublishRequest::BulkPublishRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BulkPublishRequest)
}
BulkPublishRequest::BulkPublishRequest(const BulkPublishRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BulkPublishRequest)
}

void BulkPublishRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulkPublishRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BulkPublishRequest::~BulkPublishRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BulkPublishRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulkPublishRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BulkPublishRequest::ArenaDtor(void* object) {
  BulkPublishRequest* _this = reinterpret_cast< BulkPublishRequest* >(object);
  (void)_this;
}
void BulkPublishRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulkPublishRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkPublishRequest& BulkPublishRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkPublishRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void BulkPublishRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BulkPublishRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  metadata_.Clear();
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkPublishRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pubsub_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkPublishRequest.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkPublishRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BulkPublishRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pubsub_name(), target);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkPublishRequest.topic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_topic(), target);
  }

  // repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_entries(i), target, stream);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BulkPublishRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BulkPublishRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = BulkPublishRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = BulkPublishRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BulkPublishRequest)
  return target;
}

size_t BulkPublishRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BulkPublishRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += BulkPublishRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkPublishRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BulkPublishRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkPublishRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkPublishRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BulkPublishRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BulkPublishRequest)
    MergeFrom(*source);
  }
}

void BulkPublishRequest::MergeFrom(const BulkPublishRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BulkPublishRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  metadata_.MergeFrom(from.metadata_);
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
}

void BulkPublishRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BulkPublishRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkPublishRequest::CopyFrom(const BulkPublishRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BulkPublishRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkPublishRequest::IsInitialized() const {
  return true;
}

void BulkPublishRequest::InternalSwap(BulkPublishRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  metadata_.Swap(&other->metadata_);
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkPublishRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

BulkPublishRequestEntry_MetadataEntry_DoNotUse::BulkPublishRequestEntry_MetadataEntry_DoNotUse() {}
BulkPublishRequestEntry_MetadataEntry_DoNotUse::BulkPublishRequestEntry_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BulkPublishRequestEntry_MetadataEntry_DoNotUse::MergeFrom(const BulkPublishRequestEntry_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BulkPublishRequestEntry_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void BulkPublishRequestEntry_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void BulkPublishRequestEntry::InitAsDefaultInstance() {
}
class BulkPublishRequestEntry::_Internal {
 public:
};

BulkPublishRequestEntry::BulkPublishRequestEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BulkPublishRequestEntry)
}
BulkPublishRequestEntry::BulkPublishRequestEntry(const BulkPublishRequestEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_entry_id().empty()) {
    entry_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_entry_id(),
      GetArena());
  }
  event_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event().empty()) {
    event_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_event(),
      GetArena());
  }
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content_type().empty()) {
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content_type(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BulkPublishRequestEntry)
}

void BulkPublishRequestEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BulkPublishRequestEntry::~BulkPublishRequestEntry() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulkPublishRequestEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  entry_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BulkPublishRequestEntry::ArenaDtor(void* object) {
  BulkPublishRequestEntry* _this = reinterpret_cast< BulkPublishRequestEntry* >(object);
  (void)_this;
}
void BulkPublishRequestEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulkPublishRequestEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkPublishRequestEntry& BulkPublishRequestEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkPublishRequestEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void BulkPublishRequestEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  entry_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkPublishRequestEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string entry_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_entry_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes event = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_event();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkPublishRequestEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entry_id().data(), static_cast<int>(this->_internal_entry_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entry_id(), target);
  }

  // bytes event = 2;
  if (this->event().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_event(), target);
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content_type(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BulkPublishRequestEntry.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BulkPublishRequestEntry.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = BulkPublishRequestEntry_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = BulkPublishRequestEntry_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  return target;
}

size_t BulkPublishRequestEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += BulkPublishRequestEntry_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entry_id());
  }

  // bytes event = 2;
  if (this->event().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_event());
  }

  // string content_type = 3;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkPublishRequestEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkPublishRequestEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkPublishRequestEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BulkPublishRequestEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BulkPublishRequestEntry)
    MergeFrom(*source);
  }
}

void BulkPublishRequestEntry::MergeFrom(const BulkPublishRequestEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.entry_id().size() > 0) {
    _internal_set_entry_id(from._internal_entry_id());
  }
  if (from.event().size() > 0) {
    _internal_set_event(from._internal_event());
  }
  if (from.content_type().size() > 0) {
    _internal_set_content_type(from._internal_content_type());
  }
}

void BulkPublishRequestEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkPublishRequestEntry::CopyFrom(const BulkPublishRequestEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BulkPublishRequestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkPublishRequestEntry::IsInitialized() const {
  return true;
}

void BulkPublishRequestEntry::InternalSwap(BulkPublishRequestEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  entry_id_.Swap(&other->entry_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_.Swap(&other->event_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.Swap(&other->content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkPublishRequestEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BulkPublishResponse::InitAsDefaultInstance() {
}
class BulkPublishResponse::_Internal {
 public:
};

BulkPublishResponse::BulkPublishResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  failedentries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BulkPublishResponse)
}
BulkPublishResponse::BulkPublishResponse(const BulkPublishResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      failedentries_(from.failedentries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BulkPublishResponse)
}

void BulkPublishResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulkPublishResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

BulkPublishResponse::~BulkPublishResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BulkPublishResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulkPublishResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BulkPublishResponse::ArenaDtor(void* object) {
  BulkPublishResponse* _this = reinterpret_cast< BulkPublishResponse* >(object);
  (void)_this;
}
void BulkPublishResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulkPublishResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkPublishResponse& BulkPublishResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkPublishResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void BulkPublishResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BulkPublishResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  failedentries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkPublishResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_failedentries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkPublishResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BulkPublishResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_failedentries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_failedentries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BulkPublishResponse)
  return target;
}

size_t BulkPublishResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BulkPublishResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
  total_size += 1UL * this->_internal_failedentries_size();
  for (const auto& msg : this->failedentries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkPublishResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BulkPublishResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkPublishResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkPublishResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BulkPublishResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BulkPublishResponse)
    MergeFrom(*source);
  }
}

void BulkPublishResponse::MergeFrom(const BulkPublishResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BulkPublishResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  failedentries_.MergeFrom(from.failedentries_);
}

void BulkPublishResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BulkPublishResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkPublishResponse::CopyFrom(const BulkPublishResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BulkPublishResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkPublishResponse::IsInitialized() const {
  return true;
}

void BulkPublishResponse::InternalSwap(BulkPublishResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  failedentries_.InternalSwap(&other->failedentries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkPublishResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BulkPublishResponseFailedEntry::InitAsDefaultInstance() {
}
class BulkPublishResponseFailedEntry::_Internal {
 public:
};

BulkPublishResponseFailedEntry::BulkPublishResponseFailedEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
}
BulkPublishResponseFailedEntry::BulkPublishResponseFailedEntry(const BulkPublishResponseFailedEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_entry_id().empty()) {
    entry_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_entry_id(),
      GetArena());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
}

void BulkPublishResponseFailedEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BulkPublishResponseFailedEntry::~BulkPublishResponseFailedEntry() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulkPublishResponseFailedEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  entry_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BulkPublishResponseFailedEntry::ArenaDtor(void* object) {
  BulkPublishResponseFailedEntry* _this = reinterpret_cast< BulkPublishResponseFailedEntry* >(object);
  (void)_this;
}
void BulkPublishResponseFailedEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulkPublishResponseFailedEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkPublishResponseFailedEntry& BulkPublishResponseFailedEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkPublishResponseFailedEntry_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void BulkPublishResponseFailedEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkPublishResponseFailedEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string entry_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_entry_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkPublishResponseFailedEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entry_id().data(), static_cast<int>(this->_internal_entry_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entry_id(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  return target;
}

size_t BulkPublishResponseFailedEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entry_id());
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkPublishResponseFailedEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkPublishResponseFailedEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkPublishResponseFailedEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
    MergeFrom(*source);
  }
}

void BulkPublishResponseFailedEntry::MergeFrom(const BulkPublishResponseFailedEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entry_id().size() > 0) {
    _internal_set_entry_id(from._internal_entry_id());
  }
  if (from.error().size() > 0) {
    _internal_set_error(from._internal_error());
  }
}

void BulkPublishResponseFailedEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkPublishResponseFailedEntry::CopyFrom(const BulkPublishResponseFailedEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkPublishResponseFailedEntry::IsInitialized() const {
  return true;
}

void BulkPublishResponseFailedEntry::InternalSwap(BulkPublishResponseFailedEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entry_id_.Swap(&other->entry_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_.Swap(&other->error_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkPublishResponseFailedEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeTopicEventsRequestAlpha1::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestAlpha1_default_instance_.initial_request_ = const_cast< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1*>(
      ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1::internal_default_instance());
  ::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestAlpha1_default_instance_.event_processed_ = const_cast< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1*>(
      ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1::internal_default_instance());
}
class SubscribeTopicEventsRequestAlpha1::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1& initial_request(const SubscribeTopicEventsRequestAlpha1* msg);
  static const ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1& event_processed(const SubscribeTopicEventsRequestAlpha1* msg);
};

const ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1&
SubscribeTopicEventsRequestAlpha1::_Internal::initial_request(const SubscribeTopicEventsRequestAlpha1* msg) {
  return *msg->subscribe_topic_events_request_type_.initial_request_;
}
const ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1&
SubscribeTopicEventsRequestAlpha1::_Internal::event_processed(const SubscribeTopicEventsRequestAlpha1* msg) {
  return *msg->subscribe_topic_events_request_type_.event_processed_;
}
void SubscribeTopicEventsRequestAlpha1::set_allocated_initial_request(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1* initial_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_subscribe_topic_events_request_type();
  if (initial_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(initial_request);
    if (message_arena != submessage_arena) {
      initial_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, initial_request, submessage_arena);
    }
    set_has_initial_request();
    subscribe_topic_events_request_type_.initial_request_ = initial_request;
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1.initial_request)
}
void SubscribeTopicEventsRequestAlpha1::set_allocated_event_processed(::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1* event_processed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_subscribe_topic_events_request_type();
  if (event_processed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(event_processed);
    if (message_arena != submessage_arena) {
      event_processed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event_processed, submessage_arena);
    }
    set_has_event_processed();
    subscribe_topic_events_request_type_.event_processed_ = event_processed;
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1.event_processed)
}
SubscribeTopicEventsRequestAlpha1::SubscribeTopicEventsRequestAlpha1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
}
SubscribeTopicEventsRequestAlpha1::SubscribeTopicEventsRequestAlpha1(const SubscribeTopicEventsRequestAlpha1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_subscribe_topic_events_request_type();
  switch (from.subscribe_topic_events_request_type_case()) {
    case kInitialRequest: {
      _internal_mutable_initial_request()->::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1::MergeFrom(from._internal_initial_request());
      break;
    }
    case kEventProcessed: {
      _internal_mutable_event_processed()->::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1::MergeFrom(from._internal_event_processed());
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
}

void SubscribeTopicEventsRequestAlpha1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeTopicEventsRequestAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  clear_has_subscribe_topic_events_request_type();
}

SubscribeTopicEventsRequestAlpha1::~SubscribeTopicEventsRequestAlpha1() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeTopicEventsRequestAlpha1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_subscribe_topic_events_request_type()) {
    clear_subscribe_topic_events_request_type();
  }
}

void SubscribeTopicEventsRequestAlpha1::ArenaDtor(void* object) {
  SubscribeTopicEventsRequestAlpha1* _this = reinterpret_cast< SubscribeTopicEventsRequestAlpha1* >(object);
  (void)_this;
}
void SubscribeTopicEventsRequestAlpha1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeTopicEventsRequestAlpha1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeTopicEventsRequestAlpha1& SubscribeTopicEventsRequestAlpha1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeTopicEventsRequestAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeTopicEventsRequestAlpha1::clear_subscribe_topic_events_request_type() {
// @@protoc_insertion_point(one_of_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  switch (subscribe_topic_events_request_type_case()) {
    case kInitialRequest: {
      if (GetArena() == nullptr) {
        delete subscribe_topic_events_request_type_.initial_request_;
      }
      break;
    }
    case kEventProcessed: {
      if (GetArena() == nullptr) {
        delete subscribe_topic_events_request_type_.event_processed_;
      }
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBSCRIBE_TOPIC_EVENTS_REQUEST_TYPE_NOT_SET;
}


void SubscribeTopicEventsRequestAlpha1::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_subscribe_topic_events_request_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeTopicEventsRequestAlpha1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1 initial_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1 event_processed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_event_processed(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeTopicEventsRequestAlpha1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1 initial_request = 1;
  if (_internal_has_initial_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::initial_request(this), target, stream);
  }

  // .dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1 event_processed = 2;
  if (_internal_has_event_processed()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::event_processed(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  return target;
}

size_t SubscribeTopicEventsRequestAlpha1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (subscribe_topic_events_request_type_case()) {
    // .dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1 initial_request = 1;
    case kInitialRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *subscribe_topic_events_request_type_.initial_request_);
      break;
    }
    // .dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1 event_processed = 2;
    case kEventProcessed: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *subscribe_topic_events_request_type_.event_processed_);
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeTopicEventsRequestAlpha1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeTopicEventsRequestAlpha1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeTopicEventsRequestAlpha1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
    MergeFrom(*source);
  }
}

void SubscribeTopicEventsRequestAlpha1::MergeFrom(const SubscribeTopicEventsRequestAlpha1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.subscribe_topic_events_request_type_case()) {
    case kInitialRequest: {
      _internal_mutable_initial_request()->::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1::MergeFrom(from._internal_initial_request());
      break;
    }
    case kEventProcessed: {
      _internal_mutable_event_processed()->::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1::MergeFrom(from._internal_event_processed());
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
}

void SubscribeTopicEventsRequestAlpha1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeTopicEventsRequestAlpha1::CopyFrom(const SubscribeTopicEventsRequestAlpha1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeTopicEventsRequestAlpha1::IsInitialized() const {
  return true;
}

void SubscribeTopicEventsRequestAlpha1::InternalSwap(SubscribeTopicEventsRequestAlpha1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscribe_topic_events_request_type_, other->subscribe_topic_events_request_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTopicEventsRequestAlpha1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse() {}
SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::MergeFrom(const SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SubscribeTopicEventsRequestInitialAlpha1::InitAsDefaultInstance() {
}
class SubscribeTopicEventsRequestInitialAlpha1::_Internal {
 public:
  using HasBits = decltype(std::declval<SubscribeTopicEventsRequestInitialAlpha1>()._has_bits_);
  static void set_has_dead_letter_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SubscribeTopicEventsRequestInitialAlpha1::SubscribeTopicEventsRequestInitialAlpha1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
}
SubscribeTopicEventsRequestInitialAlpha1::SubscribeTopicEventsRequestInitialAlpha1(const SubscribeTopicEventsRequestInitialAlpha1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  dead_letter_topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_dead_letter_topic()) {
    dead_letter_topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dead_letter_topic(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
}

void SubscribeTopicEventsRequestInitialAlpha1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubscribeTopicEventsRequestInitialAlpha1::~SubscribeTopicEventsRequestInitialAlpha1() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeTopicEventsRequestInitialAlpha1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubscribeTopicEventsRequestInitialAlpha1::ArenaDtor(void* object) {
  SubscribeTopicEventsRequestInitialAlpha1* _this = reinterpret_cast< SubscribeTopicEventsRequestInitialAlpha1* >(object);
  (void)_this;
}
void SubscribeTopicEventsRequestInitialAlpha1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeTopicEventsRequestInitialAlpha1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeTopicEventsRequestInitialAlpha1& SubscribeTopicEventsRequestInitialAlpha1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeTopicEventsRequestInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeTopicEventsRequestInitialAlpha1::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    dead_letter_topic_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeTopicEventsRequestInitialAlpha1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pubsub_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string dead_letter_topic = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_dead_letter_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.dead_letter_topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeTopicEventsRequestInitialAlpha1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pubsub_name(), target);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.topic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_topic(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string dead_letter_topic = 4;
  if (_internal_has_dead_letter_topic()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dead_letter_topic().data(), static_cast<int>(this->_internal_dead_letter_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1.dead_letter_topic");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_dead_letter_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  return target;
}

size_t SubscribeTopicEventsRequestInitialAlpha1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // string dead_letter_topic = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dead_letter_topic());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeTopicEventsRequestInitialAlpha1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeTopicEventsRequestInitialAlpha1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeTopicEventsRequestInitialAlpha1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
    MergeFrom(*source);
  }
}

void SubscribeTopicEventsRequestInitialAlpha1::MergeFrom(const SubscribeTopicEventsRequestInitialAlpha1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
  if (from._internal_has_dead_letter_topic()) {
    _internal_set_dead_letter_topic(from._internal_dead_letter_topic());
  }
}

void SubscribeTopicEventsRequestInitialAlpha1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeTopicEventsRequestInitialAlpha1::CopyFrom(const SubscribeTopicEventsRequestInitialAlpha1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestInitialAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeTopicEventsRequestInitialAlpha1::IsInitialized() const {
  return true;
}

void SubscribeTopicEventsRequestInitialAlpha1::InternalSwap(SubscribeTopicEventsRequestInitialAlpha1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  metadata_.Swap(&other->metadata_);
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dead_letter_topic_.Swap(&other->dead_letter_topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTopicEventsRequestInitialAlpha1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeTopicEventsRequestProcessedAlpha1::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_SubscribeTopicEventsRequestProcessedAlpha1_default_instance_._instance.get_mutable()->status_ = const_cast< ::dapr::proto::runtime::v1::TopicEventResponse*>(
      ::dapr::proto::runtime::v1::TopicEventResponse::internal_default_instance());
}
class SubscribeTopicEventsRequestProcessedAlpha1::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::TopicEventResponse& status(const SubscribeTopicEventsRequestProcessedAlpha1* msg);
};

const ::dapr::proto::runtime::v1::TopicEventResponse&
SubscribeTopicEventsRequestProcessedAlpha1::_Internal::status(const SubscribeTopicEventsRequestProcessedAlpha1* msg) {
  return *msg->status_;
}
void SubscribeTopicEventsRequestProcessedAlpha1::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
SubscribeTopicEventsRequestProcessedAlpha1::SubscribeTopicEventsRequestProcessedAlpha1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
}
SubscribeTopicEventsRequestProcessedAlpha1::SubscribeTopicEventsRequestProcessedAlpha1(const SubscribeTopicEventsRequestProcessedAlpha1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::dapr::proto::runtime::v1::TopicEventResponse(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
}

void SubscribeTopicEventsRequestProcessedAlpha1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

SubscribeTopicEventsRequestProcessedAlpha1::~SubscribeTopicEventsRequestProcessedAlpha1() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeTopicEventsRequestProcessedAlpha1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void SubscribeTopicEventsRequestProcessedAlpha1::ArenaDtor(void* object) {
  SubscribeTopicEventsRequestProcessedAlpha1* _this = reinterpret_cast< SubscribeTopicEventsRequestProcessedAlpha1* >(object);
  (void)_this;
}
void SubscribeTopicEventsRequestProcessedAlpha1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeTopicEventsRequestProcessedAlpha1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeTopicEventsRequestProcessedAlpha1& SubscribeTopicEventsRequestProcessedAlpha1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeTopicEventsRequestProcessedAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeTopicEventsRequestProcessedAlpha1::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeTopicEventsRequestProcessedAlpha1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.TopicEventResponse status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeTopicEventsRequestProcessedAlpha1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .dapr.proto.runtime.v1.TopicEventResponse status = 2;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  return target;
}

size_t SubscribeTopicEventsRequestProcessedAlpha1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .dapr.proto.runtime.v1.TopicEventResponse status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeTopicEventsRequestProcessedAlpha1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeTopicEventsRequestProcessedAlpha1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeTopicEventsRequestProcessedAlpha1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
    MergeFrom(*source);
  }
}

void SubscribeTopicEventsRequestProcessedAlpha1::MergeFrom(const SubscribeTopicEventsRequestProcessedAlpha1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::dapr::proto::runtime::v1::TopicEventResponse::MergeFrom(from._internal_status());
  }
}

void SubscribeTopicEventsRequestProcessedAlpha1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeTopicEventsRequestProcessedAlpha1::CopyFrom(const SubscribeTopicEventsRequestProcessedAlpha1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsRequestProcessedAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeTopicEventsRequestProcessedAlpha1::IsInitialized() const {
  return true;
}

void SubscribeTopicEventsRequestProcessedAlpha1::InternalSwap(SubscribeTopicEventsRequestProcessedAlpha1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTopicEventsRequestProcessedAlpha1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeTopicEventsResponseAlpha1::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_SubscribeTopicEventsResponseAlpha1_default_instance_.initial_response_ = const_cast< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1*>(
      ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1::internal_default_instance());
  ::dapr::proto::runtime::v1::_SubscribeTopicEventsResponseAlpha1_default_instance_.event_message_ = const_cast< ::dapr::proto::runtime::v1::TopicEventRequest*>(
      ::dapr::proto::runtime::v1::TopicEventRequest::internal_default_instance());
}
class SubscribeTopicEventsResponseAlpha1::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1& initial_response(const SubscribeTopicEventsResponseAlpha1* msg);
  static const ::dapr::proto::runtime::v1::TopicEventRequest& event_message(const SubscribeTopicEventsResponseAlpha1* msg);
};

const ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1&
SubscribeTopicEventsResponseAlpha1::_Internal::initial_response(const SubscribeTopicEventsResponseAlpha1* msg) {
  return *msg->subscribe_topic_events_response_type_.initial_response_;
}
const ::dapr::proto::runtime::v1::TopicEventRequest&
SubscribeTopicEventsResponseAlpha1::_Internal::event_message(const SubscribeTopicEventsResponseAlpha1* msg) {
  return *msg->subscribe_topic_events_response_type_.event_message_;
}
void SubscribeTopicEventsResponseAlpha1::set_allocated_initial_response(::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1* initial_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_subscribe_topic_events_response_type();
  if (initial_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(initial_response);
    if (message_arena != submessage_arena) {
      initial_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, initial_response, submessage_arena);
    }
    set_has_initial_response();
    subscribe_topic_events_response_type_.initial_response_ = initial_response;
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1.initial_response)
}
void SubscribeTopicEventsResponseAlpha1::set_allocated_event_message(::dapr::proto::runtime::v1::TopicEventRequest* event_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_subscribe_topic_events_response_type();
  if (event_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event_message)->GetArena();
    if (message_arena != submessage_arena) {
      event_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event_message, submessage_arena);
    }
    set_has_event_message();
    subscribe_topic_events_response_type_.event_message_ = event_message;
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1.event_message)
}
void SubscribeTopicEventsResponseAlpha1::clear_event_message() {
  if (_internal_has_event_message()) {
    if (GetArena() == nullptr) {
      delete subscribe_topic_events_response_type_.event_message_;
    }
    clear_has_subscribe_topic_events_response_type();
  }
}
SubscribeTopicEventsResponseAlpha1::SubscribeTopicEventsResponseAlpha1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
}
SubscribeTopicEventsResponseAlpha1::SubscribeTopicEventsResponseAlpha1(const SubscribeTopicEventsResponseAlpha1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_subscribe_topic_events_response_type();
  switch (from.subscribe_topic_events_response_type_case()) {
    case kInitialResponse: {
      _internal_mutable_initial_response()->::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1::MergeFrom(from._internal_initial_response());
      break;
    }
    case kEventMessage: {
      _internal_mutable_event_message()->::dapr::proto::runtime::v1::TopicEventRequest::MergeFrom(from._internal_event_message());
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
}

void SubscribeTopicEventsResponseAlpha1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeTopicEventsResponseAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  clear_has_subscribe_topic_events_response_type();
}

SubscribeTopicEventsResponseAlpha1::~SubscribeTopicEventsResponseAlpha1() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeTopicEventsResponseAlpha1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_subscribe_topic_events_response_type()) {
    clear_subscribe_topic_events_response_type();
  }
}

void SubscribeTopicEventsResponseAlpha1::ArenaDtor(void* object) {
  SubscribeTopicEventsResponseAlpha1* _this = reinterpret_cast< SubscribeTopicEventsResponseAlpha1* >(object);
  (void)_this;
}
void SubscribeTopicEventsResponseAlpha1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeTopicEventsResponseAlpha1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeTopicEventsResponseAlpha1& SubscribeTopicEventsResponseAlpha1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeTopicEventsResponseAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeTopicEventsResponseAlpha1::clear_subscribe_topic_events_response_type() {
// @@protoc_insertion_point(one_of_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  switch (subscribe_topic_events_response_type_case()) {
    case kInitialResponse: {
      if (GetArena() == nullptr) {
        delete subscribe_topic_events_response_type_.initial_response_;
      }
      break;
    }
    case kEventMessage: {
      if (GetArena() == nullptr) {
        delete subscribe_topic_events_response_type_.event_message_;
      }
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBSCRIBE_TOPIC_EVENTS_RESPONSE_TYPE_NOT_SET;
}


void SubscribeTopicEventsResponseAlpha1::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_subscribe_topic_events_response_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeTopicEventsResponseAlpha1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1 initial_response = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.TopicEventRequest event_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_event_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeTopicEventsResponseAlpha1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1 initial_response = 1;
  if (_internal_has_initial_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::initial_response(this), target, stream);
  }

  // .dapr.proto.runtime.v1.TopicEventRequest event_message = 2;
  if (_internal_has_event_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::event_message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  return target;
}

size_t SubscribeTopicEventsResponseAlpha1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (subscribe_topic_events_response_type_case()) {
    // .dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1 initial_response = 1;
    case kInitialResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *subscribe_topic_events_response_type_.initial_response_);
      break;
    }
    // .dapr.proto.runtime.v1.TopicEventRequest event_message = 2;
    case kEventMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *subscribe_topic_events_response_type_.event_message_);
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeTopicEventsResponseAlpha1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeTopicEventsResponseAlpha1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeTopicEventsResponseAlpha1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
    MergeFrom(*source);
  }
}

void SubscribeTopicEventsResponseAlpha1::MergeFrom(const SubscribeTopicEventsResponseAlpha1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.subscribe_topic_events_response_type_case()) {
    case kInitialResponse: {
      _internal_mutable_initial_response()->::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1::MergeFrom(from._internal_initial_response());
      break;
    }
    case kEventMessage: {
      _internal_mutable_event_message()->::dapr::proto::runtime::v1::TopicEventRequest::MergeFrom(from._internal_event_message());
      break;
    }
    case SUBSCRIBE_TOPIC_EVENTS_RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
}

void SubscribeTopicEventsResponseAlpha1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeTopicEventsResponseAlpha1::CopyFrom(const SubscribeTopicEventsResponseAlpha1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeTopicEventsResponseAlpha1::IsInitialized() const {
  return true;
}

void SubscribeTopicEventsResponseAlpha1::InternalSwap(SubscribeTopicEventsResponseAlpha1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscribe_topic_events_response_type_, other->subscribe_topic_events_response_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTopicEventsResponseAlpha1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeTopicEventsResponseInitialAlpha1::InitAsDefaultInstance() {
}
class SubscribeTopicEventsResponseInitialAlpha1::_Internal {
 public:
};

SubscribeTopicEventsResponseInitialAlpha1::SubscribeTopicEventsResponseInitialAlpha1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
}
SubscribeTopicEventsResponseInitialAlpha1::SubscribeTopicEventsResponseInitialAlpha1(const SubscribeTopicEventsResponseInitialAlpha1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
}

void SubscribeTopicEventsResponseInitialAlpha1::SharedCtor() {
}

SubscribeTopicEventsResponseInitialAlpha1::~SubscribeTopicEventsResponseInitialAlpha1() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeTopicEventsResponseInitialAlpha1::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubscribeTopicEventsResponseInitialAlpha1::ArenaDtor(void* object) {
  SubscribeTopicEventsResponseInitialAlpha1* _this = reinterpret_cast< SubscribeTopicEventsResponseInitialAlpha1* >(object);
  (void)_this;
}
void SubscribeTopicEventsResponseInitialAlpha1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeTopicEventsResponseInitialAlpha1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeTopicEventsResponseInitialAlpha1& SubscribeTopicEventsResponseInitialAlpha1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeTopicEventsResponseInitialAlpha1_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeTopicEventsResponseInitialAlpha1::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeTopicEventsResponseInitialAlpha1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeTopicEventsResponseInitialAlpha1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  return target;
}

size_t SubscribeTopicEventsResponseInitialAlpha1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeTopicEventsResponseInitialAlpha1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeTopicEventsResponseInitialAlpha1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeTopicEventsResponseInitialAlpha1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
    MergeFrom(*source);
  }
}

void SubscribeTopicEventsResponseInitialAlpha1::MergeFrom(const SubscribeTopicEventsResponseInitialAlpha1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SubscribeTopicEventsResponseInitialAlpha1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeTopicEventsResponseInitialAlpha1::CopyFrom(const SubscribeTopicEventsResponseInitialAlpha1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeTopicEventsResponseInitialAlpha1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeTopicEventsResponseInitialAlpha1::IsInitialized() const {
  return true;
}

void SubscribeTopicEventsResponseInitialAlpha1::InternalSwap(SubscribeTopicEventsResponseInitialAlpha1* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeTopicEventsResponseInitialAlpha1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InvokeBindingRequest_MetadataEntry_DoNotUse::InvokeBindingRequest_MetadataEntry_DoNotUse() {}
InvokeBindingRequest_MetadataEntry_DoNotUse::InvokeBindingRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InvokeBindingRequest_MetadataEntry_DoNotUse::MergeFrom(const InvokeBindingRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InvokeBindingRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void InvokeBindingRequest::InitAsDefaultInstance() {
}
class InvokeBindingRequest::_Internal {
 public:
};

InvokeBindingRequest::InvokeBindingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.InvokeBindingRequest)
}
InvokeBindingRequest::InvokeBindingRequest(const InvokeBindingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_operation().empty()) {
    operation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_operation(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.InvokeBindingRequest)
}

void InvokeBindingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeBindingRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InvokeBindingRequest::~InvokeBindingRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.InvokeBindingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeBindingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvokeBindingRequest::ArenaDtor(void* object) {
  InvokeBindingRequest* _this = reinterpret_cast< InvokeBindingRequest* >(object);
  (void)_this;
}
void InvokeBindingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeBindingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeBindingRequest& InvokeBindingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeBindingRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void InvokeBindingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  operation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeBindingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.InvokeBindingRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string operation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_operation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.InvokeBindingRequest.operation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeBindingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.InvokeBindingRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.InvokeBindingRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.InvokeBindingRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InvokeBindingRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = InvokeBindingRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string operation = 4;
  if (this->operation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation().data(), static_cast<int>(this->_internal_operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.InvokeBindingRequest.operation");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.InvokeBindingRequest)
  return target;
}

size_t InvokeBindingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += InvokeBindingRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string operation = 4;
  if (this->operation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeBindingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeBindingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeBindingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.InvokeBindingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.InvokeBindingRequest)
    MergeFrom(*source);
  }
}

void InvokeBindingRequest::MergeFrom(const InvokeBindingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.operation().size() > 0) {
    _internal_set_operation(from._internal_operation());
  }
}

void InvokeBindingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeBindingRequest::CopyFrom(const InvokeBindingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.InvokeBindingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeBindingRequest::IsInitialized() const {
  return true;
}

void InvokeBindingRequest::InternalSwap(InvokeBindingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  operation_.Swap(&other->operation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InvokeBindingResponse_MetadataEntry_DoNotUse::InvokeBindingResponse_MetadataEntry_DoNotUse() {}
InvokeBindingResponse_MetadataEntry_DoNotUse::InvokeBindingResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InvokeBindingResponse_MetadataEntry_DoNotUse::MergeFrom(const InvokeBindingResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InvokeBindingResponse_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void InvokeBindingResponse::InitAsDefaultInstance() {
}
class InvokeBindingResponse::_Internal {
 public:
};

InvokeBindingResponse::InvokeBindingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.InvokeBindingResponse)
}
InvokeBindingResponse::InvokeBindingResponse(const InvokeBindingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.InvokeBindingResponse)
}

void InvokeBindingResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeBindingResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InvokeBindingResponse::~InvokeBindingResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.InvokeBindingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeBindingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvokeBindingResponse::ArenaDtor(void* object) {
  InvokeBindingResponse* _this = reinterpret_cast< InvokeBindingResponse* >(object);
  (void)_this;
}
void InvokeBindingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeBindingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeBindingResponse& InvokeBindingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeBindingResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void InvokeBindingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeBindingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeBindingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // map<string, string> metadata = 2;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.InvokeBindingResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.InvokeBindingResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InvokeBindingResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = InvokeBindingResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.InvokeBindingResponse)
  return target;
}

size_t InvokeBindingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += InvokeBindingResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeBindingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeBindingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeBindingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.InvokeBindingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.InvokeBindingResponse)
    MergeFrom(*source);
  }
}

void InvokeBindingResponse::MergeFrom(const InvokeBindingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void InvokeBindingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeBindingResponse::CopyFrom(const InvokeBindingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.InvokeBindingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeBindingResponse::IsInitialized() const {
  return true;
}

void InvokeBindingResponse::InternalSwap(InvokeBindingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeBindingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetSecretRequest_MetadataEntry_DoNotUse::GetSecretRequest_MetadataEntry_DoNotUse() {}
GetSecretRequest_MetadataEntry_DoNotUse::GetSecretRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetSecretRequest_MetadataEntry_DoNotUse::MergeFrom(const GetSecretRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetSecretRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetSecretRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetSecretRequest::InitAsDefaultInstance() {
}
class GetSecretRequest::_Internal {
 public:
};

GetSecretRequest::GetSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetSecretRequest)
}
GetSecretRequest::GetSecretRequest(const GetSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetSecretRequest)
}

void GetSecretRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSecretRequest::~GetSecretRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetSecretRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSecretRequest::ArenaDtor(void* object) {
  GetSecretRequest* _this = reinterpret_cast< GetSecretRequest* >(object);
  (void)_this;
}
void GetSecretRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSecretRequest& GetSecretRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetSecretRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSecretRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1[json_name = "storeName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetSecretRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetSecretRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSecretRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetSecretRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetSecretRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetSecretRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetSecretRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetSecretRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetSecretRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetSecretRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetSecretRequest)
  return target;
}

size_t GetSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetSecretRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetSecretRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSecretRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSecretRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSecretRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetSecretRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetSecretRequest)
    MergeFrom(*source);
  }
}

void GetSecretRequest::MergeFrom(const GetSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
}

void GetSecretRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSecretRequest::CopyFrom(const GetSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecretRequest::IsInitialized() const {
  return true;
}

void GetSecretRequest::InternalSwap(GetSecretRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecretRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetSecretResponse_DataEntry_DoNotUse::GetSecretResponse_DataEntry_DoNotUse() {}
GetSecretResponse_DataEntry_DoNotUse::GetSecretResponse_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetSecretResponse_DataEntry_DoNotUse::MergeFrom(const GetSecretResponse_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetSecretResponse_DataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetSecretResponse_DataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetSecretResponse::InitAsDefaultInstance() {
}
class GetSecretResponse::_Internal {
 public:
};

GetSecretResponse::GetSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetSecretResponse)
}
GetSecretResponse::GetSecretResponse(const GetSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetSecretResponse)
}

void GetSecretResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

GetSecretResponse::~GetSecretResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetSecretResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSecretResponse::ArenaDtor(void* object) {
  GetSecretResponse* _this = reinterpret_cast< GetSecretResponse* >(object);
  (void)_this;
}
void GetSecretResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSecretResponse& GetSecretResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetSecretResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSecretResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSecretResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetSecretResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> data = 1;
  if (!this->_internal_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetSecretResponse.DataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetSecretResponse.DataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetSecretResponse_DataEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it) {
        target = GetSecretResponse_DataEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetSecretResponse)
  return target;
}

size_t GetSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetSecretResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += GetSecretResponse_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSecretResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSecretResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSecretResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetSecretResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetSecretResponse)
    MergeFrom(*source);
  }
}

void GetSecretResponse::MergeFrom(const GetSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void GetSecretResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSecretResponse::CopyFrom(const GetSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecretResponse::IsInitialized() const {
  return true;
}

void GetSecretResponse::InternalSwap(GetSecretResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecretResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetBulkSecretRequest_MetadataEntry_DoNotUse::GetBulkSecretRequest_MetadataEntry_DoNotUse() {}
GetBulkSecretRequest_MetadataEntry_DoNotUse::GetBulkSecretRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetBulkSecretRequest_MetadataEntry_DoNotUse::MergeFrom(const GetBulkSecretRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetBulkSecretRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetBulkSecretRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetBulkSecretRequest::InitAsDefaultInstance() {
}
class GetBulkSecretRequest::_Internal {
 public:
};

GetBulkSecretRequest::GetBulkSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetBulkSecretRequest)
}
GetBulkSecretRequest::GetBulkSecretRequest(const GetBulkSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetBulkSecretRequest)
}

void GetBulkSecretRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBulkSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBulkSecretRequest::~GetBulkSecretRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetBulkSecretRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBulkSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBulkSecretRequest::ArenaDtor(void* object) {
  GetBulkSecretRequest* _this = reinterpret_cast< GetBulkSecretRequest* >(object);
  (void)_this;
}
void GetBulkSecretRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBulkSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBulkSecretRequest& GetBulkSecretRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBulkSecretRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetBulkSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBulkSecretRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1[json_name = "storeName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetBulkSecretRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBulkSecretRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetBulkSecretRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // map<string, string> metadata = 2;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetBulkSecretRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetBulkSecretRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetBulkSecretRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetBulkSecretRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetBulkSecretRequest)
  return target;
}

size_t GetBulkSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetBulkSecretRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBulkSecretRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBulkSecretRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBulkSecretRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetBulkSecretRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetBulkSecretRequest)
    MergeFrom(*source);
  }
}

void GetBulkSecretRequest::MergeFrom(const GetBulkSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
}

void GetBulkSecretRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBulkSecretRequest::CopyFrom(const GetBulkSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetBulkSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBulkSecretRequest::IsInitialized() const {
  return true;
}

void GetBulkSecretRequest::InternalSwap(GetBulkSecretRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBulkSecretRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SecretResponse_SecretsEntry_DoNotUse::SecretResponse_SecretsEntry_DoNotUse() {}
SecretResponse_SecretsEntry_DoNotUse::SecretResponse_SecretsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecretResponse_SecretsEntry_DoNotUse::MergeFrom(const SecretResponse_SecretsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecretResponse_SecretsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SecretResponse_SecretsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SecretResponse::InitAsDefaultInstance() {
}
class SecretResponse::_Internal {
 public:
};

SecretResponse::SecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  secrets_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SecretResponse)
}
SecretResponse::SecretResponse(const SecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  secrets_.MergeFrom(from.secrets_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SecretResponse)
}

void SecretResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

SecretResponse::~SecretResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SecretResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SecretResponse::ArenaDtor(void* object) {
  SecretResponse* _this = reinterpret_cast< SecretResponse* >(object);
  (void)_this;
}
void SecretResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SecretResponse& SecretResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SecretResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecretResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> secrets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&secrets_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SecretResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SecretResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> secrets = 1;
  if (!this->_internal_secrets().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SecretResponse.SecretsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SecretResponse.SecretsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_secrets().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_secrets().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_secrets().begin();
          it != this->_internal_secrets().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecretResponse_SecretsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_secrets().begin();
          it != this->_internal_secrets().end(); ++it) {
        target = SecretResponse_SecretsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SecretResponse)
  return target;
}

size_t SecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SecretResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> secrets = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_secrets_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_secrets().begin();
      it != this->_internal_secrets().end(); ++it) {
    total_size += SecretResponse_SecretsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecretResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SecretResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SecretResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SecretResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SecretResponse)
    MergeFrom(*source);
  }
}

void SecretResponse::MergeFrom(const SecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
}

void SecretResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecretResponse::CopyFrom(const SecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecretResponse::IsInitialized() const {
  return true;
}

void SecretResponse::InternalSwap(SecretResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  secrets_.Swap(&other->secrets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecretResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetBulkSecretResponse_DataEntry_DoNotUse::GetBulkSecretResponse_DataEntry_DoNotUse() {}
GetBulkSecretResponse_DataEntry_DoNotUse::GetBulkSecretResponse_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetBulkSecretResponse_DataEntry_DoNotUse::MergeFrom(const GetBulkSecretResponse_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetBulkSecretResponse_DataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetBulkSecretResponse_DataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetBulkSecretResponse::InitAsDefaultInstance() {
}
class GetBulkSecretResponse::_Internal {
 public:
};

GetBulkSecretResponse::GetBulkSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetBulkSecretResponse)
}
GetBulkSecretResponse::GetBulkSecretResponse(const GetBulkSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetBulkSecretResponse)
}

void GetBulkSecretResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBulkSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

GetBulkSecretResponse::~GetBulkSecretResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetBulkSecretResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBulkSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBulkSecretResponse::ArenaDtor(void* object) {
  GetBulkSecretResponse* _this = reinterpret_cast< GetBulkSecretResponse* >(object);
  (void)_this;
}
void GetBulkSecretResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBulkSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBulkSecretResponse& GetBulkSecretResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBulkSecretResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetBulkSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBulkSecretResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBulkSecretResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
  if (!this->_internal_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::runtime::v1::SecretResponse >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetBulkSecretResponse.DataEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::runtime::v1::SecretResponse >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::runtime::v1::SecretResponse >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetBulkSecretResponse_DataEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::runtime::v1::SecretResponse >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it) {
        target = GetBulkSecretResponse_DataEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetBulkSecretResponse)
  return target;
}

size_t GetBulkSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::runtime::v1::SecretResponse >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += GetBulkSecretResponse_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBulkSecretResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBulkSecretResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBulkSecretResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetBulkSecretResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetBulkSecretResponse)
    MergeFrom(*source);
  }
}

void GetBulkSecretResponse::MergeFrom(const GetBulkSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void GetBulkSecretResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBulkSecretResponse::CopyFrom(const GetBulkSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetBulkSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBulkSecretResponse::IsInitialized() const {
  return true;
}

void GetBulkSecretResponse::InternalSwap(GetBulkSecretResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBulkSecretResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransactionalStateOperation::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TransactionalStateOperation_default_instance_._instance.get_mutable()->request_ = const_cast< ::dapr::proto::common::v1::StateItem*>(
      ::dapr::proto::common::v1::StateItem::internal_default_instance());
}
class TransactionalStateOperation::_Internal {
 public:
  static const ::dapr::proto::common::v1::StateItem& request(const TransactionalStateOperation* msg);
};

const ::dapr::proto::common::v1::StateItem&
TransactionalStateOperation::_Internal::request(const TransactionalStateOperation* msg) {
  return *msg->request_;
}
void TransactionalStateOperation::clear_request() {
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
}
TransactionalStateOperation::TransactionalStateOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TransactionalStateOperation)
}
TransactionalStateOperation::TransactionalStateOperation(const TransactionalStateOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  operationtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_operationtype().empty()) {
    operationtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_operationtype(),
      GetArena());
  }
  if (from._internal_has_request()) {
    request_ = new ::dapr::proto::common::v1::StateItem(*from.request_);
  } else {
    request_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TransactionalStateOperation)
}

void TransactionalStateOperation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  operationtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  request_ = nullptr;
}

TransactionalStateOperation::~TransactionalStateOperation() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TransactionalStateOperation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionalStateOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  operationtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void TransactionalStateOperation::ArenaDtor(void* object) {
  TransactionalStateOperation* _this = reinterpret_cast< TransactionalStateOperation* >(object);
  (void)_this;
}
void TransactionalStateOperation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionalStateOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionalStateOperation& TransactionalStateOperation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionalStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void TransactionalStateOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operationtype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionalStateOperation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string operationType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_operationtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TransactionalStateOperation.operationType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StateItem request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionalStateOperation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operationType = 1;
  if (this->operationtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operationtype().data(), static_cast<int>(this->_internal_operationtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TransactionalStateOperation.operationType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operationtype(), target);
  }

  // .dapr.proto.common.v1.StateItem request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TransactionalStateOperation)
  return target;
}

size_t TransactionalStateOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operationType = 1;
  if (this->operationtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operationtype());
  }

  // .dapr.proto.common.v1.StateItem request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionalStateOperation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionalStateOperation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionalStateOperation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TransactionalStateOperation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TransactionalStateOperation)
    MergeFrom(*source);
  }
}

void TransactionalStateOperation::MergeFrom(const TransactionalStateOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operationtype().size() > 0) {
    _internal_set_operationtype(from._internal_operationtype());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::dapr::proto::common::v1::StateItem::MergeFrom(from._internal_request());
  }
}

void TransactionalStateOperation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionalStateOperation::CopyFrom(const TransactionalStateOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TransactionalStateOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionalStateOperation::IsInitialized() const {
  return true;
}

void TransactionalStateOperation::InternalSwap(TransactionalStateOperation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  operationtype_.Swap(&other->operationtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionalStateOperation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse() {}
ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::MergeFrom(const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ExecuteStateTransactionRequest::InitAsDefaultInstance() {
}
class ExecuteStateTransactionRequest::_Internal {
 public:
};

ExecuteStateTransactionRequest::ExecuteStateTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  operations_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
}
ExecuteStateTransactionRequest::ExecuteStateTransactionRequest(const ExecuteStateTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      operations_(from.operations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  storename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_storename().empty()) {
    storename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_storename(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
}

void ExecuteStateTransactionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecuteStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  storename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExecuteStateTransactionRequest::~ExecuteStateTransactionRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteStateTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  storename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExecuteStateTransactionRequest::ArenaDtor(void* object) {
  ExecuteStateTransactionRequest* _this = reinterpret_cast< ExecuteStateTransactionRequest* >(object);
  (void)_this;
}
void ExecuteStateTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteStateTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteStateTransactionRequest& ExecuteStateTransactionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ExecuteStateTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  metadata_.Clear();
  storename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteStateTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string storeName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_storename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteStateTransactionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string storeName = 1;
  if (this->storename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storename().data(), static_cast<int>(this->_internal_storename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_storename(), target);
  }

  // repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_operations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_operations(i), target, stream);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.ExecuteStateTransactionRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.ExecuteStateTransactionRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  return target;
}

size_t ExecuteStateTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += ExecuteStateTransactionRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteStateTransactionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteStateTransactionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteStateTransactionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
    MergeFrom(*source);
  }
}

void ExecuteStateTransactionRequest::MergeFrom(const ExecuteStateTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  metadata_.MergeFrom(from.metadata_);
  if (from.storename().size() > 0) {
    _internal_set_storename(from._internal_storename());
  }
}

void ExecuteStateTransactionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteStateTransactionRequest::CopyFrom(const ExecuteStateTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteStateTransactionRequest::IsInitialized() const {
  return true;
}

void ExecuteStateTransactionRequest::InternalSwap(ExecuteStateTransactionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  operations_.InternalSwap(&other->operations_);
  metadata_.Swap(&other->metadata_);
  storename_.Swap(&other->storename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteStateTransactionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterActorTimerRequest::InitAsDefaultInstance() {
}
class RegisterActorTimerRequest::_Internal {
 public:
};

RegisterActorTimerRequest::RegisterActorTimerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.RegisterActorTimerRequest)
}
RegisterActorTimerRequest::RegisterActorTimerRequest(const RegisterActorTimerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  due_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_due_time().empty()) {
    due_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_due_time(),
      GetArena());
  }
  period_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_period().empty()) {
    period_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_period(),
      GetArena());
  }
  callback_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_callback().empty()) {
    callback_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_callback(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  ttl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ttl().empty()) {
    ttl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ttl(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.RegisterActorTimerRequest)
}

void RegisterActorTimerRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  due_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  period_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ttl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterActorTimerRequest::~RegisterActorTimerRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterActorTimerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  due_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  period_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ttl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterActorTimerRequest::ArenaDtor(void* object) {
  RegisterActorTimerRequest* _this = reinterpret_cast< RegisterActorTimerRequest* >(object);
  (void)_this;
}
void RegisterActorTimerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterActorTimerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterActorTimerRequest& RegisterActorTimerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void RegisterActorTimerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  due_time_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  period_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  callback_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ttl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterActorTimerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string due_time = 4[json_name = "dueTime"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_due_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string period = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_period();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.period"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string callback = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_callback();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.callback"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ttl = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_ttl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterActorTimerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string due_time = 4[json_name = "dueTime"];
  if (this->due_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_due_time().data(), static_cast<int>(this->_internal_due_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_due_time(), target);
  }

  // string period = 5;
  if (this->period().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_period().data(), static_cast<int>(this->_internal_period().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.period");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_period(), target);
  }

  // string callback = 6;
  if (this->callback().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_callback().data(), static_cast<int>(this->_internal_callback().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.callback");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_callback(), target);
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_data(), target);
  }

  // string ttl = 8;
  if (this->ttl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ttl().data(), static_cast<int>(this->_internal_ttl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_ttl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  return target;
}

size_t RegisterActorTimerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string due_time = 4[json_name = "dueTime"];
  if (this->due_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_due_time());
  }

  // string period = 5;
  if (this->period().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_period());
  }

  // string callback = 6;
  if (this->callback().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_callback());
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string ttl = 8;
  if (this->ttl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ttl());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterActorTimerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterActorTimerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterActorTimerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.RegisterActorTimerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.RegisterActorTimerRequest)
    MergeFrom(*source);
  }
}

void RegisterActorTimerRequest::MergeFrom(const RegisterActorTimerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.due_time().size() > 0) {
    _internal_set_due_time(from._internal_due_time());
  }
  if (from.period().size() > 0) {
    _internal_set_period(from._internal_period());
  }
  if (from.callback().size() > 0) {
    _internal_set_callback(from._internal_callback());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.ttl().size() > 0) {
    _internal_set_ttl(from._internal_ttl());
  }
}

void RegisterActorTimerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterActorTimerRequest::CopyFrom(const RegisterActorTimerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.RegisterActorTimerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterActorTimerRequest::IsInitialized() const {
  return true;
}

void RegisterActorTimerRequest::InternalSwap(RegisterActorTimerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  due_time_.Swap(&other->due_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  period_.Swap(&other->period_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  callback_.Swap(&other->callback_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ttl_.Swap(&other->ttl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterActorTimerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnregisterActorTimerRequest::InitAsDefaultInstance() {
}
class UnregisterActorTimerRequest::_Internal {
 public:
};

UnregisterActorTimerRequest::UnregisterActorTimerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
}
UnregisterActorTimerRequest::UnregisterActorTimerRequest(const UnregisterActorTimerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
}

void UnregisterActorTimerRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnregisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnregisterActorTimerRequest::~UnregisterActorTimerRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnregisterActorTimerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnregisterActorTimerRequest::ArenaDtor(void* object) {
  UnregisterActorTimerRequest* _this = reinterpret_cast< UnregisterActorTimerRequest* >(object);
  (void)_this;
}
void UnregisterActorTimerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnregisterActorTimerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnregisterActorTimerRequest& UnregisterActorTimerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnregisterActorTimerRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void UnregisterActorTimerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnregisterActorTimerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnregisterActorTimerRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnregisterActorTimerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnregisterActorTimerRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  return target;
}

size_t UnregisterActorTimerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnregisterActorTimerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterActorTimerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnregisterActorTimerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
    MergeFrom(*source);
  }
}

void UnregisterActorTimerRequest::MergeFrom(const UnregisterActorTimerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void UnregisterActorTimerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterActorTimerRequest::CopyFrom(const UnregisterActorTimerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterActorTimerRequest::IsInitialized() const {
  return true;
}

void UnregisterActorTimerRequest::InternalSwap(UnregisterActorTimerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnregisterActorTimerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterActorReminderRequest::InitAsDefaultInstance() {
}
class RegisterActorReminderRequest::_Internal {
 public:
};

RegisterActorReminderRequest::RegisterActorReminderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.RegisterActorReminderRequest)
}
RegisterActorReminderRequest::RegisterActorReminderRequest(const RegisterActorReminderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  due_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_due_time().empty()) {
    due_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_due_time(),
      GetArena());
  }
  period_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_period().empty()) {
    period_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_period(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  ttl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ttl().empty()) {
    ttl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ttl(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.RegisterActorReminderRequest)
}

void RegisterActorReminderRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  due_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  period_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ttl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterActorReminderRequest::~RegisterActorReminderRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterActorReminderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  due_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  period_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ttl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterActorReminderRequest::ArenaDtor(void* object) {
  RegisterActorReminderRequest* _this = reinterpret_cast< RegisterActorReminderRequest* >(object);
  (void)_this;
}
void RegisterActorReminderRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterActorReminderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterActorReminderRequest& RegisterActorReminderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void RegisterActorReminderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  due_time_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  period_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ttl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterActorReminderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorReminderRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string due_time = 4[json_name = "dueTime"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_due_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string period = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_period();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorReminderRequest.period"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ttl = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_ttl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterActorReminderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorReminderRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string due_time = 4[json_name = "dueTime"];
  if (this->due_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_due_time().data(), static_cast<int>(this->_internal_due_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_due_time(), target);
  }

  // string period = 5;
  if (this->period().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_period().data(), static_cast<int>(this->_internal_period().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorReminderRequest.period");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_period(), target);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_data(), target);
  }

  // string ttl = 7;
  if (this->ttl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ttl().data(), static_cast<int>(this->_internal_ttl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_ttl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  return target;
}

size_t RegisterActorReminderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string due_time = 4[json_name = "dueTime"];
  if (this->due_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_due_time());
  }

  // string period = 5;
  if (this->period().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_period());
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string ttl = 7;
  if (this->ttl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ttl());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterActorReminderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterActorReminderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterActorReminderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.RegisterActorReminderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.RegisterActorReminderRequest)
    MergeFrom(*source);
  }
}

void RegisterActorReminderRequest::MergeFrom(const RegisterActorReminderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.due_time().size() > 0) {
    _internal_set_due_time(from._internal_due_time());
  }
  if (from.period().size() > 0) {
    _internal_set_period(from._internal_period());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.ttl().size() > 0) {
    _internal_set_ttl(from._internal_ttl());
  }
}

void RegisterActorReminderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterActorReminderRequest::CopyFrom(const RegisterActorReminderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.RegisterActorReminderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterActorReminderRequest::IsInitialized() const {
  return true;
}

void RegisterActorReminderRequest::InternalSwap(RegisterActorReminderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  due_time_.Swap(&other->due_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  period_.Swap(&other->period_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ttl_.Swap(&other->ttl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterActorReminderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnregisterActorReminderRequest::InitAsDefaultInstance() {
}
class UnregisterActorReminderRequest::_Internal {
 public:
};

UnregisterActorReminderRequest::UnregisterActorReminderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
}
UnregisterActorReminderRequest::UnregisterActorReminderRequest(const UnregisterActorReminderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
}

void UnregisterActorReminderRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnregisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnregisterActorReminderRequest::~UnregisterActorReminderRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnregisterActorReminderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnregisterActorReminderRequest::ArenaDtor(void* object) {
  UnregisterActorReminderRequest* _this = reinterpret_cast< UnregisterActorReminderRequest* >(object);
  (void)_this;
}
void UnregisterActorReminderRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnregisterActorReminderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnregisterActorReminderRequest& UnregisterActorReminderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnregisterActorReminderRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void UnregisterActorReminderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnregisterActorReminderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnregisterActorReminderRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnregisterActorReminderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnregisterActorReminderRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  return target;
}

size_t UnregisterActorReminderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnregisterActorReminderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterActorReminderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnregisterActorReminderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
    MergeFrom(*source);
  }
}

void UnregisterActorReminderRequest::MergeFrom(const UnregisterActorReminderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void UnregisterActorReminderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterActorReminderRequest::CopyFrom(const UnregisterActorReminderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterActorReminderRequest::IsInitialized() const {
  return true;
}

void UnregisterActorReminderRequest::InternalSwap(UnregisterActorReminderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnregisterActorReminderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActorStateRequest::InitAsDefaultInstance() {
}
class GetActorStateRequest::_Internal {
 public:
};

GetActorStateRequest::GetActorStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetActorStateRequest)
}
GetActorStateRequest::GetActorStateRequest(const GetActorStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetActorStateRequest)
}

void GetActorStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetActorStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetActorStateRequest::~GetActorStateRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetActorStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActorStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetActorStateRequest::ArenaDtor(void* object) {
  GetActorStateRequest* _this = reinterpret_cast< GetActorStateRequest* >(object);
  (void)_this;
}
void GetActorStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActorStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActorStateRequest& GetActorStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActorStateRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetActorStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetActorStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActorStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetActorStateRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetActorStateRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetActorStateRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActorStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetActorStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetActorStateRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetActorStateRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetActorStateRequest.key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetActorStateRequest)
  return target;
}

size_t GetActorStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetActorStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  // string key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActorStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetActorStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActorStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActorStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetActorStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetActorStateRequest)
    MergeFrom(*source);
  }
}

void GetActorStateRequest::MergeFrom(const GetActorStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetActorStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
}

void GetActorStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetActorStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActorStateRequest::CopyFrom(const GetActorStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetActorStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActorStateRequest::IsInitialized() const {
  return true;
}

void GetActorStateRequest::InternalSwap(GetActorStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActorStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetActorStateResponse_MetadataEntry_DoNotUse::GetActorStateResponse_MetadataEntry_DoNotUse() {}
GetActorStateResponse_MetadataEntry_DoNotUse::GetActorStateResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetActorStateResponse_MetadataEntry_DoNotUse::MergeFrom(const GetActorStateResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetActorStateResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetActorStateResponse_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetActorStateResponse::InitAsDefaultInstance() {
}
class GetActorStateResponse::_Internal {
 public:
};

GetActorStateResponse::GetActorStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetActorStateResponse)
}
GetActorStateResponse::GetActorStateResponse(const GetActorStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetActorStateResponse)
}

void GetActorStateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetActorStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetActorStateResponse::~GetActorStateResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetActorStateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActorStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetActorStateResponse::ArenaDtor(void* object) {
  GetActorStateResponse* _this = reinterpret_cast< GetActorStateResponse* >(object);
  (void)_this;
}
void GetActorStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActorStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActorStateResponse& GetActorStateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActorStateResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetActorStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetActorStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActorStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActorStateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetActorStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // map<string, string> metadata = 2;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetActorStateResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetActorStateResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetActorStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetActorStateResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetActorStateResponse)
  return target;
}

size_t GetActorStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetActorStateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetActorStateResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActorStateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetActorStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActorStateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActorStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetActorStateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetActorStateResponse)
    MergeFrom(*source);
  }
}

void GetActorStateResponse::MergeFrom(const GetActorStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetActorStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void GetActorStateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetActorStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActorStateResponse::CopyFrom(const GetActorStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetActorStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActorStateResponse::IsInitialized() const {
  return true;
}

void GetActorStateResponse::InternalSwap(GetActorStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActorStateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExecuteActorStateTransactionRequest::InitAsDefaultInstance() {
}
class ExecuteActorStateTransactionRequest::_Internal {
 public:
};

ExecuteActorStateTransactionRequest::ExecuteActorStateTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  operations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
}
ExecuteActorStateTransactionRequest::ExecuteActorStateTransactionRequest(const ExecuteActorStateTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      operations_(from.operations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
}

void ExecuteActorStateTransactionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExecuteActorStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExecuteActorStateTransactionRequest::~ExecuteActorStateTransactionRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExecuteActorStateTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExecuteActorStateTransactionRequest::ArenaDtor(void* object) {
  ExecuteActorStateTransactionRequest* _this = reinterpret_cast< ExecuteActorStateTransactionRequest* >(object);
  (void)_this;
}
void ExecuteActorStateTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteActorStateTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecuteActorStateTransactionRequest& ExecuteActorStateTransactionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExecuteActorStateTransactionRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ExecuteActorStateTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteActorStateTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExecuteActorStateTransactionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_operations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_operations(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  return target;
}

size_t ExecuteActorStateTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteActorStateTransactionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteActorStateTransactionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExecuteActorStateTransactionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
    MergeFrom(*source);
  }
}

void ExecuteActorStateTransactionRequest::MergeFrom(const ExecuteActorStateTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
}

void ExecuteActorStateTransactionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteActorStateTransactionRequest::CopyFrom(const ExecuteActorStateTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteActorStateTransactionRequest::IsInitialized() const {
  return true;
}

void ExecuteActorStateTransactionRequest::InternalSwap(ExecuteActorStateTransactionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  operations_.InternalSwap(&other->operations_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteActorStateTransactionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TransactionalActorStateOperation_MetadataEntry_DoNotUse::TransactionalActorStateOperation_MetadataEntry_DoNotUse() {}
TransactionalActorStateOperation_MetadataEntry_DoNotUse::TransactionalActorStateOperation_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TransactionalActorStateOperation_MetadataEntry_DoNotUse::MergeFrom(const TransactionalActorStateOperation_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TransactionalActorStateOperation_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TransactionalActorStateOperation_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TransactionalActorStateOperation::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TransactionalActorStateOperation_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class TransactionalActorStateOperation::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& value(const TransactionalActorStateOperation* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
TransactionalActorStateOperation::_Internal::value(const TransactionalActorStateOperation* msg) {
  return *msg->value_;
}
void TransactionalActorStateOperation::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
TransactionalActorStateOperation::TransactionalActorStateOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TransactionalActorStateOperation)
}
TransactionalActorStateOperation::TransactionalActorStateOperation(const TransactionalActorStateOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  operationtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_operationtype().empty()) {
    operationtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_operationtype(),
      GetArena());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::Any(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TransactionalActorStateOperation)
}

void TransactionalActorStateOperation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  operationtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = nullptr;
}

TransactionalActorStateOperation::~TransactionalActorStateOperation() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionalActorStateOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  operationtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void TransactionalActorStateOperation::ArenaDtor(void* object) {
  TransactionalActorStateOperation* _this = reinterpret_cast< TransactionalActorStateOperation* >(object);
  (void)_this;
}
void TransactionalActorStateOperation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionalActorStateOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionalActorStateOperation& TransactionalActorStateOperation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionalActorStateOperation_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void TransactionalActorStateOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  operationtype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionalActorStateOperation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string operationType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_operationtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TransactionalActorStateOperation.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionalActorStateOperation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operationType = 1;
  if (this->operationtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operationtype().data(), static_cast<int>(this->_internal_operationtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operationtype(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TransactionalActorStateOperation.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .google.protobuf.Any value = 3;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::value(this), target, stream);
  }

  // map<string, string> metadata = 4;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TransactionalActorStateOperation.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TransactionalActorStateOperation.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TransactionalActorStateOperation_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = TransactionalActorStateOperation_MetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  return target;
}

size_t TransactionalActorStateOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += TransactionalActorStateOperation_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string operationType = 1;
  if (this->operationtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operationtype());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .google.protobuf.Any value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionalActorStateOperation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionalActorStateOperation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionalActorStateOperation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TransactionalActorStateOperation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TransactionalActorStateOperation)
    MergeFrom(*source);
  }
}

void TransactionalActorStateOperation::MergeFrom(const TransactionalActorStateOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.operationtype().size() > 0) {
    _internal_set_operationtype(from._internal_operationtype());
  }
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_value());
  }
}

void TransactionalActorStateOperation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionalActorStateOperation::CopyFrom(const TransactionalActorStateOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TransactionalActorStateOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionalActorStateOperation::IsInitialized() const {
  return true;
}

void TransactionalActorStateOperation::InternalSwap(TransactionalActorStateOperation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  operationtype_.Swap(&other->operationtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionalActorStateOperation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InvokeActorRequest_MetadataEntry_DoNotUse::InvokeActorRequest_MetadataEntry_DoNotUse() {}
InvokeActorRequest_MetadataEntry_DoNotUse::InvokeActorRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InvokeActorRequest_MetadataEntry_DoNotUse::MergeFrom(const InvokeActorRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InvokeActorRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InvokeActorRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void InvokeActorRequest::InitAsDefaultInstance() {
}
class InvokeActorRequest::_Internal {
 public:
};

InvokeActorRequest::InvokeActorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.InvokeActorRequest)
}
InvokeActorRequest::InvokeActorRequest(const InvokeActorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_type().empty()) {
    actor_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_type(),
      GetArena());
  }
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_actor_id().empty()) {
    actor_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_actor_id(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.InvokeActorRequest)
}

void InvokeActorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeActorRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  actor_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InvokeActorRequest::~InvokeActorRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.InvokeActorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeActorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  actor_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvokeActorRequest::ArenaDtor(void* object) {
  InvokeActorRequest* _this = reinterpret_cast< InvokeActorRequest* >(object);
  (void)_this;
}
void InvokeActorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeActorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeActorRequest& InvokeActorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeActorRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void InvokeActorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.InvokeActorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  actor_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeActorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string actor_type = 1[json_name = "actorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_actor_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.InvokeActorRequest.actor_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_id = 2[json_name = "actorId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.InvokeActorRequest.actor_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.InvokeActorRequest.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeActorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.InvokeActorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_type().data(), static_cast<int>(this->_internal_actor_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.InvokeActorRequest.actor_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_type(), target);
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.InvokeActorRequest.actor_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_actor_id(), target);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.InvokeActorRequest.method");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_method(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.InvokeActorRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.InvokeActorRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InvokeActorRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = InvokeActorRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.InvokeActorRequest)
  return target;
}

size_t InvokeActorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.InvokeActorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += InvokeActorRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string actor_type = 1[json_name = "actorType"];
  if (this->actor_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_type());
  }

  // string actor_id = 2[json_name = "actorId"];
  if (this->actor_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  // string method = 3;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeActorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.InvokeActorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeActorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeActorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.InvokeActorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.InvokeActorRequest)
    MergeFrom(*source);
  }
}

void InvokeActorRequest::MergeFrom(const InvokeActorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.InvokeActorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.actor_type().size() > 0) {
    _internal_set_actor_type(from._internal_actor_type());
  }
  if (from.actor_id().size() > 0) {
    _internal_set_actor_id(from._internal_actor_id());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void InvokeActorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.InvokeActorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeActorRequest::CopyFrom(const InvokeActorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.InvokeActorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeActorRequest::IsInitialized() const {
  return true;
}

void InvokeActorRequest::InternalSwap(InvokeActorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  actor_type_.Swap(&other->actor_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  actor_id_.Swap(&other->actor_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeActorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InvokeActorResponse::InitAsDefaultInstance() {
}
class InvokeActorResponse::_Internal {
 public:
};

InvokeActorResponse::InvokeActorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.InvokeActorResponse)
}
InvokeActorResponse::InvokeActorResponse(const InvokeActorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.InvokeActorResponse)
}

void InvokeActorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InvokeActorResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InvokeActorResponse::~InvokeActorResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.InvokeActorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InvokeActorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvokeActorResponse::ArenaDtor(void* object) {
  InvokeActorResponse* _this = reinterpret_cast< InvokeActorResponse* >(object);
  (void)_this;
}
void InvokeActorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeActorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvokeActorResponse& InvokeActorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InvokeActorResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void InvokeActorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.InvokeActorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeActorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InvokeActorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.InvokeActorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.InvokeActorResponse)
  return target;
}

size_t InvokeActorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.InvokeActorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeActorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.InvokeActorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeActorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InvokeActorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.InvokeActorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.InvokeActorResponse)
    MergeFrom(*source);
  }
}

void InvokeActorResponse::MergeFrom(const InvokeActorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.InvokeActorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void InvokeActorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.InvokeActorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeActorResponse::CopyFrom(const InvokeActorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.InvokeActorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeActorResponse::IsInitialized() const {
  return true;
}

void InvokeActorResponse::InternalSwap(InvokeActorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeActorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMetadataRequest::InitAsDefaultInstance() {
}
class GetMetadataRequest::_Internal {
 public:
};

GetMetadataRequest::GetMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetMetadataRequest)
}
GetMetadataRequest::GetMetadataRequest(const GetMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetMetadataRequest)
}

void GetMetadataRequest::SharedCtor() {
}

GetMetadataRequest::~GetMetadataRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetMetadataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMetadataRequest::ArenaDtor(void* object) {
  GetMetadataRequest* _this = reinterpret_cast< GetMetadataRequest* >(object);
  (void)_this;
}
void GetMetadataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMetadataRequest& GetMetadataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMetadataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMetadataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetMetadataRequest)
  return target;
}

size_t GetMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetMetadataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetadataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetadataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMetadataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetMetadataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetMetadataRequest)
    MergeFrom(*source);
  }
}

void GetMetadataRequest::MergeFrom(const GetMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetMetadataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetadataRequest::CopyFrom(const GetMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetadataRequest::IsInitialized() const {
  return true;
}

void GetMetadataRequest::InternalSwap(GetMetadataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse() {}
GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::MergeFrom(const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetMetadataResponse::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_GetMetadataResponse_default_instance_._instance.get_mutable()->app_connection_properties_ = const_cast< ::dapr::proto::runtime::v1::AppConnectionProperties*>(
      ::dapr::proto::runtime::v1::AppConnectionProperties::internal_default_instance());
  ::dapr::proto::runtime::v1::_GetMetadataResponse_default_instance_._instance.get_mutable()->actor_runtime_ = const_cast< ::dapr::proto::runtime::v1::ActorRuntime*>(
      ::dapr::proto::runtime::v1::ActorRuntime::internal_default_instance());
}
class GetMetadataResponse::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::AppConnectionProperties& app_connection_properties(const GetMetadataResponse* msg);
  static const ::dapr::proto::runtime::v1::ActorRuntime& actor_runtime(const GetMetadataResponse* msg);
};

const ::dapr::proto::runtime::v1::AppConnectionProperties&
GetMetadataResponse::_Internal::app_connection_properties(const GetMetadataResponse* msg) {
  return *msg->app_connection_properties_;
}
const ::dapr::proto::runtime::v1::ActorRuntime&
GetMetadataResponse::_Internal::actor_runtime(const GetMetadataResponse* msg) {
  return *msg->actor_runtime_;
}
GetMetadataResponse::GetMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  active_actors_count_(arena),
  registered_components_(arena),
  extended_metadata_(arena),
  subscriptions_(arena),
  http_endpoints_(arena),
  enabled_features_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetMetadataResponse)
}
GetMetadataResponse::GetMetadataResponse(const GetMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      active_actors_count_(from.active_actors_count_),
      registered_components_(from.registered_components_),
      subscriptions_(from.subscriptions_),
      http_endpoints_(from.http_endpoints_),
      enabled_features_(from.enabled_features_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extended_metadata_.MergeFrom(from.extended_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  runtime_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_runtime_version().empty()) {
    runtime_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_runtime_version(),
      GetArena());
  }
  if (from._internal_has_app_connection_properties()) {
    app_connection_properties_ = new ::dapr::proto::runtime::v1::AppConnectionProperties(*from.app_connection_properties_);
  } else {
    app_connection_properties_ = nullptr;
  }
  if (from._internal_has_actor_runtime()) {
    actor_runtime_ = new ::dapr::proto::runtime::v1::ActorRuntime(*from.actor_runtime_);
  } else {
    actor_runtime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetMetadataResponse)
}

void GetMetadataResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMetadataResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  runtime_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_connection_properties_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actor_runtime_) -
      reinterpret_cast<char*>(&app_connection_properties_)) + sizeof(actor_runtime_));
}

GetMetadataResponse::~GetMetadataResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetMetadataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  runtime_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete app_connection_properties_;
  if (this != internal_default_instance()) delete actor_runtime_;
}

void GetMetadataResponse::ArenaDtor(void* object) {
  GetMetadataResponse* _this = reinterpret_cast< GetMetadataResponse* >(object);
  (void)_this;
}
void GetMetadataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMetadataResponse& GetMetadataResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMetadataResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetMetadataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  active_actors_count_.Clear();
  registered_components_.Clear();
  extended_metadata_.Clear();
  subscriptions_.Clear();
  http_endpoints_.Clear();
  enabled_features_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  runtime_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && app_connection_properties_ != nullptr) {
    delete app_connection_properties_;
  }
  app_connection_properties_ = nullptr;
  if (GetArena() == nullptr && actor_runtime_ != nullptr) {
    delete actor_runtime_;
  }
  actor_runtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMetadataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetMetadataResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2[json_name = "actors", deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_active_actors_count(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3[json_name = "components"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_registered_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> extended_metadata = 4[json_name = "extended"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extended_metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5[json_name = "subscriptions"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subscriptions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.MetadataHTTPEndpoint http_endpoints = 6[json_name = "httpEndpoints"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_http_endpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.AppConnectionProperties app_connection_properties = 7[json_name = "appConnectionProperties"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_connection_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string runtime_version = 8[json_name = "runtimeVersion"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_runtime_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetMetadataResponse.runtime_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string enabled_features = 9[json_name = "enabledFeatures"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_enabled_features();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetMetadataResponse.enabled_features"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.ActorRuntime actor_runtime = 10[json_name = "actorRuntime"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_actor_runtime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMetadataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetMetadataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetMetadataResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2[json_name = "actors", deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_active_actors_count_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_active_actors_count(i), target, stream);
  }

  // repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3[json_name = "components"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_registered_components_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_registered_components(i), target, stream);
  }

  // map<string, string> extended_metadata = 4[json_name = "extended"];
  if (!this->_internal_extended_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetMetadataResponse.ExtendedMetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetMetadataResponse.ExtendedMetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extended_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extended_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_extended_metadata().begin();
          it != this->_internal_extended_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_extended_metadata().begin();
          it != this->_internal_extended_metadata().end(); ++it) {
        target = GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5[json_name = "subscriptions"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subscriptions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_subscriptions(i), target, stream);
  }

  // repeated .dapr.proto.runtime.v1.MetadataHTTPEndpoint http_endpoints = 6[json_name = "httpEndpoints"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_http_endpoints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_http_endpoints(i), target, stream);
  }

  // .dapr.proto.runtime.v1.AppConnectionProperties app_connection_properties = 7[json_name = "appConnectionProperties"];
  if (this->has_app_connection_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::app_connection_properties(this), target, stream);
  }

  // string runtime_version = 8[json_name = "runtimeVersion"];
  if (this->runtime_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runtime_version().data(), static_cast<int>(this->_internal_runtime_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetMetadataResponse.runtime_version");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_runtime_version(), target);
  }

  // repeated string enabled_features = 9[json_name = "enabledFeatures"];
  for (int i = 0, n = this->_internal_enabled_features_size(); i < n; i++) {
    const auto& s = this->_internal_enabled_features(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetMetadataResponse.enabled_features");
    target = stream->WriteString(9, s, target);
  }

  // .dapr.proto.runtime.v1.ActorRuntime actor_runtime = 10[json_name = "actorRuntime"];
  if (this->has_actor_runtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::actor_runtime(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetMetadataResponse)
  return target;
}

size_t GetMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetMetadataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2[json_name = "actors", deprecated = true];
  total_size += 1UL * this->_internal_active_actors_count_size();
  for (const auto& msg : this->active_actors_count_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3[json_name = "components"];
  total_size += 1UL * this->_internal_registered_components_size();
  for (const auto& msg : this->registered_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> extended_metadata = 4[json_name = "extended"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extended_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_extended_metadata().begin();
      it != this->_internal_extended_metadata().end(); ++it) {
    total_size += GetMetadataResponse_ExtendedMetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5[json_name = "subscriptions"];
  total_size += 1UL * this->_internal_subscriptions_size();
  for (const auto& msg : this->subscriptions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .dapr.proto.runtime.v1.MetadataHTTPEndpoint http_endpoints = 6[json_name = "httpEndpoints"];
  total_size += 1UL * this->_internal_http_endpoints_size();
  for (const auto& msg : this->http_endpoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string enabled_features = 9[json_name = "enabledFeatures"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(enabled_features_.size());
  for (int i = 0, n = enabled_features_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      enabled_features_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string runtime_version = 8[json_name = "runtimeVersion"];
  if (this->runtime_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runtime_version());
  }

  // .dapr.proto.runtime.v1.AppConnectionProperties app_connection_properties = 7[json_name = "appConnectionProperties"];
  if (this->has_app_connection_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_connection_properties_);
  }

  // .dapr.proto.runtime.v1.ActorRuntime actor_runtime = 10[json_name = "actorRuntime"];
  if (this->has_actor_runtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actor_runtime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetadataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetadataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMetadataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetMetadataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetMetadataResponse)
    MergeFrom(*source);
  }
}

void GetMetadataResponse::MergeFrom(const GetMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  active_actors_count_.MergeFrom(from.active_actors_count_);
  registered_components_.MergeFrom(from.registered_components_);
  extended_metadata_.MergeFrom(from.extended_metadata_);
  subscriptions_.MergeFrom(from.subscriptions_);
  http_endpoints_.MergeFrom(from.http_endpoints_);
  enabled_features_.MergeFrom(from.enabled_features_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.runtime_version().size() > 0) {
    _internal_set_runtime_version(from._internal_runtime_version());
  }
  if (from.has_app_connection_properties()) {
    _internal_mutable_app_connection_properties()->::dapr::proto::runtime::v1::AppConnectionProperties::MergeFrom(from._internal_app_connection_properties());
  }
  if (from.has_actor_runtime()) {
    _internal_mutable_actor_runtime()->::dapr::proto::runtime::v1::ActorRuntime::MergeFrom(from._internal_actor_runtime());
  }
}

void GetMetadataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetadataResponse::CopyFrom(const GetMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetadataResponse::IsInitialized() const {
  return true;
}

void GetMetadataResponse::InternalSwap(GetMetadataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  active_actors_count_.InternalSwap(&other->active_actors_count_);
  registered_components_.InternalSwap(&other->registered_components_);
  extended_metadata_.Swap(&other->extended_metadata_);
  subscriptions_.InternalSwap(&other->subscriptions_);
  http_endpoints_.InternalSwap(&other->http_endpoints_);
  enabled_features_.InternalSwap(&other->enabled_features_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  runtime_version_.Swap(&other->runtime_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMetadataResponse, actor_runtime_)
      + sizeof(GetMetadataResponse::actor_runtime_)
      - PROTOBUF_FIELD_OFFSET(GetMetadataResponse, app_connection_properties_)>(
          reinterpret_cast<char*>(&app_connection_properties_),
          reinterpret_cast<char*>(&other->app_connection_properties_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActorRuntime::InitAsDefaultInstance() {
}
class ActorRuntime::_Internal {
 public:
};

ActorRuntime::ActorRuntime(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  active_actors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ActorRuntime)
}
ActorRuntime::ActorRuntime(const ActorRuntime& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      active_actors_(from.active_actors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  placement_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_placement().empty()) {
    placement_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_placement(),
      GetArena());
  }
  ::memcpy(&runtime_status_, &from.runtime_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_ready_) -
    reinterpret_cast<char*>(&runtime_status_)) + sizeof(host_ready_));
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ActorRuntime)
}

void ActorRuntime::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  placement_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&runtime_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_ready_) -
      reinterpret_cast<char*>(&runtime_status_)) + sizeof(host_ready_));
}

ActorRuntime::~ActorRuntime() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ActorRuntime)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActorRuntime::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  placement_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActorRuntime::ArenaDtor(void* object) {
  ActorRuntime* _this = reinterpret_cast< ActorRuntime* >(object);
  (void)_this;
}
void ActorRuntime::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActorRuntime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActorRuntime& ActorRuntime::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActorRuntime_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ActorRuntime::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ActorRuntime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  active_actors_.Clear();
  placement_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&runtime_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_ready_) -
      reinterpret_cast<char*>(&runtime_status_)) + sizeof(host_ready_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActorRuntime::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus runtime_status = 1[json_name = "runtimeStatus"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_runtime_status(static_cast<::dapr::proto::runtime::v1::ActorRuntime_ActorRuntimeStatus>(val));
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors = 2[json_name = "activeActors"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_active_actors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool host_ready = 3[json_name = "hostReady"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          host_ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string placement = 4[json_name = "placement"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_placement();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ActorRuntime.placement"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActorRuntime::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ActorRuntime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus runtime_status = 1[json_name = "runtimeStatus"];
  if (this->runtime_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_runtime_status(), target);
  }

  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors = 2[json_name = "activeActors"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_active_actors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_active_actors(i), target, stream);
  }

  // bool host_ready = 3[json_name = "hostReady"];
  if (this->host_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_host_ready(), target);
  }

  // string placement = 4[json_name = "placement"];
  if (this->placement().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_placement().data(), static_cast<int>(this->_internal_placement().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ActorRuntime.placement");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_placement(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ActorRuntime)
  return target;
}

size_t ActorRuntime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ActorRuntime)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors = 2[json_name = "activeActors"];
  total_size += 1UL * this->_internal_active_actors_size();
  for (const auto& msg : this->active_actors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string placement = 4[json_name = "placement"];
  if (this->placement().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_placement());
  }

  // .dapr.proto.runtime.v1.ActorRuntime.ActorRuntimeStatus runtime_status = 1[json_name = "runtimeStatus"];
  if (this->runtime_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_runtime_status());
  }

  // bool host_ready = 3[json_name = "hostReady"];
  if (this->host_ready() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActorRuntime::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ActorRuntime)
  GOOGLE_DCHECK_NE(&from, this);
  const ActorRuntime* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActorRuntime>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ActorRuntime)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ActorRuntime)
    MergeFrom(*source);
  }
}

void ActorRuntime::MergeFrom(const ActorRuntime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ActorRuntime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  active_actors_.MergeFrom(from.active_actors_);
  if (from.placement().size() > 0) {
    _internal_set_placement(from._internal_placement());
  }
  if (from.runtime_status() != 0) {
    _internal_set_runtime_status(from._internal_runtime_status());
  }
  if (from.host_ready() != 0) {
    _internal_set_host_ready(from._internal_host_ready());
  }
}

void ActorRuntime::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ActorRuntime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorRuntime::CopyFrom(const ActorRuntime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ActorRuntime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorRuntime::IsInitialized() const {
  return true;
}

void ActorRuntime::InternalSwap(ActorRuntime* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  active_actors_.InternalSwap(&other->active_actors_);
  placement_.Swap(&other->placement_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActorRuntime, host_ready_)
      + sizeof(ActorRuntime::host_ready_)
      - PROTOBUF_FIELD_OFFSET(ActorRuntime, runtime_status_)>(
          reinterpret_cast<char*>(&runtime_status_),
          reinterpret_cast<char*>(&other->runtime_status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActorRuntime::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActiveActorsCount::InitAsDefaultInstance() {
}
class ActiveActorsCount::_Internal {
 public:
};

ActiveActorsCount::ActiveActorsCount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ActiveActorsCount)
}
ActiveActorsCount::ActiveActorsCount(const ActiveActorsCount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ActiveActorsCount)
}

void ActiveActorsCount::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

ActiveActorsCount::~ActiveActorsCount() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ActiveActorsCount)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActiveActorsCount::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActiveActorsCount::ArenaDtor(void* object) {
  ActiveActorsCount* _this = reinterpret_cast< ActiveActorsCount* >(object);
  (void)_this;
}
void ActiveActorsCount::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActiveActorsCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActiveActorsCount& ActiveActorsCount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActiveActorsCount_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ActiveActorsCount::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ActiveActorsCount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActiveActorsCount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ActiveActorsCount.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActiveActorsCount::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ActiveActorsCount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ActiveActorsCount.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ActiveActorsCount)
  return target;
}

size_t ActiveActorsCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ActiveActorsCount)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActiveActorsCount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ActiveActorsCount)
  GOOGLE_DCHECK_NE(&from, this);
  const ActiveActorsCount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActiveActorsCount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ActiveActorsCount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ActiveActorsCount)
    MergeFrom(*source);
  }
}

void ActiveActorsCount::MergeFrom(const ActiveActorsCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ActiveActorsCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void ActiveActorsCount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ActiveActorsCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveActorsCount::CopyFrom(const ActiveActorsCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ActiveActorsCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveActorsCount::IsInitialized() const {
  return true;
}

void ActiveActorsCount::InternalSwap(ActiveActorsCount* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActiveActorsCount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisteredComponents::InitAsDefaultInstance() {
}
class RegisteredComponents::_Internal {
 public:
};

RegisteredComponents::RegisteredComponents(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  capabilities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.RegisteredComponents)
}
RegisteredComponents::RegisteredComponents(const RegisteredComponents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      capabilities_(from.capabilities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.RegisteredComponents)
}

void RegisteredComponents::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisteredComponents::~RegisteredComponents() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.RegisteredComponents)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisteredComponents::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisteredComponents::ArenaDtor(void* object) {
  RegisteredComponents* _this = reinterpret_cast< RegisteredComponents* >(object);
  (void)_this;
}
void RegisteredComponents::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisteredComponents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisteredComponents& RegisteredComponents::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisteredComponents_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void RegisteredComponents::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.RegisteredComponents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisteredComponents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisteredComponents.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisteredComponents.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisteredComponents.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string capabilities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_capabilities();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RegisteredComponents.capabilities"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisteredComponents::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.RegisteredComponents)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisteredComponents.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisteredComponents.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisteredComponents.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // repeated string capabilities = 4;
  for (int i = 0, n = this->_internal_capabilities_size(); i < n; i++) {
    const auto& s = this->_internal_capabilities(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RegisteredComponents.capabilities");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.RegisteredComponents)
  return target;
}

size_t RegisteredComponents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.RegisteredComponents)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string capabilities = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(capabilities_.size());
  for (int i = 0, n = capabilities_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      capabilities_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisteredComponents::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.RegisteredComponents)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisteredComponents* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisteredComponents>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.RegisteredComponents)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.RegisteredComponents)
    MergeFrom(*source);
  }
}

void RegisteredComponents::MergeFrom(const RegisteredComponents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.RegisteredComponents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capabilities_.MergeFrom(from.capabilities_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void RegisteredComponents::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.RegisteredComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisteredComponents::CopyFrom(const RegisteredComponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.RegisteredComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisteredComponents::IsInitialized() const {
  return true;
}

void RegisteredComponents::InternalSwap(RegisteredComponents* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  capabilities_.InternalSwap(&other->capabilities_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisteredComponents::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MetadataHTTPEndpoint::InitAsDefaultInstance() {
}
class MetadataHTTPEndpoint::_Internal {
 public:
};

MetadataHTTPEndpoint::MetadataHTTPEndpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
}
MetadataHTTPEndpoint::MetadataHTTPEndpoint(const MetadataHTTPEndpoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
}

void MetadataHTTPEndpoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MetadataHTTPEndpoint::~MetadataHTTPEndpoint() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MetadataHTTPEndpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MetadataHTTPEndpoint::ArenaDtor(void* object) {
  MetadataHTTPEndpoint* _this = reinterpret_cast< MetadataHTTPEndpoint* >(object);
  (void)_this;
}
void MetadataHTTPEndpoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MetadataHTTPEndpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataHTTPEndpoint& MetadataHTTPEndpoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MetadataHTTPEndpoint_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void MetadataHTTPEndpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetadataHTTPEndpoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1[json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.MetadataHTTPEndpoint.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MetadataHTTPEndpoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.MetadataHTTPEndpoint.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  return target;
}

size_t MetadataHTTPEndpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataHTTPEndpoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataHTTPEndpoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MetadataHTTPEndpoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
    MergeFrom(*source);
  }
}

void MetadataHTTPEndpoint::MergeFrom(const MetadataHTTPEndpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void MetadataHTTPEndpoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataHTTPEndpoint::CopyFrom(const MetadataHTTPEndpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.MetadataHTTPEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataHTTPEndpoint::IsInitialized() const {
  return true;
}

void MetadataHTTPEndpoint::InternalSwap(MetadataHTTPEndpoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MetadataHTTPEndpoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AppConnectionProperties::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_AppConnectionProperties_default_instance_._instance.get_mutable()->health_ = const_cast< ::dapr::proto::runtime::v1::AppConnectionHealthProperties*>(
      ::dapr::proto::runtime::v1::AppConnectionHealthProperties::internal_default_instance());
}
class AppConnectionProperties::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::AppConnectionHealthProperties& health(const AppConnectionProperties* msg);
};

const ::dapr::proto::runtime::v1::AppConnectionHealthProperties&
AppConnectionProperties::_Internal::health(const AppConnectionProperties* msg) {
  return *msg->health_;
}
AppConnectionProperties::AppConnectionProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.AppConnectionProperties)
}
AppConnectionProperties::AppConnectionProperties(const AppConnectionProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_protocol().empty()) {
    protocol_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_protocol(),
      GetArena());
  }
  channel_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel_address().empty()) {
    channel_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_channel_address(),
      GetArena());
  }
  if (from._internal_has_health()) {
    health_ = new ::dapr::proto::runtime::v1::AppConnectionHealthProperties(*from.health_);
  } else {
    health_ = nullptr;
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_concurrency_) -
    reinterpret_cast<char*>(&port_)) + sizeof(max_concurrency_));
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.AppConnectionProperties)
}

void AppConnectionProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&health_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_concurrency_) -
      reinterpret_cast<char*>(&health_)) + sizeof(max_concurrency_));
}

AppConnectionProperties::~AppConnectionProperties() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.AppConnectionProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppConnectionProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete health_;
}

void AppConnectionProperties::ArenaDtor(void* object) {
  AppConnectionProperties* _this = reinterpret_cast< AppConnectionProperties* >(object);
  (void)_this;
}
void AppConnectionProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppConnectionProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppConnectionProperties& AppConnectionProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppConnectionProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void AppConnectionProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.AppConnectionProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  channel_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && health_ != nullptr) {
    delete health_;
  }
  health_ = nullptr;
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_concurrency_) -
      reinterpret_cast<char*>(&port_)) + sizeof(max_concurrency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppConnectionProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string protocol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.AppConnectionProperties.protocol"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channel_address = 3[json_name = "channelAddress"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_channel_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.AppConnectionProperties.channel_address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_concurrency = 4[json_name = "maxConcurrency"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_concurrency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.AppConnectionHealthProperties health = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_health(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppConnectionProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.AppConnectionProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_port(), target);
  }

  // string protocol = 2;
  if (this->protocol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_protocol().data(), static_cast<int>(this->_internal_protocol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.AppConnectionProperties.protocol");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_protocol(), target);
  }

  // string channel_address = 3[json_name = "channelAddress"];
  if (this->channel_address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel_address().data(), static_cast<int>(this->_internal_channel_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.AppConnectionProperties.channel_address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_channel_address(), target);
  }

  // int32 max_concurrency = 4[json_name = "maxConcurrency"];
  if (this->max_concurrency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_max_concurrency(), target);
  }

  // .dapr.proto.runtime.v1.AppConnectionHealthProperties health = 5;
  if (this->has_health()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::health(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.AppConnectionProperties)
  return target;
}

size_t AppConnectionProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.AppConnectionProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string protocol = 2;
  if (this->protocol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_protocol());
  }

  // string channel_address = 3[json_name = "channelAddress"];
  if (this->channel_address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel_address());
  }

  // .dapr.proto.runtime.v1.AppConnectionHealthProperties health = 5;
  if (this->has_health()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *health_);
  }

  // int32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 max_concurrency = 4[json_name = "maxConcurrency"];
  if (this->max_concurrency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_concurrency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppConnectionProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.AppConnectionProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AppConnectionProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppConnectionProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.AppConnectionProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.AppConnectionProperties)
    MergeFrom(*source);
  }
}

void AppConnectionProperties::MergeFrom(const AppConnectionProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.AppConnectionProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol().size() > 0) {
    _internal_set_protocol(from._internal_protocol());
  }
  if (from.channel_address().size() > 0) {
    _internal_set_channel_address(from._internal_channel_address());
  }
  if (from.has_health()) {
    _internal_mutable_health()->::dapr::proto::runtime::v1::AppConnectionHealthProperties::MergeFrom(from._internal_health());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.max_concurrency() != 0) {
    _internal_set_max_concurrency(from._internal_max_concurrency());
  }
}

void AppConnectionProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.AppConnectionProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppConnectionProperties::CopyFrom(const AppConnectionProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.AppConnectionProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppConnectionProperties::IsInitialized() const {
  return true;
}

void AppConnectionProperties::InternalSwap(AppConnectionProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  channel_address_.Swap(&other->channel_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppConnectionProperties, max_concurrency_)
      + sizeof(AppConnectionProperties::max_concurrency_)
      - PROTOBUF_FIELD_OFFSET(AppConnectionProperties, health_)>(
          reinterpret_cast<char*>(&health_),
          reinterpret_cast<char*>(&other->health_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppConnectionProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AppConnectionHealthProperties::InitAsDefaultInstance() {
}
class AppConnectionHealthProperties::_Internal {
 public:
};

AppConnectionHealthProperties::AppConnectionHealthProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.AppConnectionHealthProperties)
}
AppConnectionHealthProperties::AppConnectionHealthProperties(const AppConnectionHealthProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  health_check_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_health_check_path().empty()) {
    health_check_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_health_check_path(),
      GetArena());
  }
  health_probe_interval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_health_probe_interval().empty()) {
    health_probe_interval_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_health_probe_interval(),
      GetArena());
  }
  health_probe_timeout_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_health_probe_timeout().empty()) {
    health_probe_timeout_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_health_probe_timeout(),
      GetArena());
  }
  health_threshold_ = from.health_threshold_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.AppConnectionHealthProperties)
}

void AppConnectionHealthProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  health_check_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  health_probe_interval_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  health_probe_timeout_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  health_threshold_ = 0;
}

AppConnectionHealthProperties::~AppConnectionHealthProperties() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppConnectionHealthProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  health_check_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  health_probe_interval_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  health_probe_timeout_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppConnectionHealthProperties::ArenaDtor(void* object) {
  AppConnectionHealthProperties* _this = reinterpret_cast< AppConnectionHealthProperties* >(object);
  (void)_this;
}
void AppConnectionHealthProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppConnectionHealthProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppConnectionHealthProperties& AppConnectionHealthProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppConnectionHealthProperties_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void AppConnectionHealthProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  health_check_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  health_probe_interval_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  health_probe_timeout_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  health_threshold_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppConnectionHealthProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string health_check_path = 1[json_name = "healthCheckPath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_health_check_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string health_probe_interval = 2[json_name = "healthProbeInterval"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_health_probe_interval();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string health_probe_timeout = 3[json_name = "healthProbeTimeout"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_health_probe_timeout();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 health_threshold = 4[json_name = "healthThreshold"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          health_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppConnectionHealthProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string health_check_path = 1[json_name = "healthCheckPath"];
  if (this->health_check_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_health_check_path().data(), static_cast<int>(this->_internal_health_check_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.AppConnectionHealthProperties.health_check_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_health_check_path(), target);
  }

  // string health_probe_interval = 2[json_name = "healthProbeInterval"];
  if (this->health_probe_interval().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_health_probe_interval().data(), static_cast<int>(this->_internal_health_probe_interval().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_interval");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_health_probe_interval(), target);
  }

  // string health_probe_timeout = 3[json_name = "healthProbeTimeout"];
  if (this->health_probe_timeout().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_health_probe_timeout().data(), static_cast<int>(this->_internal_health_probe_timeout().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.AppConnectionHealthProperties.health_probe_timeout");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_health_probe_timeout(), target);
  }

  // int32 health_threshold = 4[json_name = "healthThreshold"];
  if (this->health_threshold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_health_threshold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  return target;
}

size_t AppConnectionHealthProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string health_check_path = 1[json_name = "healthCheckPath"];
  if (this->health_check_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_health_check_path());
  }

  // string health_probe_interval = 2[json_name = "healthProbeInterval"];
  if (this->health_probe_interval().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_health_probe_interval());
  }

  // string health_probe_timeout = 3[json_name = "healthProbeTimeout"];
  if (this->health_probe_timeout().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_health_probe_timeout());
  }

  // int32 health_threshold = 4[json_name = "healthThreshold"];
  if (this->health_threshold() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_health_threshold());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppConnectionHealthProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AppConnectionHealthProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppConnectionHealthProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.AppConnectionHealthProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.AppConnectionHealthProperties)
    MergeFrom(*source);
  }
}

void AppConnectionHealthProperties::MergeFrom(const AppConnectionHealthProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.health_check_path().size() > 0) {
    _internal_set_health_check_path(from._internal_health_check_path());
  }
  if (from.health_probe_interval().size() > 0) {
    _internal_set_health_probe_interval(from._internal_health_probe_interval());
  }
  if (from.health_probe_timeout().size() > 0) {
    _internal_set_health_probe_timeout(from._internal_health_probe_timeout());
  }
  if (from.health_threshold() != 0) {
    _internal_set_health_threshold(from._internal_health_threshold());
  }
}

void AppConnectionHealthProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppConnectionHealthProperties::CopyFrom(const AppConnectionHealthProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.AppConnectionHealthProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppConnectionHealthProperties::IsInitialized() const {
  return true;
}

void AppConnectionHealthProperties::InternalSwap(AppConnectionHealthProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  health_check_path_.Swap(&other->health_check_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  health_probe_interval_.Swap(&other->health_probe_interval_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  health_probe_timeout_.Swap(&other->health_probe_timeout_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(health_threshold_, other->health_threshold_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppConnectionHealthProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PubsubSubscription_MetadataEntry_DoNotUse::PubsubSubscription_MetadataEntry_DoNotUse() {}
PubsubSubscription_MetadataEntry_DoNotUse::PubsubSubscription_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PubsubSubscription_MetadataEntry_DoNotUse::MergeFrom(const PubsubSubscription_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PubsubSubscription_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PubsubSubscription_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void PubsubSubscription::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_PubsubSubscription_default_instance_._instance.get_mutable()->rules_ = const_cast< ::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(
      ::dapr::proto::runtime::v1::PubsubSubscriptionRules::internal_default_instance());
}
class PubsubSubscription::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& rules(const PubsubSubscription* msg);
};

const ::dapr::proto::runtime::v1::PubsubSubscriptionRules&
PubsubSubscription::_Internal::rules(const PubsubSubscription* msg) {
  return *msg->rules_;
}
PubsubSubscription::PubsubSubscription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.PubsubSubscription)
}
PubsubSubscription::PubsubSubscription(const PubsubSubscription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  dead_letter_topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dead_letter_topic().empty()) {
    dead_letter_topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dead_letter_topic(),
      GetArena());
  }
  if (from._internal_has_rules()) {
    rules_ = new ::dapr::proto::runtime::v1::PubsubSubscriptionRules(*from.rules_);
  } else {
    rules_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.PubsubSubscription)
}

void PubsubSubscription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rules_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&rules_)) + sizeof(type_));
}

PubsubSubscription::~PubsubSubscription() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.PubsubSubscription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PubsubSubscription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rules_;
}

void PubsubSubscription::ArenaDtor(void* object) {
  PubsubSubscription* _this = reinterpret_cast< PubsubSubscription* >(object);
  (void)_this;
}
void PubsubSubscription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PubsubSubscription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PubsubSubscription& PubsubSubscription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PubsubSubscription_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void PubsubSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.PubsubSubscription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dead_letter_topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && rules_ != nullptr) {
    delete rules_;
  }
  rules_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PubsubSubscription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pubsub_name = 1[json_name = "pubsubname"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PubsubSubscription.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 2[json_name = "topic"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PubsubSubscription.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3[json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4[json_name = "rules"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_rules(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dead_letter_topic = 5[json_name = "deadLetterTopic"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_dead_letter_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.PubsubSubscriptionType type = 6[json_name = "type"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::dapr::proto::runtime::v1::PubsubSubscriptionType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PubsubSubscription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.PubsubSubscription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1[json_name = "pubsubname"];
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PubsubSubscription.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pubsub_name(), target);
  }

  // string topic = 2[json_name = "topic"];
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PubsubSubscription.topic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_topic(), target);
  }

  // map<string, string> metadata = 3[json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.PubsubSubscription.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.PubsubSubscription.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PubsubSubscription_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = PubsubSubscription_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4[json_name = "rules"];
  if (this->has_rules()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::rules(this), target, stream);
  }

  // string dead_letter_topic = 5[json_name = "deadLetterTopic"];
  if (this->dead_letter_topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dead_letter_topic().data(), static_cast<int>(this->_internal_dead_letter_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dead_letter_topic(), target);
  }

  // .dapr.proto.runtime.v1.PubsubSubscriptionType type = 6[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.PubsubSubscription)
  return target;
}

size_t PubsubSubscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.PubsubSubscription)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3[json_name = "metadata"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += PubsubSubscription_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string pubsub_name = 1[json_name = "pubsubname"];
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string topic = 2[json_name = "topic"];
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // string dead_letter_topic = 5[json_name = "deadLetterTopic"];
  if (this->dead_letter_topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dead_letter_topic());
  }

  // .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4[json_name = "rules"];
  if (this->has_rules()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rules_);
  }

  // .dapr.proto.runtime.v1.PubsubSubscriptionType type = 6[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubsubSubscription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.PubsubSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  const PubsubSubscription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PubsubSubscription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.PubsubSubscription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.PubsubSubscription)
    MergeFrom(*source);
  }
}

void PubsubSubscription::MergeFrom(const PubsubSubscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.PubsubSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
  if (from.dead_letter_topic().size() > 0) {
    _internal_set_dead_letter_topic(from._internal_dead_letter_topic());
  }
  if (from.has_rules()) {
    _internal_mutable_rules()->::dapr::proto::runtime::v1::PubsubSubscriptionRules::MergeFrom(from._internal_rules());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void PubsubSubscription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.PubsubSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubsubSubscription::CopyFrom(const PubsubSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.PubsubSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubsubSubscription::IsInitialized() const {
  return true;
}

void PubsubSubscription::InternalSwap(PubsubSubscription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dead_letter_topic_.Swap(&other->dead_letter_topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PubsubSubscription, type_)
      + sizeof(PubsubSubscription::type_)
      - PROTOBUF_FIELD_OFFSET(PubsubSubscription, rules_)>(
          reinterpret_cast<char*>(&rules_),
          reinterpret_cast<char*>(&other->rules_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PubsubSubscription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PubsubSubscriptionRules::InitAsDefaultInstance() {
}
class PubsubSubscriptionRules::_Internal {
 public:
};

PubsubSubscriptionRules::PubsubSubscriptionRules(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rules_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.PubsubSubscriptionRules)
}
PubsubSubscriptionRules::PubsubSubscriptionRules(const PubsubSubscriptionRules& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.PubsubSubscriptionRules)
}

void PubsubSubscriptionRules::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

PubsubSubscriptionRules::~PubsubSubscriptionRules() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PubsubSubscriptionRules::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PubsubSubscriptionRules::ArenaDtor(void* object) {
  PubsubSubscriptionRules* _this = reinterpret_cast< PubsubSubscriptionRules* >(object);
  (void)_this;
}
void PubsubSubscriptionRules::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PubsubSubscriptionRules::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PubsubSubscriptionRules& PubsubSubscriptionRules::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PubsubSubscriptionRules_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void PubsubSubscriptionRules::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PubsubSubscriptionRules::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PubsubSubscriptionRules::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rules_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_rules(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  return target;
}

size_t PubsubSubscriptionRules::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
  total_size += 1UL * this->_internal_rules_size();
  for (const auto& msg : this->rules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubsubSubscriptionRules::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  GOOGLE_DCHECK_NE(&from, this);
  const PubsubSubscriptionRules* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PubsubSubscriptionRules>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.PubsubSubscriptionRules)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.PubsubSubscriptionRules)
    MergeFrom(*source);
  }
}

void PubsubSubscriptionRules::MergeFrom(const PubsubSubscriptionRules& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
}

void PubsubSubscriptionRules::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubsubSubscriptionRules::CopyFrom(const PubsubSubscriptionRules& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRules)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubsubSubscriptionRules::IsInitialized() const {
  return true;
}

void PubsubSubscriptionRules::InternalSwap(PubsubSubscriptionRules* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rules_.InternalSwap(&other->rules_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PubsubSubscriptionRules::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PubsubSubscriptionRule::InitAsDefaultInstance() {
}
class PubsubSubscriptionRule::_Internal {
 public:
};

PubsubSubscriptionRule::PubsubSubscriptionRule(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.PubsubSubscriptionRule)
}
PubsubSubscriptionRule::PubsubSubscriptionRule(const PubsubSubscriptionRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  match_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_match().empty()) {
    match_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_match(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.PubsubSubscriptionRule)
}

void PubsubSubscriptionRule::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  match_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PubsubSubscriptionRule::~PubsubSubscriptionRule() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PubsubSubscriptionRule::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  match_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PubsubSubscriptionRule::ArenaDtor(void* object) {
  PubsubSubscriptionRule* _this = reinterpret_cast< PubsubSubscriptionRule* >(object);
  (void)_this;
}
void PubsubSubscriptionRule::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PubsubSubscriptionRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PubsubSubscriptionRule& PubsubSubscriptionRule::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PubsubSubscriptionRule_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void PubsubSubscriptionRule::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PubsubSubscriptionRule::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string match = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_match();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PubsubSubscriptionRule.match"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PubsubSubscriptionRule.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PubsubSubscriptionRule::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string match = 1;
  if (this->match().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_match().data(), static_cast<int>(this->_internal_match().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PubsubSubscriptionRule.match");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_match(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PubsubSubscriptionRule.path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  return target;
}

size_t PubsubSubscriptionRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string match = 1;
  if (this->match().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_match());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PubsubSubscriptionRule::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  GOOGLE_DCHECK_NE(&from, this);
  const PubsubSubscriptionRule* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PubsubSubscriptionRule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.PubsubSubscriptionRule)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.PubsubSubscriptionRule)
    MergeFrom(*source);
  }
}

void PubsubSubscriptionRule::MergeFrom(const PubsubSubscriptionRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match().size() > 0) {
    _internal_set_match(from._internal_match());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void PubsubSubscriptionRule::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PubsubSubscriptionRule::CopyFrom(const PubsubSubscriptionRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.PubsubSubscriptionRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PubsubSubscriptionRule::IsInitialized() const {
  return true;
}

void PubsubSubscriptionRule::InternalSwap(PubsubSubscriptionRule* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  match_.Swap(&other->match_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PubsubSubscriptionRule::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetMetadataRequest::InitAsDefaultInstance() {
}
class SetMetadataRequest::_Internal {
 public:
};

SetMetadataRequest::SetMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SetMetadataRequest)
}
SetMetadataRequest::SetMetadataRequest(const SetMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SetMetadataRequest)
}

void SetMetadataRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetMetadataRequest::~SetMetadataRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SetMetadataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetMetadataRequest::ArenaDtor(void* object) {
  SetMetadataRequest* _this = reinterpret_cast< SetMetadataRequest* >(object);
  (void)_this;
}
void SetMetadataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMetadataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMetadataRequest& SetMetadataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetMetadataRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SetMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SetMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMetadataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SetMetadataRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SetMetadataRequest.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetMetadataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SetMetadataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SetMetadataRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SetMetadataRequest.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SetMetadataRequest)
  return target;
}

size_t SetMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SetMetadataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMetadataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SetMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMetadataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetMetadataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SetMetadataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SetMetadataRequest)
    MergeFrom(*source);
  }
}

void SetMetadataRequest::MergeFrom(const SetMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SetMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void SetMetadataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SetMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMetadataRequest::CopyFrom(const SetMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SetMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMetadataRequest::IsInitialized() const {
  return true;
}

void SetMetadataRequest::InternalSwap(SetMetadataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMetadataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetConfigurationRequest_MetadataEntry_DoNotUse::GetConfigurationRequest_MetadataEntry_DoNotUse() {}
GetConfigurationRequest_MetadataEntry_DoNotUse::GetConfigurationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(const GetConfigurationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetConfigurationRequest::InitAsDefaultInstance() {
}
class GetConfigurationRequest::_Internal {
 public:
};

GetConfigurationRequest::GetConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetConfigurationRequest)
}
GetConfigurationRequest::GetConfigurationRequest(const GetConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetConfigurationRequest)
}

void GetConfigurationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetConfigurationRequest::~GetConfigurationRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetConfigurationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConfigurationRequest::ArenaDtor(void* object) {
  GetConfigurationRequest* _this = reinterpret_cast< GetConfigurationRequest* >(object);
  (void)_this;
}
void GetConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConfigurationRequest& GetConfigurationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetConfigurationRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetConfigurationRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConfigurationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated string keys = 2;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetConfigurationRequest.keys");
    target = stream->WriteString(2, s, target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetConfigurationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetConfigurationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetConfigurationRequest)
  return target;
}

size_t GetConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetConfigurationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConfigurationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigurationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConfigurationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetConfigurationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetConfigurationRequest)
    MergeFrom(*source);
  }
}

void GetConfigurationRequest::MergeFrom(const GetConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
}

void GetConfigurationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigurationRequest::CopyFrom(const GetConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationRequest::IsInitialized() const {
  return true;
}

void GetConfigurationRequest::InternalSwap(GetConfigurationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetConfigurationResponse_ItemsEntry_DoNotUse::GetConfigurationResponse_ItemsEntry_DoNotUse() {}
GetConfigurationResponse_ItemsEntry_DoNotUse::GetConfigurationResponse_ItemsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetConfigurationResponse_ItemsEntry_DoNotUse::MergeFrom(const GetConfigurationResponse_ItemsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationResponse_ItemsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetConfigurationResponse_ItemsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetConfigurationResponse::InitAsDefaultInstance() {
}
class GetConfigurationResponse::_Internal {
 public:
};

void GetConfigurationResponse::clear_items() {
  items_.Clear();
}
GetConfigurationResponse::GetConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetConfigurationResponse)
}
GetConfigurationResponse::GetConfigurationResponse(const GetConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  items_.MergeFrom(from.items_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetConfigurationResponse)
}

void GetConfigurationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
}

GetConfigurationResponse::~GetConfigurationResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetConfigurationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetConfigurationResponse::ArenaDtor(void* object) {
  GetConfigurationResponse* _this = reinterpret_cast< GetConfigurationResponse* >(object);
  (void)_this;
}
void GetConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConfigurationResponse& GetConfigurationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&items_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConfigurationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
  if (!this->_internal_items().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetConfigurationResponse.ItemsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_items().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_items().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_iterator
          it = this->_internal_items().begin();
          it != this->_internal_items().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetConfigurationResponse_ItemsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_iterator
          it = this->_internal_items().begin();
          it != this->_internal_items().end(); ++it) {
        target = GetConfigurationResponse_ItemsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetConfigurationResponse)
  return target;
}

size_t GetConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_items_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_iterator
      it = this->_internal_items().begin();
      it != this->_internal_items().end(); ++it) {
    total_size += GetConfigurationResponse_ItemsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConfigurationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigurationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConfigurationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetConfigurationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetConfigurationResponse)
    MergeFrom(*source);
  }
}

void GetConfigurationResponse::MergeFrom(const GetConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void GetConfigurationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigurationResponse::CopyFrom(const GetConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationResponse::IsInitialized() const {
  return true;
}

void GetConfigurationResponse::InternalSwap(GetConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.Swap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SubscribeConfigurationRequest_MetadataEntry_DoNotUse::SubscribeConfigurationRequest_MetadataEntry_DoNotUse() {}
SubscribeConfigurationRequest_MetadataEntry_DoNotUse::SubscribeConfigurationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SubscribeConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(const SubscribeConfigurationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SubscribeConfigurationRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SubscribeConfigurationRequest::InitAsDefaultInstance() {
}
class SubscribeConfigurationRequest::_Internal {
 public:
};

SubscribeConfigurationRequest::SubscribeConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keys_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
}
SubscribeConfigurationRequest::SubscribeConfigurationRequest(const SubscribeConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
}

void SubscribeConfigurationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubscribeConfigurationRequest::~SubscribeConfigurationRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubscribeConfigurationRequest::ArenaDtor(void* object) {
  SubscribeConfigurationRequest* _this = reinterpret_cast< SubscribeConfigurationRequest* >(object);
  (void)_this;
}
void SubscribeConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeConfigurationRequest& SubscribeConfigurationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  metadata_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeConfigurationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated string keys = 2;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys");
    target = stream->WriteString(2, s, target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SubscribeConfigurationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SubscribeConfigurationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SubscribeConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = SubscribeConfigurationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  return target;
}

size_t SubscribeConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += SubscribeConfigurationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeConfigurationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeConfigurationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeConfigurationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
    MergeFrom(*source);
  }
}

void SubscribeConfigurationRequest::MergeFrom(const SubscribeConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  metadata_.MergeFrom(from.metadata_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
}

void SubscribeConfigurationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeConfigurationRequest::CopyFrom(const SubscribeConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeConfigurationRequest::IsInitialized() const {
  return true;
}

void SubscribeConfigurationRequest::InternalSwap(SubscribeConfigurationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  metadata_.Swap(&other->metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnsubscribeConfigurationRequest::InitAsDefaultInstance() {
}
class UnsubscribeConfigurationRequest::_Internal {
 public:
};

UnsubscribeConfigurationRequest::UnsubscribeConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
}
UnsubscribeConfigurationRequest::UnsubscribeConfigurationRequest(const UnsubscribeConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
}

void UnsubscribeConfigurationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnsubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnsubscribeConfigurationRequest::~UnsubscribeConfigurationRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnsubscribeConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnsubscribeConfigurationRequest::ArenaDtor(void* object) {
  UnsubscribeConfigurationRequest* _this = reinterpret_cast< UnsubscribeConfigurationRequest* >(object);
  (void)_this;
}
void UnsubscribeConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnsubscribeConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnsubscribeConfigurationRequest& UnsubscribeConfigurationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnsubscribeConfigurationRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void UnsubscribeConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnsubscribeConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnsubscribeConfigurationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  return target;
}

size_t UnsubscribeConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnsubscribeConfigurationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsubscribeConfigurationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnsubscribeConfigurationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
    MergeFrom(*source);
  }
}

void UnsubscribeConfigurationRequest::MergeFrom(const UnsubscribeConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void UnsubscribeConfigurationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsubscribeConfigurationRequest::CopyFrom(const UnsubscribeConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsubscribeConfigurationRequest::IsInitialized() const {
  return true;
}

void UnsubscribeConfigurationRequest::InternalSwap(UnsubscribeConfigurationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnsubscribeConfigurationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SubscribeConfigurationResponse_ItemsEntry_DoNotUse::SubscribeConfigurationResponse_ItemsEntry_DoNotUse() {}
SubscribeConfigurationResponse_ItemsEntry_DoNotUse::SubscribeConfigurationResponse_ItemsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SubscribeConfigurationResponse_ItemsEntry_DoNotUse::MergeFrom(const SubscribeConfigurationResponse_ItemsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationResponse_ItemsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SubscribeConfigurationResponse_ItemsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SubscribeConfigurationResponse::InitAsDefaultInstance() {
}
class SubscribeConfigurationResponse::_Internal {
 public:
};

void SubscribeConfigurationResponse::clear_items() {
  items_.Clear();
}
SubscribeConfigurationResponse::SubscribeConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
}
SubscribeConfigurationResponse::SubscribeConfigurationResponse(const SubscribeConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  items_.MergeFrom(from.items_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
}

void SubscribeConfigurationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubscribeConfigurationResponse::~SubscribeConfigurationResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubscribeConfigurationResponse::ArenaDtor(void* object) {
  SubscribeConfigurationResponse* _this = reinterpret_cast< SubscribeConfigurationResponse* >(object);
  (void)_this;
}
void SubscribeConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeConfigurationResponse& SubscribeConfigurationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubscribeConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubscribeConfigurationResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&items_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeConfigurationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubscribeConfigurationResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
  if (!this->_internal_items().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.SubscribeConfigurationResponse.ItemsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_items().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_items().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_iterator
          it = this->_internal_items().begin();
          it != this->_internal_items().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SubscribeConfigurationResponse_ItemsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_iterator
          it = this->_internal_items().begin();
          it != this->_internal_items().end(); ++it) {
        target = SubscribeConfigurationResponse_ItemsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  return target;
}

size_t SubscribeConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_items_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dapr::proto::common::v1::ConfigurationItem >::const_iterator
      it = this->_internal_items().begin();
      it != this->_internal_items().end(); ++it) {
    total_size += SubscribeConfigurationResponse_ItemsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeConfigurationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeConfigurationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeConfigurationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
    MergeFrom(*source);
  }
}

void SubscribeConfigurationResponse::MergeFrom(const SubscribeConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void SubscribeConfigurationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeConfigurationResponse::CopyFrom(const SubscribeConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeConfigurationResponse::IsInitialized() const {
  return true;
}

void SubscribeConfigurationResponse::InternalSwap(SubscribeConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.Swap(&other->items_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConfigurationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnsubscribeConfigurationResponse::InitAsDefaultInstance() {
}
class UnsubscribeConfigurationResponse::_Internal {
 public:
};

UnsubscribeConfigurationResponse::UnsubscribeConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
}
UnsubscribeConfigurationResponse::UnsubscribeConfigurationResponse(const UnsubscribeConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
}

void UnsubscribeConfigurationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnsubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ok_ = false;
}

UnsubscribeConfigurationResponse::~UnsubscribeConfigurationResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnsubscribeConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnsubscribeConfigurationResponse::ArenaDtor(void* object) {
  UnsubscribeConfigurationResponse* _this = reinterpret_cast< UnsubscribeConfigurationResponse* >(object);
  (void)_this;
}
void UnsubscribeConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnsubscribeConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnsubscribeConfigurationResponse& UnsubscribeConfigurationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnsubscribeConfigurationResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void UnsubscribeConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnsubscribeConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnsubscribeConfigurationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  return target;
}

size_t UnsubscribeConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnsubscribeConfigurationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsubscribeConfigurationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnsubscribeConfigurationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
    MergeFrom(*source);
  }
}

void UnsubscribeConfigurationResponse::MergeFrom(const UnsubscribeConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.ok() != 0) {
    _internal_set_ok(from._internal_ok());
  }
}

void UnsubscribeConfigurationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsubscribeConfigurationResponse::CopyFrom(const UnsubscribeConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsubscribeConfigurationResponse::IsInitialized() const {
  return true;
}

void UnsubscribeConfigurationResponse::InternalSwap(UnsubscribeConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ok_, other->ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnsubscribeConfigurationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TryLockRequest::InitAsDefaultInstance() {
}
class TryLockRequest::_Internal {
 public:
};

TryLockRequest::TryLockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TryLockRequest)
}
TryLockRequest::TryLockRequest(const TryLockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_resource_id(),
      GetArena());
  }
  lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lock_owner().empty()) {
    lock_owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_lock_owner(),
      GetArena());
  }
  expiry_in_seconds_ = from.expiry_in_seconds_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TryLockRequest)
}

void TryLockRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TryLockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiry_in_seconds_ = 0;
}

TryLockRequest::~TryLockRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TryLockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TryLockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TryLockRequest::ArenaDtor(void* object) {
  TryLockRequest* _this = reinterpret_cast< TryLockRequest* >(object);
  (void)_this;
}
void TryLockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TryLockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TryLockRequest& TryLockRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TryLockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void TryLockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TryLockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lock_owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expiry_in_seconds_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TryLockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1[json_name = "storeName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TryLockRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource_id = 2[json_name = "resourceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TryLockRequest.resource_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string lock_owner = 3[json_name = "lockOwner"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_lock_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TryLockRequest.lock_owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 expiry_in_seconds = 4[json_name = "expiryInSeconds"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          expiry_in_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TryLockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TryLockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TryLockRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string resource_id = 2[json_name = "resourceId"];
  if (this->resource_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TryLockRequest.resource_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_id(), target);
  }

  // string lock_owner = 3[json_name = "lockOwner"];
  if (this->lock_owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lock_owner().data(), static_cast<int>(this->_internal_lock_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TryLockRequest.lock_owner");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_lock_owner(), target);
  }

  // int32 expiry_in_seconds = 4[json_name = "expiryInSeconds"];
  if (this->expiry_in_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_expiry_in_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TryLockRequest)
  return target;
}

size_t TryLockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TryLockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string resource_id = 2[json_name = "resourceId"];
  if (this->resource_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string lock_owner = 3[json_name = "lockOwner"];
  if (this->lock_owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lock_owner());
  }

  // int32 expiry_in_seconds = 4[json_name = "expiryInSeconds"];
  if (this->expiry_in_seconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_expiry_in_seconds());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TryLockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TryLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TryLockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TryLockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TryLockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TryLockRequest)
    MergeFrom(*source);
  }
}

void TryLockRequest::MergeFrom(const TryLockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TryLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.resource_id().size() > 0) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (from.lock_owner().size() > 0) {
    _internal_set_lock_owner(from._internal_lock_owner());
  }
  if (from.expiry_in_seconds() != 0) {
    _internal_set_expiry_in_seconds(from._internal_expiry_in_seconds());
  }
}

void TryLockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TryLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TryLockRequest::CopyFrom(const TryLockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TryLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryLockRequest::IsInitialized() const {
  return true;
}

void TryLockRequest::InternalSwap(TryLockRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_id_.Swap(&other->resource_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lock_owner_.Swap(&other->lock_owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(expiry_in_seconds_, other->expiry_in_seconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TryLockRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TryLockResponse::InitAsDefaultInstance() {
}
class TryLockResponse::_Internal {
 public:
};

TryLockResponse::TryLockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TryLockResponse)
}
TryLockResponse::TryLockResponse(const TryLockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TryLockResponse)
}

void TryLockResponse::SharedCtor() {
  success_ = false;
}

TryLockResponse::~TryLockResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TryLockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TryLockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TryLockResponse::ArenaDtor(void* object) {
  TryLockResponse* _this = reinterpret_cast< TryLockResponse* >(object);
  (void)_this;
}
void TryLockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TryLockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TryLockResponse& TryLockResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TryLockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void TryLockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TryLockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TryLockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TryLockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TryLockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TryLockResponse)
  return target;
}

size_t TryLockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TryLockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TryLockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TryLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TryLockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TryLockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TryLockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TryLockResponse)
    MergeFrom(*source);
  }
}

void TryLockResponse::MergeFrom(const TryLockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TryLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void TryLockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TryLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TryLockResponse::CopyFrom(const TryLockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TryLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TryLockResponse::IsInitialized() const {
  return true;
}

void TryLockResponse::InternalSwap(TryLockResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TryLockResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnlockRequest::InitAsDefaultInstance() {
}
class UnlockRequest::_Internal {
 public:
};

UnlockRequest::UnlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.UnlockRequest)
}
UnlockRequest::UnlockRequest(const UnlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_resource_id(),
      GetArena());
  }
  lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lock_owner().empty()) {
    lock_owner_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_lock_owner(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.UnlockRequest)
}

void UnlockRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnlockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_owner_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnlockRequest::~UnlockRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.UnlockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lock_owner_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnlockRequest::ArenaDtor(void* object) {
  UnlockRequest* _this = reinterpret_cast< UnlockRequest* >(object);
  (void)_this;
}
void UnlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnlockRequest& UnlockRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnlockRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void UnlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.UnlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lock_owner_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1[json_name = "storeName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnlockRequest.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource_id = 2[json_name = "resourceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnlockRequest.resource_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string lock_owner = 3[json_name = "lockOwner"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_lock_owner();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.UnlockRequest.lock_owner"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnlockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.UnlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnlockRequest.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // string resource_id = 2[json_name = "resourceId"];
  if (this->resource_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnlockRequest.resource_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_id(), target);
  }

  // string lock_owner = 3[json_name = "lockOwner"];
  if (this->lock_owner().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lock_owner().data(), static_cast<int>(this->_internal_lock_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.UnlockRequest.lock_owner");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_lock_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.UnlockRequest)
  return target;
}

size_t UnlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.UnlockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string store_name = 1[json_name = "storeName"];
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // string resource_id = 2[json_name = "resourceId"];
  if (this->resource_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string lock_owner = 3[json_name = "lockOwner"];
  if (this->lock_owner().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lock_owner());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnlockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.UnlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnlockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.UnlockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.UnlockRequest)
    MergeFrom(*source);
  }
}

void UnlockRequest::MergeFrom(const UnlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.UnlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.resource_id().size() > 0) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (from.lock_owner().size() > 0) {
    _internal_set_lock_owner(from._internal_lock_owner());
  }
}

void UnlockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.UnlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockRequest::CopyFrom(const UnlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.UnlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockRequest::IsInitialized() const {
  return true;
}

void UnlockRequest::InternalSwap(UnlockRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_id_.Swap(&other->resource_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lock_owner_.Swap(&other->lock_owner_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnlockResponse::InitAsDefaultInstance() {
}
class UnlockResponse::_Internal {
 public:
};

UnlockResponse::UnlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.UnlockResponse)
}
UnlockResponse::UnlockResponse(const UnlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.UnlockResponse)
}

void UnlockResponse::SharedCtor() {
  status_ = 0;
}

UnlockResponse::~UnlockResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.UnlockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UnlockResponse::ArenaDtor(void* object) {
  UnlockResponse* _this = reinterpret_cast< UnlockResponse* >(object);
  (void)_this;
}
void UnlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnlockResponse& UnlockResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnlockResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void UnlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.UnlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::dapr::proto::runtime::v1::UnlockResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnlockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.UnlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.UnlockResponse)
  return target;
}

size_t UnlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.UnlockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnlockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.UnlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnlockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.UnlockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.UnlockResponse)
    MergeFrom(*source);
  }
}

void UnlockResponse::MergeFrom(const UnlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.UnlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void UnlockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.UnlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockResponse::CopyFrom(const UnlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.UnlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockResponse::IsInitialized() const {
  return true;
}

void UnlockResponse::InternalSwap(UnlockResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleGetKeyRequest::InitAsDefaultInstance() {
}
class SubtleGetKeyRequest::_Internal {
 public:
};

SubtleGetKeyRequest::SubtleGetKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleGetKeyRequest)
}
SubtleGetKeyRequest::SubtleGetKeyRequest(const SubtleGetKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  format_ = from.format_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleGetKeyRequest)
}

void SubtleGetKeyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleGetKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_ = 0;
}

SubtleGetKeyRequest::~SubtleGetKeyRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleGetKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleGetKeyRequest::ArenaDtor(void* object) {
  SubtleGetKeyRequest* _this = reinterpret_cast< SubtleGetKeyRequest* >(object);
  (void)_this;
}
void SubtleGetKeyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleGetKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleGetKeyRequest& SubtleGetKeyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleGetKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleGetKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleGetKeyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleGetKeyRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_format(static_cast<::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleGetKeyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleGetKeyRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
  if (this->format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  return target;
}

size_t SubtleGetKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleGetKeyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleGetKeyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleGetKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleGetKeyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleGetKeyRequest)
    MergeFrom(*source);
  }
}

void SubtleGetKeyRequest::MergeFrom(const SubtleGetKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.format() != 0) {
    _internal_set_format(from._internal_format());
  }
}

void SubtleGetKeyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleGetKeyRequest::CopyFrom(const SubtleGetKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleGetKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleGetKeyRequest::IsInitialized() const {
  return true;
}

void SubtleGetKeyRequest::InternalSwap(SubtleGetKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(format_, other->format_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleGetKeyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleGetKeyResponse::InitAsDefaultInstance() {
}
class SubtleGetKeyResponse::_Internal {
 public:
};

SubtleGetKeyResponse::SubtleGetKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleGetKeyResponse)
}
SubtleGetKeyResponse::SubtleGetKeyResponse(const SubtleGetKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key().empty()) {
    public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_public_key(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleGetKeyResponse)
}

void SubtleGetKeyResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleGetKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleGetKeyResponse::~SubtleGetKeyResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleGetKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleGetKeyResponse::ArenaDtor(void* object) {
  SubtleGetKeyResponse* _this = reinterpret_cast< SubtleGetKeyResponse* >(object);
  (void)_this;
}
void SubtleGetKeyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleGetKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleGetKeyResponse& SubtleGetKeyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleGetKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleGetKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  public_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleGetKeyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleGetKeyResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string public_key = 2[json_name = "publicKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleGetKeyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleGetKeyResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string public_key = 2[json_name = "publicKey"];
  if (this->public_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_key().data(), static_cast<int>(this->_internal_public_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_public_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  return target;
}

size_t SubtleGetKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string public_key = 2[json_name = "publicKey"];
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleGetKeyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleGetKeyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleGetKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleGetKeyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleGetKeyResponse)
    MergeFrom(*source);
  }
}

void SubtleGetKeyResponse::MergeFrom(const SubtleGetKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.public_key().size() > 0) {
    _internal_set_public_key(from._internal_public_key());
  }
}

void SubtleGetKeyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleGetKeyResponse::CopyFrom(const SubtleGetKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleGetKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleGetKeyResponse::IsInitialized() const {
  return true;
}

void SubtleGetKeyResponse::InternalSwap(SubtleGetKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleGetKeyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleEncryptRequest::InitAsDefaultInstance() {
}
class SubtleEncryptRequest::_Internal {
 public:
};

SubtleEncryptRequest::SubtleEncryptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleEncryptRequest)
}
SubtleEncryptRequest::SubtleEncryptRequest(const SubtleEncryptRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  plaintext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plaintext().empty()) {
    plaintext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plaintext(),
      GetArena());
  }
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nonce().empty()) {
    nonce_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_nonce(),
      GetArena());
  }
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_associated_data().empty()) {
    associated_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_associated_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleEncryptRequest)
}

void SubtleEncryptRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleEncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaintext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleEncryptRequest::~SubtleEncryptRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleEncryptRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleEncryptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaintext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleEncryptRequest::ArenaDtor(void* object) {
  SubtleEncryptRequest* _this = reinterpret_cast< SubtleEncryptRequest* >(object);
  (void)_this;
}
void SubtleEncryptRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleEncryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleEncryptRequest& SubtleEncryptRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleEncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleEncryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaintext_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleEncryptRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleEncryptRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes plaintext = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_plaintext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 4[json_name = "keyName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleEncryptRequest.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes nonce = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_nonce();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes associated_data = 6[json_name = "associatedData"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_associated_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleEncryptRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleEncryptRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // bytes plaintext = 2;
  if (this->plaintext().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_plaintext(), target);
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_algorithm(), target);
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleEncryptRequest.key_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key_name(), target);
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_nonce(), target);
  }

  // bytes associated_data = 6[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_associated_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleEncryptRequest)
  return target;
}

size_t SubtleEncryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // bytes plaintext = 2;
  if (this->plaintext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_plaintext());
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nonce());
  }

  // bytes associated_data = 6[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_associated_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleEncryptRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleEncryptRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleEncryptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleEncryptRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleEncryptRequest)
    MergeFrom(*source);
  }
}

void SubtleEncryptRequest::MergeFrom(const SubtleEncryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.plaintext().size() > 0) {
    _internal_set_plaintext(from._internal_plaintext());
  }
  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
  if (from.nonce().size() > 0) {
    _internal_set_nonce(from._internal_nonce());
  }
  if (from.associated_data().size() > 0) {
    _internal_set_associated_data(from._internal_associated_data());
  }
}

void SubtleEncryptRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleEncryptRequest::CopyFrom(const SubtleEncryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleEncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleEncryptRequest::IsInitialized() const {
  return true;
}

void SubtleEncryptRequest::InternalSwap(SubtleEncryptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaintext_.Swap(&other->plaintext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.Swap(&other->nonce_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.Swap(&other->associated_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleEncryptRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleEncryptResponse::InitAsDefaultInstance() {
}
class SubtleEncryptResponse::_Internal {
 public:
};

SubtleEncryptResponse::SubtleEncryptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleEncryptResponse)
}
SubtleEncryptResponse::SubtleEncryptResponse(const SubtleEncryptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ciphertext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ciphertext().empty()) {
    ciphertext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ciphertext(),
      GetArena());
  }
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tag(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleEncryptResponse)
}

void SubtleEncryptResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleEncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  ciphertext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleEncryptResponse::~SubtleEncryptResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleEncryptResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleEncryptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ciphertext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleEncryptResponse::ArenaDtor(void* object) {
  SubtleEncryptResponse* _this = reinterpret_cast< SubtleEncryptResponse* >(object);
  (void)_this;
}
void SubtleEncryptResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleEncryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleEncryptResponse& SubtleEncryptResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleEncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleEncryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ciphertext_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleEncryptResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes ciphertext = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ciphertext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleEncryptResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ciphertext = 1;
  if (this->ciphertext().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_ciphertext(), target);
  }

  // bytes tag = 2;
  if (this->tag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleEncryptResponse)
  return target;
}

size_t SubtleEncryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ciphertext = 1;
  if (this->ciphertext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ciphertext());
  }

  // bytes tag = 2;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleEncryptResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleEncryptResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleEncryptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleEncryptResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleEncryptResponse)
    MergeFrom(*source);
  }
}

void SubtleEncryptResponse::MergeFrom(const SubtleEncryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ciphertext().size() > 0) {
    _internal_set_ciphertext(from._internal_ciphertext());
  }
  if (from.tag().size() > 0) {
    _internal_set_tag(from._internal_tag());
  }
}

void SubtleEncryptResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleEncryptResponse::CopyFrom(const SubtleEncryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleEncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleEncryptResponse::IsInitialized() const {
  return true;
}

void SubtleEncryptResponse::InternalSwap(SubtleEncryptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ciphertext_.Swap(&other->ciphertext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleEncryptResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleDecryptRequest::InitAsDefaultInstance() {
}
class SubtleDecryptRequest::_Internal {
 public:
};

SubtleDecryptRequest::SubtleDecryptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleDecryptRequest)
}
SubtleDecryptRequest::SubtleDecryptRequest(const SubtleDecryptRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  ciphertext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ciphertext().empty()) {
    ciphertext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ciphertext(),
      GetArena());
  }
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nonce().empty()) {
    nonce_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_nonce(),
      GetArena());
  }
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tag(),
      GetArena());
  }
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_associated_data().empty()) {
    associated_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_associated_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleDecryptRequest)
}

void SubtleDecryptRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleDecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ciphertext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleDecryptRequest::~SubtleDecryptRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleDecryptRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleDecryptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ciphertext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleDecryptRequest::ArenaDtor(void* object) {
  SubtleDecryptRequest* _this = reinterpret_cast< SubtleDecryptRequest* >(object);
  (void)_this;
}
void SubtleDecryptRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleDecryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleDecryptRequest& SubtleDecryptRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleDecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleDecryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ciphertext_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleDecryptRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleDecryptRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes ciphertext = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ciphertext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 4[json_name = "keyName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleDecryptRequest.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes nonce = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_nonce();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes associated_data = 7[json_name = "associatedData"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_associated_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleDecryptRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleDecryptRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_ciphertext(), target);
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_algorithm(), target);
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleDecryptRequest.key_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key_name(), target);
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_nonce(), target);
  }

  // bytes tag = 6;
  if (this->tag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_tag(), target);
  }

  // bytes associated_data = 7[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_associated_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleDecryptRequest)
  return target;
}

size_t SubtleDecryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ciphertext());
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nonce());
  }

  // bytes tag = 6;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tag());
  }

  // bytes associated_data = 7[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_associated_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleDecryptRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleDecryptRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleDecryptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleDecryptRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleDecryptRequest)
    MergeFrom(*source);
  }
}

void SubtleDecryptRequest::MergeFrom(const SubtleDecryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.ciphertext().size() > 0) {
    _internal_set_ciphertext(from._internal_ciphertext());
  }
  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
  if (from.nonce().size() > 0) {
    _internal_set_nonce(from._internal_nonce());
  }
  if (from.tag().size() > 0) {
    _internal_set_tag(from._internal_tag());
  }
  if (from.associated_data().size() > 0) {
    _internal_set_associated_data(from._internal_associated_data());
  }
}

void SubtleDecryptRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleDecryptRequest::CopyFrom(const SubtleDecryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleDecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleDecryptRequest::IsInitialized() const {
  return true;
}

void SubtleDecryptRequest::InternalSwap(SubtleDecryptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ciphertext_.Swap(&other->ciphertext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.Swap(&other->nonce_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.Swap(&other->associated_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleDecryptRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleDecryptResponse::InitAsDefaultInstance() {
}
class SubtleDecryptResponse::_Internal {
 public:
};

SubtleDecryptResponse::SubtleDecryptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleDecryptResponse)
}
SubtleDecryptResponse::SubtleDecryptResponse(const SubtleDecryptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  plaintext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plaintext().empty()) {
    plaintext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plaintext(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleDecryptResponse)
}

void SubtleDecryptResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleDecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  plaintext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleDecryptResponse::~SubtleDecryptResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleDecryptResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleDecryptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  plaintext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleDecryptResponse::ArenaDtor(void* object) {
  SubtleDecryptResponse* _this = reinterpret_cast< SubtleDecryptResponse* >(object);
  (void)_this;
}
void SubtleDecryptResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleDecryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleDecryptResponse& SubtleDecryptResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleDecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleDecryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plaintext_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleDecryptResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes plaintext = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_plaintext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleDecryptResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes plaintext = 1;
  if (this->plaintext().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_plaintext(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleDecryptResponse)
  return target;
}

size_t SubtleDecryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes plaintext = 1;
  if (this->plaintext().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_plaintext());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleDecryptResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleDecryptResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleDecryptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleDecryptResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleDecryptResponse)
    MergeFrom(*source);
  }
}

void SubtleDecryptResponse::MergeFrom(const SubtleDecryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plaintext().size() > 0) {
    _internal_set_plaintext(from._internal_plaintext());
  }
}

void SubtleDecryptResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleDecryptResponse::CopyFrom(const SubtleDecryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleDecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleDecryptResponse::IsInitialized() const {
  return true;
}

void SubtleDecryptResponse::InternalSwap(SubtleDecryptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  plaintext_.Swap(&other->plaintext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleDecryptResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleWrapKeyRequest::InitAsDefaultInstance() {
}
class SubtleWrapKeyRequest::_Internal {
 public:
};

SubtleWrapKeyRequest::SubtleWrapKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
}
SubtleWrapKeyRequest::SubtleWrapKeyRequest(const SubtleWrapKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  plaintext_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plaintext_key().empty()) {
    plaintext_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plaintext_key(),
      GetArena());
  }
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nonce().empty()) {
    nonce_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_nonce(),
      GetArena());
  }
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_associated_data().empty()) {
    associated_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_associated_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
}

void SubtleWrapKeyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleWrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaintext_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleWrapKeyRequest::~SubtleWrapKeyRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleWrapKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plaintext_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleWrapKeyRequest::ArenaDtor(void* object) {
  SubtleWrapKeyRequest* _this = reinterpret_cast< SubtleWrapKeyRequest* >(object);
  (void)_this;
}
void SubtleWrapKeyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleWrapKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleWrapKeyRequest& SubtleWrapKeyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleWrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleWrapKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaintext_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleWrapKeyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes plaintext_key = 2[json_name = "plaintextKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_plaintext_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 4[json_name = "keyName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes nonce = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_nonce();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes associated_data = 6[json_name = "associatedData"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_associated_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleWrapKeyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // bytes plaintext_key = 2[json_name = "plaintextKey"];
  if (this->plaintext_key().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_plaintext_key(), target);
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_algorithm(), target);
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key_name(), target);
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_nonce(), target);
  }

  // bytes associated_data = 6[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_associated_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  return target;
}

size_t SubtleWrapKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // bytes plaintext_key = 2[json_name = "plaintextKey"];
  if (this->plaintext_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_plaintext_key());
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nonce());
  }

  // bytes associated_data = 6[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_associated_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleWrapKeyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleWrapKeyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleWrapKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
    MergeFrom(*source);
  }
}

void SubtleWrapKeyRequest::MergeFrom(const SubtleWrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.plaintext_key().size() > 0) {
    _internal_set_plaintext_key(from._internal_plaintext_key());
  }
  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
  if (from.nonce().size() > 0) {
    _internal_set_nonce(from._internal_nonce());
  }
  if (from.associated_data().size() > 0) {
    _internal_set_associated_data(from._internal_associated_data());
  }
}

void SubtleWrapKeyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleWrapKeyRequest::CopyFrom(const SubtleWrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleWrapKeyRequest::IsInitialized() const {
  return true;
}

void SubtleWrapKeyRequest::InternalSwap(SubtleWrapKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plaintext_key_.Swap(&other->plaintext_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.Swap(&other->nonce_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.Swap(&other->associated_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleWrapKeyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleWrapKeyResponse::InitAsDefaultInstance() {
}
class SubtleWrapKeyResponse::_Internal {
 public:
};

SubtleWrapKeyResponse::SubtleWrapKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
}
SubtleWrapKeyResponse::SubtleWrapKeyResponse(const SubtleWrapKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  wrapped_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wrapped_key().empty()) {
    wrapped_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_wrapped_key(),
      GetArena());
  }
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tag(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
}

void SubtleWrapKeyResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleWrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  wrapped_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleWrapKeyResponse::~SubtleWrapKeyResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleWrapKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  wrapped_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleWrapKeyResponse::ArenaDtor(void* object) {
  SubtleWrapKeyResponse* _this = reinterpret_cast< SubtleWrapKeyResponse* >(object);
  (void)_this;
}
void SubtleWrapKeyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleWrapKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleWrapKeyResponse& SubtleWrapKeyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleWrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleWrapKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wrapped_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleWrapKeyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes wrapped_key = 1[json_name = "wrappedKey"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_wrapped_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleWrapKeyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes wrapped_key = 1[json_name = "wrappedKey"];
  if (this->wrapped_key().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_wrapped_key(), target);
  }

  // bytes tag = 2;
  if (this->tag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  return target;
}

size_t SubtleWrapKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes wrapped_key = 1[json_name = "wrappedKey"];
  if (this->wrapped_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_wrapped_key());
  }

  // bytes tag = 2;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleWrapKeyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleWrapKeyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleWrapKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
    MergeFrom(*source);
  }
}

void SubtleWrapKeyResponse::MergeFrom(const SubtleWrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wrapped_key().size() > 0) {
    _internal_set_wrapped_key(from._internal_wrapped_key());
  }
  if (from.tag().size() > 0) {
    _internal_set_tag(from._internal_tag());
  }
}

void SubtleWrapKeyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleWrapKeyResponse::CopyFrom(const SubtleWrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleWrapKeyResponse::IsInitialized() const {
  return true;
}

void SubtleWrapKeyResponse::InternalSwap(SubtleWrapKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  wrapped_key_.Swap(&other->wrapped_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleWrapKeyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleUnwrapKeyRequest::InitAsDefaultInstance() {
}
class SubtleUnwrapKeyRequest::_Internal {
 public:
};

SubtleUnwrapKeyRequest::SubtleUnwrapKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
}
SubtleUnwrapKeyRequest::SubtleUnwrapKeyRequest(const SubtleUnwrapKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  wrapped_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wrapped_key().empty()) {
    wrapped_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_wrapped_key(),
      GetArena());
  }
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nonce().empty()) {
    nonce_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_nonce(),
      GetArena());
  }
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tag(),
      GetArena());
  }
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_associated_data().empty()) {
    associated_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_associated_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
}

void SubtleUnwrapKeyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleUnwrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wrapped_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleUnwrapKeyRequest::~SubtleUnwrapKeyRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleUnwrapKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wrapped_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  associated_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleUnwrapKeyRequest::ArenaDtor(void* object) {
  SubtleUnwrapKeyRequest* _this = reinterpret_cast< SubtleUnwrapKeyRequest* >(object);
  (void)_this;
}
void SubtleUnwrapKeyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleUnwrapKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleUnwrapKeyRequest& SubtleUnwrapKeyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleUnwrapKeyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleUnwrapKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  wrapped_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleUnwrapKeyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes wrapped_key = 2[json_name = "wrappedKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_wrapped_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 4[json_name = "keyName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes nonce = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_nonce();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes tag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes associated_data = 7[json_name = "associatedData"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_associated_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleUnwrapKeyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // bytes wrapped_key = 2[json_name = "wrappedKey"];
  if (this->wrapped_key().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_wrapped_key(), target);
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_algorithm(), target);
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key_name(), target);
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_nonce(), target);
  }

  // bytes tag = 6;
  if (this->tag().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_tag(), target);
  }

  // bytes associated_data = 7[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_associated_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  return target;
}

size_t SubtleUnwrapKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // bytes wrapped_key = 2[json_name = "wrappedKey"];
  if (this->wrapped_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_wrapped_key());
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  // bytes nonce = 5;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nonce());
  }

  // bytes tag = 6;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tag());
  }

  // bytes associated_data = 7[json_name = "associatedData"];
  if (this->associated_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_associated_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleUnwrapKeyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleUnwrapKeyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleUnwrapKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
    MergeFrom(*source);
  }
}

void SubtleUnwrapKeyRequest::MergeFrom(const SubtleUnwrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.wrapped_key().size() > 0) {
    _internal_set_wrapped_key(from._internal_wrapped_key());
  }
  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
  if (from.nonce().size() > 0) {
    _internal_set_nonce(from._internal_nonce());
  }
  if (from.tag().size() > 0) {
    _internal_set_tag(from._internal_tag());
  }
  if (from.associated_data().size() > 0) {
    _internal_set_associated_data(from._internal_associated_data());
  }
}

void SubtleUnwrapKeyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleUnwrapKeyRequest::CopyFrom(const SubtleUnwrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleUnwrapKeyRequest::IsInitialized() const {
  return true;
}

void SubtleUnwrapKeyRequest::InternalSwap(SubtleUnwrapKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  wrapped_key_.Swap(&other->wrapped_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nonce_.Swap(&other->nonce_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  associated_data_.Swap(&other->associated_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleUnwrapKeyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleUnwrapKeyResponse::InitAsDefaultInstance() {
}
class SubtleUnwrapKeyResponse::_Internal {
 public:
};

SubtleUnwrapKeyResponse::SubtleUnwrapKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
}
SubtleUnwrapKeyResponse::SubtleUnwrapKeyResponse(const SubtleUnwrapKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  plaintext_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plaintext_key().empty()) {
    plaintext_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plaintext_key(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
}

void SubtleUnwrapKeyResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleUnwrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  plaintext_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleUnwrapKeyResponse::~SubtleUnwrapKeyResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleUnwrapKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  plaintext_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleUnwrapKeyResponse::ArenaDtor(void* object) {
  SubtleUnwrapKeyResponse* _this = reinterpret_cast< SubtleUnwrapKeyResponse* >(object);
  (void)_this;
}
void SubtleUnwrapKeyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleUnwrapKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleUnwrapKeyResponse& SubtleUnwrapKeyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleUnwrapKeyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleUnwrapKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plaintext_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleUnwrapKeyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes plaintext_key = 1[json_name = "plaintextKey"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_plaintext_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleUnwrapKeyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes plaintext_key = 1[json_name = "plaintextKey"];
  if (this->plaintext_key().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_plaintext_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  return target;
}

size_t SubtleUnwrapKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes plaintext_key = 1[json_name = "plaintextKey"];
  if (this->plaintext_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_plaintext_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleUnwrapKeyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleUnwrapKeyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleUnwrapKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
    MergeFrom(*source);
  }
}

void SubtleUnwrapKeyResponse::MergeFrom(const SubtleUnwrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plaintext_key().size() > 0) {
    _internal_set_plaintext_key(from._internal_plaintext_key());
  }
}

void SubtleUnwrapKeyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleUnwrapKeyResponse::CopyFrom(const SubtleUnwrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleUnwrapKeyResponse::IsInitialized() const {
  return true;
}

void SubtleUnwrapKeyResponse::InternalSwap(SubtleUnwrapKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  plaintext_key_.Swap(&other->plaintext_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleUnwrapKeyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleSignRequest::InitAsDefaultInstance() {
}
class SubtleSignRequest::_Internal {
 public:
};

SubtleSignRequest::SubtleSignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleSignRequest)
}
SubtleSignRequest::SubtleSignRequest(const SubtleSignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  digest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_digest().empty()) {
    digest_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_digest(),
      GetArena());
  }
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleSignRequest)
}

void SubtleSignRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleSignRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  digest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleSignRequest::~SubtleSignRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleSignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleSignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  digest_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleSignRequest::ArenaDtor(void* object) {
  SubtleSignRequest* _this = reinterpret_cast< SubtleSignRequest* >(object);
  (void)_this;
}
void SubtleSignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleSignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleSignRequest& SubtleSignRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleSignRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleSignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleSignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  digest_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleSignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleSignRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_digest();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleSignRequest.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 4[json_name = "keyName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleSignRequest.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleSignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleSignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleSignRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // bytes digest = 2;
  if (this->digest().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_digest(), target);
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleSignRequest.algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_algorithm(), target);
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleSignRequest.key_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleSignRequest)
  return target;
}

size_t SubtleSignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleSignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // bytes digest = 2;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_digest());
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleSignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleSignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleSignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleSignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleSignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleSignRequest)
    MergeFrom(*source);
  }
}

void SubtleSignRequest::MergeFrom(const SubtleSignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleSignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.digest().size() > 0) {
    _internal_set_digest(from._internal_digest());
  }
  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
}

void SubtleSignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleSignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleSignRequest::CopyFrom(const SubtleSignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleSignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleSignRequest::IsInitialized() const {
  return true;
}

void SubtleSignRequest::InternalSwap(SubtleSignRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  digest_.Swap(&other->digest_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleSignRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleSignResponse::InitAsDefaultInstance() {
}
class SubtleSignResponse::_Internal {
 public:
};

SubtleSignResponse::SubtleSignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleSignResponse)
}
SubtleSignResponse::SubtleSignResponse(const SubtleSignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_signature(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleSignResponse)
}

void SubtleSignResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleSignResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleSignResponse::~SubtleSignResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleSignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleSignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleSignResponse::ArenaDtor(void* object) {
  SubtleSignResponse* _this = reinterpret_cast< SubtleSignResponse* >(object);
  (void)_this;
}
void SubtleSignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleSignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleSignResponse& SubtleSignResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleSignResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleSignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleSignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleSignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes signature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleSignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleSignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signature = 1;
  if (this->signature().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleSignResponse)
  return target;
}

size_t SubtleSignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleSignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleSignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleSignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleSignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleSignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleSignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleSignResponse)
    MergeFrom(*source);
  }
}

void SubtleSignResponse::MergeFrom(const SubtleSignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleSignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {
    _internal_set_signature(from._internal_signature());
  }
}

void SubtleSignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleSignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleSignResponse::CopyFrom(const SubtleSignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleSignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleSignResponse::IsInitialized() const {
  return true;
}

void SubtleSignResponse::InternalSwap(SubtleSignResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleSignResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleVerifyRequest::InitAsDefaultInstance() {
}
class SubtleVerifyRequest::_Internal {
 public:
};

SubtleVerifyRequest::SubtleVerifyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleVerifyRequest)
}
SubtleVerifyRequest::SubtleVerifyRequest(const SubtleVerifyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  digest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_digest().empty()) {
    digest_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_digest(),
      GetArena());
  }
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_algorithm().empty()) {
    algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_algorithm(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_signature(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleVerifyRequest)
}

void SubtleVerifyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubtleVerifyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  digest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubtleVerifyRequest::~SubtleVerifyRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleVerifyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleVerifyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  digest_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubtleVerifyRequest::ArenaDtor(void* object) {
  SubtleVerifyRequest* _this = reinterpret_cast< SubtleVerifyRequest* >(object);
  (void)_this;
}
void SubtleVerifyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleVerifyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleVerifyRequest& SubtleVerifyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleVerifyRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleVerifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  digest_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleVerifyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleVerifyRequest.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes digest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_digest();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 4[json_name = "keyName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.SubtleVerifyRequest.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes signature = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleVerifyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleVerifyRequest.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // bytes digest = 2;
  if (this->digest().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_digest(), target);
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_algorithm().data(), static_cast<int>(this->_internal_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_algorithm(), target);
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.SubtleVerifyRequest.key_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key_name(), target);
  }

  // bytes signature = 5;
  if (this->signature().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleVerifyRequest)
  return target;
}

size_t SubtleVerifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // bytes digest = 2;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_digest());
  }

  // string algorithm = 3;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_algorithm());
  }

  // string key_name = 4[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  // bytes signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleVerifyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleVerifyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleVerifyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleVerifyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleVerifyRequest)
    MergeFrom(*source);
  }
}

void SubtleVerifyRequest::MergeFrom(const SubtleVerifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.digest().size() > 0) {
    _internal_set_digest(from._internal_digest());
  }
  if (from.algorithm().size() > 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
  if (from.signature().size() > 0) {
    _internal_set_signature(from._internal_signature());
  }
}

void SubtleVerifyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleVerifyRequest::CopyFrom(const SubtleVerifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleVerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleVerifyRequest::IsInitialized() const {
  return true;
}

void SubtleVerifyRequest::InternalSwap(SubtleVerifyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  digest_.Swap(&other->digest_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleVerifyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubtleVerifyResponse::InitAsDefaultInstance() {
}
class SubtleVerifyResponse::_Internal {
 public:
};

SubtleVerifyResponse::SubtleVerifyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.SubtleVerifyResponse)
}
SubtleVerifyResponse::SubtleVerifyResponse(const SubtleVerifyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  valid_ = from.valid_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.SubtleVerifyResponse)
}

void SubtleVerifyResponse::SharedCtor() {
  valid_ = false;
}

SubtleVerifyResponse::~SubtleVerifyResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.SubtleVerifyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubtleVerifyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubtleVerifyResponse::ArenaDtor(void* object) {
  SubtleVerifyResponse* _this = reinterpret_cast< SubtleVerifyResponse* >(object);
  (void)_this;
}
void SubtleVerifyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubtleVerifyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubtleVerifyResponse& SubtleVerifyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubtleVerifyResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void SubtleVerifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubtleVerifyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool valid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubtleVerifyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_valid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.SubtleVerifyResponse)
  return target;
}

size_t SubtleVerifyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubtleVerifyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubtleVerifyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubtleVerifyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.SubtleVerifyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.SubtleVerifyResponse)
    MergeFrom(*source);
  }
}

void SubtleVerifyResponse::MergeFrom(const SubtleVerifyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valid() != 0) {
    _internal_set_valid(from._internal_valid());
  }
}

void SubtleVerifyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubtleVerifyResponse::CopyFrom(const SubtleVerifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.SubtleVerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubtleVerifyResponse::IsInitialized() const {
  return true;
}

void SubtleVerifyResponse::InternalSwap(SubtleVerifyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(valid_, other->valid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubtleVerifyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EncryptRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_EncryptRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::proto::runtime::v1::EncryptRequestOptions*>(
      ::dapr::proto::runtime::v1::EncryptRequestOptions::internal_default_instance());
  ::dapr::proto::runtime::v1::_EncryptRequest_default_instance_._instance.get_mutable()->payload_ = const_cast< ::dapr::proto::common::v1::StreamPayload*>(
      ::dapr::proto::common::v1::StreamPayload::internal_default_instance());
}
class EncryptRequest::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::EncryptRequestOptions& options(const EncryptRequest* msg);
  static const ::dapr::proto::common::v1::StreamPayload& payload(const EncryptRequest* msg);
};

const ::dapr::proto::runtime::v1::EncryptRequestOptions&
EncryptRequest::_Internal::options(const EncryptRequest* msg) {
  return *msg->options_;
}
const ::dapr::proto::common::v1::StreamPayload&
EncryptRequest::_Internal::payload(const EncryptRequest* msg) {
  return *msg->payload_;
}
void EncryptRequest::clear_payload() {
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
EncryptRequest::EncryptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.EncryptRequest)
}
EncryptRequest::EncryptRequest(const EncryptRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::dapr::proto::runtime::v1::EncryptRequestOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  if (from._internal_has_payload()) {
    payload_ = new ::dapr::proto::common::v1::StreamPayload(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.EncryptRequest)
}

void EncryptRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  ::memset(&options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&payload_) -
      reinterpret_cast<char*>(&options_)) + sizeof(payload_));
}

EncryptRequest::~EncryptRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.EncryptRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EncryptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
  if (this != internal_default_instance()) delete payload_;
}

void EncryptRequest::ArenaDtor(void* object) {
  EncryptRequest* _this = reinterpret_cast< EncryptRequest* >(object);
  (void)_this;
}
void EncryptRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EncryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptRequest& EncryptRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EncryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void EncryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.EncryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EncryptRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StreamPayload payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EncryptRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.EncryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  // .dapr.proto.common.v1.StreamPayload payload = 2;
  if (this->has_payload()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::payload(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.EncryptRequest)
  return target;
}

size_t EncryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.EncryptRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  // .dapr.proto.common.v1.StreamPayload payload = 2;
  if (this->has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.EncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EncryptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.EncryptRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.EncryptRequest)
    MergeFrom(*source);
  }
}

void EncryptRequest::MergeFrom(const EncryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.EncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::dapr::proto::runtime::v1::EncryptRequestOptions::MergeFrom(from._internal_options());
  }
  if (from.has_payload()) {
    _internal_mutable_payload()->::dapr::proto::common::v1::StreamPayload::MergeFrom(from._internal_payload());
  }
}

void EncryptRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.EncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptRequest::CopyFrom(const EncryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.EncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptRequest::IsInitialized() const {
  return true;
}

void EncryptRequest::InternalSwap(EncryptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncryptRequest, payload_)
      + sizeof(EncryptRequest::payload_)
      - PROTOBUF_FIELD_OFFSET(EncryptRequest, options_)>(
          reinterpret_cast<char*>(&options_),
          reinterpret_cast<char*>(&other->options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EncryptRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EncryptRequestOptions::InitAsDefaultInstance() {
}
class EncryptRequestOptions::_Internal {
 public:
};

EncryptRequestOptions::EncryptRequestOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.EncryptRequestOptions)
}
EncryptRequestOptions::EncryptRequestOptions(const EncryptRequestOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  key_wrap_algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_wrap_algorithm().empty()) {
    key_wrap_algorithm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_wrap_algorithm(),
      GetArena());
  }
  data_encryption_cipher_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_encryption_cipher().empty()) {
    data_encryption_cipher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_encryption_cipher(),
      GetArena());
  }
  decryption_key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_decryption_key_name().empty()) {
    decryption_key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_decryption_key_name(),
      GetArena());
  }
  omit_decryption_key_name_ = from.omit_decryption_key_name_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.EncryptRequestOptions)
}

void EncryptRequestOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_wrap_algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_encryption_cipher_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  decryption_key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  omit_decryption_key_name_ = false;
}

EncryptRequestOptions::~EncryptRequestOptions() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.EncryptRequestOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EncryptRequestOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_wrap_algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_encryption_cipher_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  decryption_key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EncryptRequestOptions::ArenaDtor(void* object) {
  EncryptRequestOptions* _this = reinterpret_cast< EncryptRequestOptions* >(object);
  (void)_this;
}
void EncryptRequestOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EncryptRequestOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptRequestOptions& EncryptRequestOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EncryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void EncryptRequestOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_wrap_algorithm_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_encryption_cipher_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  decryption_key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  omit_decryption_key_name_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EncryptRequestOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.EncryptRequestOptions.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 2[json_name = "keyName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.EncryptRequestOptions.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_wrap_algorithm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_key_wrap_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_encryption_cipher = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_data_encryption_cipher();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool omit_decryption_key_name = 11[json_name = "omitDecryptionKeyName"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          omit_decryption_key_name_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string decryption_key_name = 12[json_name = "decryptionKeyName"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_decryption_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EncryptRequestOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.EncryptRequestOptions.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // string key_name = 2[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.EncryptRequestOptions.key_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key_name(), target);
  }

  // string key_wrap_algorithm = 3;
  if (this->key_wrap_algorithm().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_wrap_algorithm().data(), static_cast<int>(this->_internal_key_wrap_algorithm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key_wrap_algorithm(), target);
  }

  // string data_encryption_cipher = 10;
  if (this->data_encryption_cipher().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_encryption_cipher().data(), static_cast<int>(this->_internal_data_encryption_cipher().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_data_encryption_cipher(), target);
  }

  // bool omit_decryption_key_name = 11[json_name = "omitDecryptionKeyName"];
  if (this->omit_decryption_key_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_omit_decryption_key_name(), target);
  }

  // string decryption_key_name = 12[json_name = "decryptionKeyName"];
  if (this->decryption_key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_decryption_key_name().data(), static_cast<int>(this->_internal_decryption_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_decryption_key_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.EncryptRequestOptions)
  return target;
}

size_t EncryptRequestOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // string key_name = 2[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  // string key_wrap_algorithm = 3;
  if (this->key_wrap_algorithm().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_wrap_algorithm());
  }

  // string data_encryption_cipher = 10;
  if (this->data_encryption_cipher().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_encryption_cipher());
  }

  // string decryption_key_name = 12[json_name = "decryptionKeyName"];
  if (this->decryption_key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_decryption_key_name());
  }

  // bool omit_decryption_key_name = 11[json_name = "omitDecryptionKeyName"];
  if (this->omit_decryption_key_name() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptRequestOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptRequestOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EncryptRequestOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.EncryptRequestOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.EncryptRequestOptions)
    MergeFrom(*source);
  }
}

void EncryptRequestOptions::MergeFrom(const EncryptRequestOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
  if (from.key_wrap_algorithm().size() > 0) {
    _internal_set_key_wrap_algorithm(from._internal_key_wrap_algorithm());
  }
  if (from.data_encryption_cipher().size() > 0) {
    _internal_set_data_encryption_cipher(from._internal_data_encryption_cipher());
  }
  if (from.decryption_key_name().size() > 0) {
    _internal_set_decryption_key_name(from._internal_decryption_key_name());
  }
  if (from.omit_decryption_key_name() != 0) {
    _internal_set_omit_decryption_key_name(from._internal_omit_decryption_key_name());
  }
}

void EncryptRequestOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptRequestOptions::CopyFrom(const EncryptRequestOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.EncryptRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptRequestOptions::IsInitialized() const {
  return true;
}

void EncryptRequestOptions::InternalSwap(EncryptRequestOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_wrap_algorithm_.Swap(&other->key_wrap_algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_encryption_cipher_.Swap(&other->data_encryption_cipher_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  decryption_key_name_.Swap(&other->decryption_key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(omit_decryption_key_name_, other->omit_decryption_key_name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EncryptRequestOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EncryptResponse::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_EncryptResponse_default_instance_._instance.get_mutable()->payload_ = const_cast< ::dapr::proto::common::v1::StreamPayload*>(
      ::dapr::proto::common::v1::StreamPayload::internal_default_instance());
}
class EncryptResponse::_Internal {
 public:
  static const ::dapr::proto::common::v1::StreamPayload& payload(const EncryptResponse* msg);
};

const ::dapr::proto::common::v1::StreamPayload&
EncryptResponse::_Internal::payload(const EncryptResponse* msg) {
  return *msg->payload_;
}
void EncryptResponse::clear_payload() {
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
EncryptResponse::EncryptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.EncryptResponse)
}
EncryptResponse::EncryptResponse(const EncryptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_payload()) {
    payload_ = new ::dapr::proto::common::v1::StreamPayload(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.EncryptResponse)
}

void EncryptResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  payload_ = nullptr;
}

EncryptResponse::~EncryptResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.EncryptResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EncryptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete payload_;
}

void EncryptResponse::ArenaDtor(void* object) {
  EncryptResponse* _this = reinterpret_cast< EncryptResponse* >(object);
  (void)_this;
}
void EncryptResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EncryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptResponse& EncryptResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EncryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void EncryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.EncryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EncryptResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.common.v1.StreamPayload payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EncryptResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.EncryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.common.v1.StreamPayload payload = 1;
  if (this->has_payload()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payload(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.EncryptResponse)
  return target;
}

size_t EncryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.EncryptResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.common.v1.StreamPayload payload = 1;
  if (this->has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.EncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EncryptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.EncryptResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.EncryptResponse)
    MergeFrom(*source);
  }
}

void EncryptResponse::MergeFrom(const EncryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.EncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_payload()) {
    _internal_mutable_payload()->::dapr::proto::common::v1::StreamPayload::MergeFrom(from._internal_payload());
  }
}

void EncryptResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.EncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptResponse::CopyFrom(const EncryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.EncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptResponse::IsInitialized() const {
  return true;
}

void EncryptResponse::InternalSwap(EncryptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(payload_, other->payload_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EncryptResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DecryptRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_DecryptRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::proto::runtime::v1::DecryptRequestOptions*>(
      ::dapr::proto::runtime::v1::DecryptRequestOptions::internal_default_instance());
  ::dapr::proto::runtime::v1::_DecryptRequest_default_instance_._instance.get_mutable()->payload_ = const_cast< ::dapr::proto::common::v1::StreamPayload*>(
      ::dapr::proto::common::v1::StreamPayload::internal_default_instance());
}
class DecryptRequest::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::DecryptRequestOptions& options(const DecryptRequest* msg);
  static const ::dapr::proto::common::v1::StreamPayload& payload(const DecryptRequest* msg);
};

const ::dapr::proto::runtime::v1::DecryptRequestOptions&
DecryptRequest::_Internal::options(const DecryptRequest* msg) {
  return *msg->options_;
}
const ::dapr::proto::common::v1::StreamPayload&
DecryptRequest::_Internal::payload(const DecryptRequest* msg) {
  return *msg->payload_;
}
void DecryptRequest::clear_payload() {
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
DecryptRequest::DecryptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DecryptRequest)
}
DecryptRequest::DecryptRequest(const DecryptRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::dapr::proto::runtime::v1::DecryptRequestOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  if (from._internal_has_payload()) {
    payload_ = new ::dapr::proto::common::v1::StreamPayload(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DecryptRequest)
}

void DecryptRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  ::memset(&options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&payload_) -
      reinterpret_cast<char*>(&options_)) + sizeof(payload_));
}

DecryptRequest::~DecryptRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DecryptRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DecryptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
  if (this != internal_default_instance()) delete payload_;
}

void DecryptRequest::ArenaDtor(void* object) {
  DecryptRequest* _this = reinterpret_cast< DecryptRequest* >(object);
  (void)_this;
}
void DecryptRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DecryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptRequest& DecryptRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DecryptRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DecryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DecryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DecryptRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.StreamPayload payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DecryptRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DecryptRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  // .dapr.proto.common.v1.StreamPayload payload = 2;
  if (this->has_payload()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::payload(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DecryptRequest)
  return target;
}

size_t DecryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DecryptRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  // .dapr.proto.common.v1.StreamPayload payload = 2;
  if (this->has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DecryptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DecryptRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DecryptRequest)
    MergeFrom(*source);
  }
}

void DecryptRequest::MergeFrom(const DecryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::dapr::proto::runtime::v1::DecryptRequestOptions::MergeFrom(from._internal_options());
  }
  if (from.has_payload()) {
    _internal_mutable_payload()->::dapr::proto::common::v1::StreamPayload::MergeFrom(from._internal_payload());
  }
}

void DecryptRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptRequest::CopyFrom(const DecryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptRequest::IsInitialized() const {
  return true;
}

void DecryptRequest::InternalSwap(DecryptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DecryptRequest, payload_)
      + sizeof(DecryptRequest::payload_)
      - PROTOBUF_FIELD_OFFSET(DecryptRequest, options_)>(
          reinterpret_cast<char*>(&options_),
          reinterpret_cast<char*>(&other->options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DecryptRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DecryptRequestOptions::InitAsDefaultInstance() {
}
class DecryptRequestOptions::_Internal {
 public:
};

DecryptRequestOptions::DecryptRequestOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DecryptRequestOptions)
}
DecryptRequestOptions::DecryptRequestOptions(const DecryptRequestOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_component_name().empty()) {
    component_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_component_name(),
      GetArena());
  }
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key_name().empty()) {
    key_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DecryptRequestOptions)
}

void DecryptRequestOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  component_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DecryptRequestOptions::~DecryptRequestOptions() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DecryptRequestOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DecryptRequestOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  component_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DecryptRequestOptions::ArenaDtor(void* object) {
  DecryptRequestOptions* _this = reinterpret_cast< DecryptRequestOptions* >(object);
  (void)_this;
}
void DecryptRequestOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DecryptRequestOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptRequestOptions& DecryptRequestOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DecryptRequestOptions_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DecryptRequestOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DecryptRequestOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string component_name = 1[json_name = "componentName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_component_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.DecryptRequestOptions.component_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key_name = 12[json_name = "keyName"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_key_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.DecryptRequestOptions.key_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DecryptRequestOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_name().data(), static_cast<int>(this->_internal_component_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.DecryptRequestOptions.component_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_name(), target);
  }

  // string key_name = 12[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_name().data(), static_cast<int>(this->_internal_key_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.DecryptRequestOptions.key_name");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_key_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DecryptRequestOptions)
  return target;
}

size_t DecryptRequestOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_name = 1[json_name = "componentName"];
  if (this->component_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_name());
  }

  // string key_name = 12[json_name = "keyName"];
  if (this->key_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptRequestOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptRequestOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DecryptRequestOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DecryptRequestOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DecryptRequestOptions)
    MergeFrom(*source);
  }
}

void DecryptRequestOptions::MergeFrom(const DecryptRequestOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_name().size() > 0) {
    _internal_set_component_name(from._internal_component_name());
  }
  if (from.key_name().size() > 0) {
    _internal_set_key_name(from._internal_key_name());
  }
}

void DecryptRequestOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptRequestOptions::CopyFrom(const DecryptRequestOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DecryptRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptRequestOptions::IsInitialized() const {
  return true;
}

void DecryptRequestOptions::InternalSwap(DecryptRequestOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  component_name_.Swap(&other->component_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_name_.Swap(&other->key_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DecryptRequestOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DecryptResponse::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_DecryptResponse_default_instance_._instance.get_mutable()->payload_ = const_cast< ::dapr::proto::common::v1::StreamPayload*>(
      ::dapr::proto::common::v1::StreamPayload::internal_default_instance());
}
class DecryptResponse::_Internal {
 public:
  static const ::dapr::proto::common::v1::StreamPayload& payload(const DecryptResponse* msg);
};

const ::dapr::proto::common::v1::StreamPayload&
DecryptResponse::_Internal::payload(const DecryptResponse* msg) {
  return *msg->payload_;
}
void DecryptResponse::clear_payload() {
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
DecryptResponse::DecryptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DecryptResponse)
}
DecryptResponse::DecryptResponse(const DecryptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_payload()) {
    payload_ = new ::dapr::proto::common::v1::StreamPayload(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DecryptResponse)
}

void DecryptResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  payload_ = nullptr;
}

DecryptResponse::~DecryptResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DecryptResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DecryptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete payload_;
}

void DecryptResponse::ArenaDtor(void* object) {
  DecryptResponse* _this = reinterpret_cast< DecryptResponse* >(object);
  (void)_this;
}
void DecryptResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DecryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptResponse& DecryptResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DecryptResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DecryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DecryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DecryptResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.common.v1.StreamPayload payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DecryptResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DecryptResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.common.v1.StreamPayload payload = 1;
  if (this->has_payload()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::payload(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DecryptResponse)
  return target;
}

size_t DecryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DecryptResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.common.v1.StreamPayload payload = 1;
  if (this->has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DecryptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DecryptResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DecryptResponse)
    MergeFrom(*source);
  }
}

void DecryptResponse::MergeFrom(const DecryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_payload()) {
    _internal_mutable_payload()->::dapr::proto::common::v1::StreamPayload::MergeFrom(from._internal_payload());
  }
}

void DecryptResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptResponse::CopyFrom(const DecryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptResponse::IsInitialized() const {
  return true;
}

void DecryptResponse::InternalSwap(DecryptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(payload_, other->payload_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DecryptResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetWorkflowRequest::InitAsDefaultInstance() {
}
class GetWorkflowRequest::_Internal {
 public:
};

GetWorkflowRequest::GetWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetWorkflowRequest)
}
GetWorkflowRequest::GetWorkflowRequest(const GetWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetWorkflowRequest)
}

void GetWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetWorkflowRequest::~GetWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetWorkflowRequest::ArenaDtor(void* object) {
  GetWorkflowRequest* _this = reinterpret_cast< GetWorkflowRequest* >(object);
  (void)_this;
}
void GetWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkflowRequest& GetWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetWorkflowRequest)
  return target;
}

size_t GetWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetWorkflowRequest)
    MergeFrom(*source);
  }
}

void GetWorkflowRequest::MergeFrom(const GetWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
}

void GetWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkflowRequest::CopyFrom(const GetWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkflowRequest::IsInitialized() const {
  return true;
}

void GetWorkflowRequest::InternalSwap(GetWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetWorkflowResponse_PropertiesEntry_DoNotUse::GetWorkflowResponse_PropertiesEntry_DoNotUse() {}
GetWorkflowResponse_PropertiesEntry_DoNotUse::GetWorkflowResponse_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetWorkflowResponse_PropertiesEntry_DoNotUse::MergeFrom(const GetWorkflowResponse_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetWorkflowResponse_PropertiesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetWorkflowResponse_PropertiesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetWorkflowResponse::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_GetWorkflowResponse_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::dapr::proto::runtime::v1::_GetWorkflowResponse_default_instance_._instance.get_mutable()->last_updated_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetWorkflowResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const GetWorkflowResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& last_updated_at(const GetWorkflowResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
GetWorkflowResponse::_Internal::created_at(const GetWorkflowResponse* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetWorkflowResponse::_Internal::last_updated_at(const GetWorkflowResponse* msg) {
  return *msg->last_updated_at_;
}
void GetWorkflowResponse::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void GetWorkflowResponse::clear_last_updated_at() {
  if (GetArena() == nullptr && last_updated_at_ != nullptr) {
    delete last_updated_at_;
  }
  last_updated_at_ = nullptr;
}
GetWorkflowResponse::GetWorkflowResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetWorkflowResponse)
}
GetWorkflowResponse::GetWorkflowResponse(const GetWorkflowResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_name().empty()) {
    workflow_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_name(),
      GetArena());
  }
  runtime_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_runtime_status().empty()) {
    runtime_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_runtime_status(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_last_updated_at()) {
    last_updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_at_);
  } else {
    last_updated_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetWorkflowResponse)
}

void GetWorkflowResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  runtime_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_updated_at_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(last_updated_at_));
}

GetWorkflowResponse::~GetWorkflowResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetWorkflowResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetWorkflowResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  runtime_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete last_updated_at_;
}

void GetWorkflowResponse::ArenaDtor(void* object) {
  GetWorkflowResponse* _this = reinterpret_cast< GetWorkflowResponse* >(object);
  (void)_this;
}
void GetWorkflowResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetWorkflowResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetWorkflowResponse& GetWorkflowResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetWorkflowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  runtime_status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && last_updated_at_ != nullptr) {
    delete last_updated_at_;
  }
  last_updated_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWorkflowResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetWorkflowResponse.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_name = 2[json_name = "workflowName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3[json_name = "createdAt"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated_at = 4[json_name = "lastUpdatedAt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string runtime_status = 5[json_name = "runtimeStatus"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_runtime_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> properties = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetWorkflowResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetWorkflowResponse.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_name = 2[json_name = "workflowName"];
  if (this->workflow_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_name().data(), static_cast<int>(this->_internal_workflow_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_name(), target);
  }

  // .google.protobuf.Timestamp created_at = 3[json_name = "createdAt"];
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp last_updated_at = 4[json_name = "lastUpdatedAt"];
  if (this->has_last_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::last_updated_at(this), target, stream);
  }

  // string runtime_status = 5[json_name = "runtimeStatus"];
  if (this->runtime_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runtime_status().data(), static_cast<int>(this->_internal_runtime_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_runtime_status(), target);
  }

  // map<string, string> properties = 6;
  if (!this->_internal_properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetWorkflowResponse.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.GetWorkflowResponse.PropertiesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetWorkflowResponse_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it) {
        target = GetWorkflowResponse_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetWorkflowResponse)
  return target;
}

size_t GetWorkflowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += GetWorkflowResponse_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_name = 2[json_name = "workflowName"];
  if (this->workflow_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_name());
  }

  // string runtime_status = 5[json_name = "runtimeStatus"];
  if (this->runtime_status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runtime_status());
  }

  // .google.protobuf.Timestamp created_at = 3[json_name = "createdAt"];
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp last_updated_at = 4[json_name = "lastUpdatedAt"];
  if (this->has_last_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_at_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkflowResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkflowResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetWorkflowResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetWorkflowResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetWorkflowResponse)
    MergeFrom(*source);
  }
}

void GetWorkflowResponse::MergeFrom(const GetWorkflowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_name().size() > 0) {
    _internal_set_workflow_name(from._internal_workflow_name());
  }
  if (from.runtime_status().size() > 0) {
    _internal_set_runtime_status(from._internal_runtime_status());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_last_updated_at()) {
    _internal_mutable_last_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated_at());
  }
}

void GetWorkflowResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkflowResponse::CopyFrom(const GetWorkflowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetWorkflowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkflowResponse::IsInitialized() const {
  return true;
}

void GetWorkflowResponse::InternalSwap(GetWorkflowResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  properties_.Swap(&other->properties_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_name_.Swap(&other->workflow_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  runtime_status_.Swap(&other->runtime_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetWorkflowResponse, last_updated_at_)
      + sizeof(GetWorkflowResponse::last_updated_at_)
      - PROTOBUF_FIELD_OFFSET(GetWorkflowResponse, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWorkflowResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StartWorkflowRequest_OptionsEntry_DoNotUse::StartWorkflowRequest_OptionsEntry_DoNotUse() {}
StartWorkflowRequest_OptionsEntry_DoNotUse::StartWorkflowRequest_OptionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StartWorkflowRequest_OptionsEntry_DoNotUse::MergeFrom(const StartWorkflowRequest_OptionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StartWorkflowRequest_OptionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void StartWorkflowRequest_OptionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void StartWorkflowRequest::InitAsDefaultInstance() {
}
class StartWorkflowRequest::_Internal {
 public:
};

StartWorkflowRequest::StartWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  options_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.StartWorkflowRequest)
}
StartWorkflowRequest::StartWorkflowRequest(const StartWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  options_.MergeFrom(from.options_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  workflow_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_name().empty()) {
    workflow_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_name(),
      GetArena());
  }
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input().empty()) {
    input_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_input(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.StartWorkflowRequest)
}

void StartWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartWorkflowRequest::~StartWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.StartWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartWorkflowRequest::ArenaDtor(void* object) {
  StartWorkflowRequest* _this = reinterpret_cast< StartWorkflowRequest* >(object);
  (void)_this;
}
void StartWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartWorkflowRequest& StartWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void StartWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  input_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.StartWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_name = 3[json_name = "workflowName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_workflow_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&options_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes input = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_input();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.StartWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  // string workflow_name = 3[json_name = "workflowName"];
  if (this->workflow_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_name().data(), static_cast<int>(this->_internal_workflow_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_workflow_name(), target);
  }

  // map<string, string> options = 4;
  if (!this->_internal_options().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.StartWorkflowRequest.OptionsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.StartWorkflowRequest.OptionsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_options().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_options().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_options().begin();
          it != this->_internal_options().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StartWorkflowRequest_OptionsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_options().begin();
          it != this->_internal_options().end(); ++it) {
        target = StartWorkflowRequest_OptionsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // bytes input = 5;
  if (this->input().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_input(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.StartWorkflowRequest)
  return target;
}

size_t StartWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> options = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_options_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_options().begin();
      it != this->_internal_options().end(); ++it) {
    total_size += StartWorkflowRequest_OptionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  // string workflow_name = 3[json_name = "workflowName"];
  if (this->workflow_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_name());
  }

  // bytes input = 5;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_input());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.StartWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.StartWorkflowRequest)
    MergeFrom(*source);
  }
}

void StartWorkflowRequest::MergeFrom(const StartWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
  if (from.workflow_name().size() > 0) {
    _internal_set_workflow_name(from._internal_workflow_name());
  }
  if (from.input().size() > 0) {
    _internal_set_input(from._internal_input());
  }
}

void StartWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartWorkflowRequest::CopyFrom(const StartWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.StartWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartWorkflowRequest::IsInitialized() const {
  return true;
}

void StartWorkflowRequest::InternalSwap(StartWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  options_.Swap(&other->options_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_name_.Swap(&other->workflow_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  input_.Swap(&other->input_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartWorkflowResponse::InitAsDefaultInstance() {
}
class StartWorkflowResponse::_Internal {
 public:
};

StartWorkflowResponse::StartWorkflowResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.StartWorkflowResponse)
}
StartWorkflowResponse::StartWorkflowResponse(const StartWorkflowResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.StartWorkflowResponse)
}

void StartWorkflowResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartWorkflowResponse::~StartWorkflowResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.StartWorkflowResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartWorkflowResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartWorkflowResponse::ArenaDtor(void* object) {
  StartWorkflowResponse* _this = reinterpret_cast< StartWorkflowResponse* >(object);
  (void)_this;
}
void StartWorkflowResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartWorkflowResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartWorkflowResponse& StartWorkflowResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartWorkflowResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void StartWorkflowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartWorkflowResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.StartWorkflowResponse.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartWorkflowResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.StartWorkflowResponse.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.StartWorkflowResponse)
  return target;
}

size_t StartWorkflowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartWorkflowResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartWorkflowResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartWorkflowResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.StartWorkflowResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.StartWorkflowResponse)
    MergeFrom(*source);
  }
}

void StartWorkflowResponse::MergeFrom(const StartWorkflowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
}

void StartWorkflowResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartWorkflowResponse::CopyFrom(const StartWorkflowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.StartWorkflowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartWorkflowResponse::IsInitialized() const {
  return true;
}

void StartWorkflowResponse::InternalSwap(StartWorkflowResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartWorkflowResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TerminateWorkflowRequest::InitAsDefaultInstance() {
}
class TerminateWorkflowRequest::_Internal {
 public:
};

TerminateWorkflowRequest::TerminateWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TerminateWorkflowRequest)
}
TerminateWorkflowRequest::TerminateWorkflowRequest(const TerminateWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TerminateWorkflowRequest)
}

void TerminateWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TerminateWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TerminateWorkflowRequest::~TerminateWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TerminateWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TerminateWorkflowRequest::ArenaDtor(void* object) {
  TerminateWorkflowRequest* _this = reinterpret_cast< TerminateWorkflowRequest* >(object);
  (void)_this;
}
void TerminateWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TerminateWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TerminateWorkflowRequest& TerminateWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TerminateWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void TerminateWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TerminateWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TerminateWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  return target;
}

size_t TerminateWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TerminateWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminateWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TerminateWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TerminateWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TerminateWorkflowRequest)
    MergeFrom(*source);
  }
}

void TerminateWorkflowRequest::MergeFrom(const TerminateWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
}

void TerminateWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminateWorkflowRequest::CopyFrom(const TerminateWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TerminateWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminateWorkflowRequest::IsInitialized() const {
  return true;
}

void TerminateWorkflowRequest::InternalSwap(TerminateWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TerminateWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseWorkflowRequest::InitAsDefaultInstance() {
}
class PauseWorkflowRequest::_Internal {
 public:
};

PauseWorkflowRequest::PauseWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.PauseWorkflowRequest)
}
PauseWorkflowRequest::PauseWorkflowRequest(const PauseWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.PauseWorkflowRequest)
}

void PauseWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PauseWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PauseWorkflowRequest::~PauseWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.PauseWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PauseWorkflowRequest::ArenaDtor(void* object) {
  PauseWorkflowRequest* _this = reinterpret_cast< PauseWorkflowRequest* >(object);
  (void)_this;
}
void PauseWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseWorkflowRequest& PauseWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void PauseWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.PauseWorkflowRequest)
  return target;
}

size_t PauseWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.PauseWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.PauseWorkflowRequest)
    MergeFrom(*source);
  }
}

void PauseWorkflowRequest::MergeFrom(const PauseWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
}

void PauseWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseWorkflowRequest::CopyFrom(const PauseWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.PauseWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseWorkflowRequest::IsInitialized() const {
  return true;
}

void PauseWorkflowRequest::InternalSwap(PauseWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResumeWorkflowRequest::InitAsDefaultInstance() {
}
class ResumeWorkflowRequest::_Internal {
 public:
};

ResumeWorkflowRequest::ResumeWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ResumeWorkflowRequest)
}
ResumeWorkflowRequest::ResumeWorkflowRequest(const ResumeWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ResumeWorkflowRequest)
}

void ResumeWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResumeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResumeWorkflowRequest::~ResumeWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResumeWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResumeWorkflowRequest::ArenaDtor(void* object) {
  ResumeWorkflowRequest* _this = reinterpret_cast< ResumeWorkflowRequest* >(object);
  (void)_this;
}
void ResumeWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResumeWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResumeWorkflowRequest& ResumeWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResumeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ResumeWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResumeWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResumeWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  return target;
}

size_t ResumeWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResumeWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResumeWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ResumeWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ResumeWorkflowRequest)
    MergeFrom(*source);
  }
}

void ResumeWorkflowRequest::MergeFrom(const ResumeWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
}

void ResumeWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeWorkflowRequest::CopyFrom(const ResumeWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ResumeWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeWorkflowRequest::IsInitialized() const {
  return true;
}

void ResumeWorkflowRequest::InternalSwap(ResumeWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResumeWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RaiseEventWorkflowRequest::InitAsDefaultInstance() {
}
class RaiseEventWorkflowRequest::_Internal {
 public:
};

RaiseEventWorkflowRequest::RaiseEventWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
}
RaiseEventWorkflowRequest::RaiseEventWorkflowRequest(const RaiseEventWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event_name().empty()) {
    event_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_event_name(),
      GetArena());
  }
  event_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event_data().empty()) {
    event_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_event_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
}

void RaiseEventWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RaiseEventWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RaiseEventWorkflowRequest::~RaiseEventWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RaiseEventWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RaiseEventWorkflowRequest::ArenaDtor(void* object) {
  RaiseEventWorkflowRequest* _this = reinterpret_cast< RaiseEventWorkflowRequest* >(object);
  (void)_this;
}
void RaiseEventWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RaiseEventWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RaiseEventWorkflowRequest& RaiseEventWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RaiseEventWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void RaiseEventWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RaiseEventWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string event_name = 3[json_name = "eventName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_event_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes event_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_event_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RaiseEventWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  // string event_name = 3[json_name = "eventName"];
  if (this->event_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_event_name().data(), static_cast<int>(this->_internal_event_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_event_name(), target);
  }

  // bytes event_data = 4;
  if (this->event_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_event_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  return target;
}

size_t RaiseEventWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  // string event_name = 3[json_name = "eventName"];
  if (this->event_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_event_name());
  }

  // bytes event_data = 4;
  if (this->event_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_event_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RaiseEventWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RaiseEventWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RaiseEventWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
    MergeFrom(*source);
  }
}

void RaiseEventWorkflowRequest::MergeFrom(const RaiseEventWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
  if (from.event_name().size() > 0) {
    _internal_set_event_name(from._internal_event_name());
  }
  if (from.event_data().size() > 0) {
    _internal_set_event_data(from._internal_event_data());
  }
}

void RaiseEventWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaiseEventWorkflowRequest::CopyFrom(const RaiseEventWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaiseEventWorkflowRequest::IsInitialized() const {
  return true;
}

void RaiseEventWorkflowRequest::InternalSwap(RaiseEventWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_name_.Swap(&other->event_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_data_.Swap(&other->event_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RaiseEventWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PurgeWorkflowRequest::InitAsDefaultInstance() {
}
class PurgeWorkflowRequest::_Internal {
 public:
};

PurgeWorkflowRequest::PurgeWorkflowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.PurgeWorkflowRequest)
}
PurgeWorkflowRequest::PurgeWorkflowRequest(const PurgeWorkflowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance_id().empty()) {
    instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instance_id(),
      GetArena());
  }
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workflow_component().empty()) {
    workflow_component_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workflow_component(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.PurgeWorkflowRequest)
}

void PurgeWorkflowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PurgeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PurgeWorkflowRequest::~PurgeWorkflowRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PurgeWorkflowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workflow_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PurgeWorkflowRequest::ArenaDtor(void* object) {
  PurgeWorkflowRequest* _this = reinterpret_cast< PurgeWorkflowRequest* >(object);
  (void)_this;
}
void PurgeWorkflowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PurgeWorkflowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PurgeWorkflowRequest& PurgeWorkflowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PurgeWorkflowRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void PurgeWorkflowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PurgeWorkflowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance_id = 1[json_name = "instanceID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workflow_component = 2[json_name = "workflowComponent"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workflow_component();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PurgeWorkflowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_component().data(), static_cast<int>(this->_internal_workflow_component().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workflow_component(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  return target;
}

size_t PurgeWorkflowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1[json_name = "instanceID"];
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string workflow_component = 2[json_name = "workflowComponent"];
  if (this->workflow_component().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_component());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PurgeWorkflowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PurgeWorkflowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PurgeWorkflowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.PurgeWorkflowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.PurgeWorkflowRequest)
    MergeFrom(*source);
  }
}

void PurgeWorkflowRequest::MergeFrom(const PurgeWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_id().size() > 0) {
    _internal_set_instance_id(from._internal_instance_id());
  }
  if (from.workflow_component().size() > 0) {
    _internal_set_workflow_component(from._internal_workflow_component());
  }
}

void PurgeWorkflowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurgeWorkflowRequest::CopyFrom(const PurgeWorkflowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.PurgeWorkflowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurgeWorkflowRequest::IsInitialized() const {
  return true;
}

void PurgeWorkflowRequest::InternalSwap(PurgeWorkflowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  instance_id_.Swap(&other->instance_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workflow_component_.Swap(&other->workflow_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PurgeWorkflowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShutdownRequest::InitAsDefaultInstance() {
}
class ShutdownRequest::_Internal {
 public:
};

ShutdownRequest::ShutdownRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ShutdownRequest)
}
ShutdownRequest::ShutdownRequest(const ShutdownRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ShutdownRequest)
}

void ShutdownRequest::SharedCtor() {
}

ShutdownRequest::~ShutdownRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ShutdownRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShutdownRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ShutdownRequest::ArenaDtor(void* object) {
  ShutdownRequest* _this = reinterpret_cast< ShutdownRequest* >(object);
  (void)_this;
}
void ShutdownRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShutdownRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShutdownRequest& ShutdownRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShutdownRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ShutdownRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ShutdownRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShutdownRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShutdownRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ShutdownRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ShutdownRequest)
  return target;
}

size_t ShutdownRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ShutdownRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShutdownRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ShutdownRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShutdownRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShutdownRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ShutdownRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ShutdownRequest)
    MergeFrom(*source);
  }
}

void ShutdownRequest::MergeFrom(const ShutdownRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ShutdownRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShutdownRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ShutdownRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutdownRequest::CopyFrom(const ShutdownRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ShutdownRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownRequest::IsInitialized() const {
  return true;
}

void ShutdownRequest::InternalSwap(ShutdownRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShutdownRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Job::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_Job_default_instance_._instance.get_mutable()->data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class Job::_Internal {
 public:
  using HasBits = decltype(std::declval<Job>()._has_bits_);
  static void set_has_schedule(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_repeats(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_due_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const PROTOBUF_NAMESPACE_ID::Any& data(const Job* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
Job::_Internal::data(const Job* msg) {
  return *msg->data_;
}
void Job::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
Job::Job(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.Job)
}
Job::Job(const Job& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  schedule_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_schedule()) {
    schedule_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_schedule(),
      GetArena());
  }
  due_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_due_time()) {
    due_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_due_time(),
      GetArena());
  }
  ttl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_ttl()) {
    ttl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ttl(),
      GetArena());
  }
  if (from._internal_has_data()) {
    data_ = new PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  repeats_ = from.repeats_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.Job)
}

void Job::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schedule_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  due_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ttl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeats_) -
      reinterpret_cast<char*>(&data_)) + sizeof(repeats_));
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.Job)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Job::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schedule_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  due_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ttl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void Job::ArenaDtor(void* object) {
  Job* _this = reinterpret_cast< Job* >(object);
  (void)_this;
}
void Job::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Job::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Job& Job::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Job_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.Job)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      schedule_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      due_time_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ttl_.ClearNonDefaultToEmpty();
    }
  }
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  repeats_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Job::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1[json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.Job.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string schedule = 2[json_name = "schedule"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_schedule();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.Job.schedule"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 repeats = 3[json_name = "repeats"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_repeats(&has_bits);
          repeats_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string due_time = 4[json_name = "dueTime"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_due_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.Job.due_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ttl = 5[json_name = "ttl"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_ttl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.Job.ttl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any data = 6[json_name = "data"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Job::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.Job)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.Job.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string schedule = 2[json_name = "schedule"];
  if (_internal_has_schedule()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_schedule().data(), static_cast<int>(this->_internal_schedule().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.Job.schedule");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_schedule(), target);
  }

  // uint32 repeats = 3[json_name = "repeats"];
  if (_internal_has_repeats()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_repeats(), target);
  }

  // string due_time = 4[json_name = "dueTime"];
  if (_internal_has_due_time()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_due_time().data(), static_cast<int>(this->_internal_due_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.Job.due_time");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_due_time(), target);
  }

  // string ttl = 5[json_name = "ttl"];
  if (_internal_has_ttl()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ttl().data(), static_cast<int>(this->_internal_ttl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.Job.ttl");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_ttl(), target);
  }

  // .google.protobuf.Any data = 6[json_name = "data"];
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.Job)
  return target;
}

size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.Job)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // string schedule = 2[json_name = "schedule"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_schedule());
    }

    // string due_time = 4[json_name = "dueTime"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_due_time());
    }

    // string ttl = 5[json_name = "ttl"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_ttl());
    }

  }
  // .google.protobuf.Any data = 6[json_name = "data"];
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint32 repeats = 3[json_name = "repeats"];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_repeats());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.Job)
  GOOGLE_DCHECK_NE(&from, this);
  const Job* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Job>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.Job)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.Job)
    MergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.Job)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_schedule(from._internal_schedule());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_due_time(from._internal_due_time());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_ttl(from._internal_ttl());
    }
  }
  if (from.has_data()) {
    _internal_mutable_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  if (cached_has_bits & 0x00000008u) {
    _internal_set_repeats(from._internal_repeats());
  }
}

void Job::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job::IsInitialized() const {
  return true;
}

void Job::InternalSwap(Job* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  schedule_.Swap(&other->schedule_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  due_time_.Swap(&other->due_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ttl_.Swap(&other->ttl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Job, repeats_)
      + sizeof(Job::repeats_)
      - PROTOBUF_FIELD_OFFSET(Job, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Job::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScheduleJobRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_ScheduleJobRequest_default_instance_._instance.get_mutable()->job_ = const_cast< ::dapr::proto::runtime::v1::Job*>(
      ::dapr::proto::runtime::v1::Job::internal_default_instance());
}
class ScheduleJobRequest::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::Job& job(const ScheduleJobRequest* msg);
};

const ::dapr::proto::runtime::v1::Job&
ScheduleJobRequest::_Internal::job(const ScheduleJobRequest* msg) {
  return *msg->job_;
}
ScheduleJobRequest::ScheduleJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ScheduleJobRequest)
}
ScheduleJobRequest::ScheduleJobRequest(const ScheduleJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_job()) {
    job_ = new ::dapr::proto::runtime::v1::Job(*from.job_);
  } else {
    job_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ScheduleJobRequest)
}

void ScheduleJobRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ScheduleJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  job_ = nullptr;
}

ScheduleJobRequest::~ScheduleJobRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ScheduleJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScheduleJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete job_;
}

void ScheduleJobRequest::ArenaDtor(void* object) {
  ScheduleJobRequest* _this = reinterpret_cast< ScheduleJobRequest* >(object);
  (void)_this;
}
void ScheduleJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScheduleJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScheduleJobRequest& ScheduleJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScheduleJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ScheduleJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && job_ != nullptr) {
    delete job_;
  }
  job_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScheduleJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.Job job = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_job(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScheduleJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.Job job = 1;
  if (this->has_job()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::job(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ScheduleJobRequest)
  return target;
}

size_t ScheduleJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.Job job = 1;
  if (this->has_job()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *job_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScheduleJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScheduleJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ScheduleJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ScheduleJobRequest)
    MergeFrom(*source);
  }
}

void ScheduleJobRequest::MergeFrom(const ScheduleJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    _internal_mutable_job()->::dapr::proto::runtime::v1::Job::MergeFrom(from._internal_job());
  }
}

void ScheduleJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleJobRequest::CopyFrom(const ScheduleJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ScheduleJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleJobRequest::IsInitialized() const {
  return true;
}

void ScheduleJobRequest::InternalSwap(ScheduleJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(job_, other->job_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScheduleJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScheduleJobResponse::InitAsDefaultInstance() {
}
class ScheduleJobResponse::_Internal {
 public:
};

ScheduleJobResponse::ScheduleJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ScheduleJobResponse)
}
ScheduleJobResponse::ScheduleJobResponse(const ScheduleJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ScheduleJobResponse)
}

void ScheduleJobResponse::SharedCtor() {
}

ScheduleJobResponse::~ScheduleJobResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ScheduleJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScheduleJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ScheduleJobResponse::ArenaDtor(void* object) {
  ScheduleJobResponse* _this = reinterpret_cast< ScheduleJobResponse* >(object);
  (void)_this;
}
void ScheduleJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScheduleJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScheduleJobResponse& ScheduleJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScheduleJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void ScheduleJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScheduleJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScheduleJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ScheduleJobResponse)
  return target;
}

size_t ScheduleJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScheduleJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScheduleJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ScheduleJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ScheduleJobResponse)
    MergeFrom(*source);
  }
}

void ScheduleJobResponse::MergeFrom(const ScheduleJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ScheduleJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleJobResponse::CopyFrom(const ScheduleJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ScheduleJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleJobResponse::IsInitialized() const {
  return true;
}

void ScheduleJobResponse::InternalSwap(ScheduleJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScheduleJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetJobRequest::InitAsDefaultInstance() {
}
class GetJobRequest::_Internal {
 public:
};

GetJobRequest::GetJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetJobRequest)
}
GetJobRequest::GetJobRequest(const GetJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetJobRequest)
}

void GetJobRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetJobRequest::~GetJobRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetJobRequest::ArenaDtor(void* object) {
  GetJobRequest* _this = reinterpret_cast< GetJobRequest* >(object);
  (void)_this;
}
void GetJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJobRequest& GetJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.GetJobRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.GetJobRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetJobRequest)
  return target;
}

size_t GetJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetJobRequest)
    MergeFrom(*source);
  }
}

void GetJobRequest::MergeFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobRequest::CopyFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobRequest::IsInitialized() const {
  return true;
}

void GetJobRequest::InternalSwap(GetJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetJobResponse::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_GetJobResponse_default_instance_._instance.get_mutable()->job_ = const_cast< ::dapr::proto::runtime::v1::Job*>(
      ::dapr::proto::runtime::v1::Job::internal_default_instance());
}
class GetJobResponse::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::Job& job(const GetJobResponse* msg);
};

const ::dapr::proto::runtime::v1::Job&
GetJobResponse::_Internal::job(const GetJobResponse* msg) {
  return *msg->job_;
}
GetJobResponse::GetJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.GetJobResponse)
}
GetJobResponse::GetJobResponse(const GetJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_job()) {
    job_ = new ::dapr::proto::runtime::v1::Job(*from.job_);
  } else {
    job_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.GetJobResponse)
}

void GetJobResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  job_ = nullptr;
}

GetJobResponse::~GetJobResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.GetJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete job_;
}

void GetJobResponse::ArenaDtor(void* object) {
  GetJobResponse* _this = reinterpret_cast< GetJobResponse* >(object);
  (void)_this;
}
void GetJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJobResponse& GetJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void GetJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.GetJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && job_ != nullptr) {
    delete job_;
  }
  job_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.Job job = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_job(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.GetJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.Job job = 1;
  if (this->has_job()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::job(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.GetJobResponse)
  return target;
}

size_t GetJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.GetJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.Job job = 1;
  if (this->has_job()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *job_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.GetJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.GetJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.GetJobResponse)
    MergeFrom(*source);
  }
}

void GetJobResponse::MergeFrom(const GetJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.GetJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job()) {
    _internal_mutable_job()->::dapr::proto::runtime::v1::Job::MergeFrom(from._internal_job());
  }
}

void GetJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.GetJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobResponse::CopyFrom(const GetJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.GetJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobResponse::IsInitialized() const {
  return true;
}

void GetJobResponse::InternalSwap(GetJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(job_, other->job_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteJobRequest::InitAsDefaultInstance() {
}
class DeleteJobRequest::_Internal {
 public:
};

DeleteJobRequest::DeleteJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DeleteJobRequest)
}
DeleteJobRequest::DeleteJobRequest(const DeleteJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DeleteJobRequest)
}

void DeleteJobRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteJobRequest::~DeleteJobRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DeleteJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteJobRequest::ArenaDtor(void* object) {
  DeleteJobRequest* _this = reinterpret_cast< DeleteJobRequest* >(object);
  (void)_this;
}
void DeleteJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteJobRequest& DeleteJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteJobRequest_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DeleteJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DeleteJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.DeleteJobRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DeleteJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.DeleteJobRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DeleteJobRequest)
  return target;
}

size_t DeleteJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DeleteJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DeleteJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DeleteJobRequest)
    MergeFrom(*source);
  }
}

void DeleteJobRequest::MergeFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobRequest::CopyFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobRequest::IsInitialized() const {
  return true;
}

void DeleteJobRequest::InternalSwap(DeleteJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteJobResponse::InitAsDefaultInstance() {
}
class DeleteJobResponse::_Internal {
 public:
};

DeleteJobResponse::DeleteJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.DeleteJobResponse)
}
DeleteJobResponse::DeleteJobResponse(const DeleteJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.DeleteJobResponse)
}

void DeleteJobResponse::SharedCtor() {
}

DeleteJobResponse::~DeleteJobResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.DeleteJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteJobResponse::ArenaDtor(void* object) {
  DeleteJobResponse* _this = reinterpret_cast< DeleteJobResponse* >(object);
  (void)_this;
}
void DeleteJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteJobResponse& DeleteJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteJobResponse_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto.base);
  return *internal_default_instance();
}


void DeleteJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.DeleteJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.DeleteJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.DeleteJobResponse)
  return target;
}

size_t DeleteJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.DeleteJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.DeleteJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.DeleteJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.DeleteJobResponse)
    MergeFrom(*source);
  }
}

void DeleteJobResponse::MergeFrom(const DeleteJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.DeleteJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.DeleteJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobResponse::CopyFrom(const DeleteJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.DeleteJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobResponse::IsInitialized() const {
  return true;
}

void DeleteJobResponse::InternalSwap(DeleteJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeServiceRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkStateResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkStateItem* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkStateItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkStateItem >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetStateResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DeleteStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DeleteStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DeleteStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DeleteBulkStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DeleteBulkStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DeleteBulkStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SaveStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SaveStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SaveStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::QueryStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::QueryStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::QueryStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::QueryStateItem* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::QueryStateItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::QueryStateItem >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::QueryStateResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::QueryStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::QueryStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PublishEventRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PublishEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PublishEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkPublishRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkPublishRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkPublishRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkPublishRequestEntry* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkPublishResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkPublishResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkPublishResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1 >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestInitialAlpha1 >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestProcessedAlpha1 >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1 >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseInitialAlpha1 >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeBindingRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeBindingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeBindingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeBindingResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeBindingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeBindingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetSecretRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetSecretResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkSecretRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SecretResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetBulkSecretResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetBulkSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetBulkSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TransactionalStateOperation* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TransactionalStateOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TransactionalStateOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::RegisterActorTimerRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::RegisterActorTimerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::RegisterActorTimerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::UnregisterActorTimerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::UnregisterActorTimerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::RegisterActorReminderRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::RegisterActorReminderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::RegisterActorReminderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::UnregisterActorReminderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::UnregisterActorReminderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetActorStateRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetActorStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetActorStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetActorStateResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetActorStateResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetActorStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetActorStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TransactionalActorStateOperation* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeActorRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeActorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeActorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::InvokeActorResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::InvokeActorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::InvokeActorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetMetadataRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetMetadataResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ActorRuntime* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ActorRuntime >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ActorRuntime >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ActiveActorsCount* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ActiveActorsCount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ActiveActorsCount >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::RegisteredComponents* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::RegisteredComponents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::RegisteredComponents >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::MetadataHTTPEndpoint* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::MetadataHTTPEndpoint >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::AppConnectionProperties* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::AppConnectionProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::AppConnectionProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::AppConnectionHealthProperties* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::AppConnectionHealthProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::AppConnectionHealthProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PubsubSubscription* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PubsubSubscription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PubsubSubscription >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PubsubSubscriptionRules* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PubsubSubscriptionRules >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PubsubSubscriptionRules >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PubsubSubscriptionRule* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SetMetadataRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SetMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SetMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetConfigurationRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetConfigurationResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubscribeConfigurationResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TryLockRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TryLockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TryLockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TryLockResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TryLockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TryLockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::UnlockRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::UnlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::UnlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::UnlockResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::UnlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::UnlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleGetKeyRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleGetKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleGetKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleGetKeyResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleGetKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleGetKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleEncryptRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleEncryptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleEncryptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleEncryptResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleEncryptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleEncryptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleDecryptRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleDecryptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleDecryptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleDecryptResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleDecryptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleDecryptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleWrapKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleWrapKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleSignRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleSignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleSignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleSignResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleSignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleSignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleVerifyRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleVerifyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleVerifyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::SubtleVerifyResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::SubtleVerifyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::SubtleVerifyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::EncryptRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::EncryptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::EncryptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::EncryptRequestOptions* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::EncryptRequestOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::EncryptRequestOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::EncryptResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::EncryptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::EncryptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DecryptRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DecryptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DecryptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DecryptRequestOptions* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DecryptRequestOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DecryptRequestOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DecryptResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DecryptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DecryptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetWorkflowResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetWorkflowResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetWorkflowResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::StartWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::StartWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::StartWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::StartWorkflowResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::StartWorkflowResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::StartWorkflowResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TerminateWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TerminateWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TerminateWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PauseWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PauseWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PauseWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ResumeWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ResumeWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ResumeWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::PurgeWorkflowRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::PurgeWorkflowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::PurgeWorkflowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ShutdownRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ShutdownRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ShutdownRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::Job* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::Job >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::Job >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ScheduleJobRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ScheduleJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ScheduleJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ScheduleJobResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ScheduleJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ScheduleJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetJobRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::GetJobResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::GetJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::GetJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DeleteJobRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DeleteJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DeleteJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::DeleteJobResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::DeleteJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::DeleteJobResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
