// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/runtime/v1/appcallback.proto

#include "dapr/proto/runtime/v1/appcallback.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BindingEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventBulkRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
class JobEventRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobEventRequest> _instance;
} _JobEventRequest_default_instance_;
class JobEventResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobEventResponse> _instance;
} _JobEventResponse_default_instance_;
class TopicEventRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventRequest> _instance;
} _TopicEventRequest_default_instance_;
class TopicEventResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventResponse> _instance;
} _TopicEventResponse_default_instance_;
class TopicEventCERequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventCERequest> _instance;
} _TopicEventCERequest_default_instance_;
class TopicEventBulkRequestEntry_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventBulkRequestEntry_MetadataEntry_DoNotUse> _instance;
} _TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_default_instance_;
class TopicEventBulkRequestEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventBulkRequestEntry> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_;
  const ::dapr::proto::runtime::v1::TopicEventCERequest* cloud_event_;
} _TopicEventBulkRequestEntry_default_instance_;
class TopicEventBulkRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventBulkRequest_MetadataEntry_DoNotUse> _instance;
} _TopicEventBulkRequest_MetadataEntry_DoNotUse_default_instance_;
class TopicEventBulkRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventBulkRequest> _instance;
} _TopicEventBulkRequest_default_instance_;
class TopicEventBulkResponseEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventBulkResponseEntry> _instance;
} _TopicEventBulkResponseEntry_default_instance_;
class TopicEventBulkResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicEventBulkResponse> _instance;
} _TopicEventBulkResponse_default_instance_;
class BindingEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BindingEventRequest_MetadataEntry_DoNotUse> _instance;
} _BindingEventRequest_MetadataEntry_DoNotUse_default_instance_;
class BindingEventRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BindingEventRequest> _instance;
} _BindingEventRequest_default_instance_;
class BindingEventResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BindingEventResponse> _instance;
} _BindingEventResponse_default_instance_;
class ListTopicSubscriptionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListTopicSubscriptionsResponse> _instance;
} _ListTopicSubscriptionsResponse_default_instance_;
class TopicSubscription_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicSubscription_MetadataEntry_DoNotUse> _instance;
} _TopicSubscription_MetadataEntry_DoNotUse_default_instance_;
class TopicSubscriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicSubscription> _instance;
} _TopicSubscription_default_instance_;
class TopicRoutesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicRoutes> _instance;
} _TopicRoutes_default_instance_;
class TopicRuleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TopicRule> _instance;
} _TopicRule_default_instance_;
class BulkSubscribeConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkSubscribeConfig> _instance;
} _BulkSubscribeConfig_default_instance_;
class ListInputBindingsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListInputBindingsResponse> _instance;
} _ListInputBindingsResponse_default_instance_;
class HealthCheckResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthCheckResponse> _instance;
} _HealthCheckResponse_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
static void InitDefaultsscc_info_BindingEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BindingEventRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BindingEventRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BindingEventRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BindingEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BindingEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_BindingEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_BindingEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BindingEventRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BindingEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BindingEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_BindingEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BindingEventResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BindingEventResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BindingEventResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BindingEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BindingEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_StateItem_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BulkSubscribeConfig_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BulkSubscribeConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BulkSubscribeConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_HealthCheckResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_HealthCheckResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::HealthCheckResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::HealthCheckResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthCheckResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthCheckResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_JobEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_JobEventRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::JobEventRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::JobEventRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_JobEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_JobEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_HTTPExtension_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_JobEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_JobEventResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::JobEventResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::JobEventResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_ListInputBindingsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ListInputBindingsResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ListInputBindingsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ListInputBindingsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListInputBindingsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListInputBindingsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_ListTopicSubscriptionsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ListTopicSubscriptionsResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListTopicSubscriptionsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListTopicSubscriptionsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_TopicEventBulkRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventBulkRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventBulkRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventBulkRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TopicEventBulkRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TopicEventBulkRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
      &scc_info_TopicEventBulkRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_TopicEventBulkRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventBulkRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventBulkRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TopicEventBulkRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventBulkRequestEntry_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
      &scc_info_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_TopicEventBulkResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventBulkResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventBulkResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventBulkResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicEventBulkResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TopicEventBulkResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventBulkResponseEntry_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventBulkResponseEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventBulkResponseEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventCERequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventCERequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventCERequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicRoutes_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicRoutes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicRoutes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicRule_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicRule();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicRule::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static void InitDefaultsscc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicSubscription_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicSubscription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicSubscription::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {
      &scc_info_TopicSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
      &scc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
      &scc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,}};

static void InitDefaultsscc_info_TopicSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicSubscription_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TopicSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TopicSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto[22];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventRequest, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventRequest, method_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventRequest, content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventRequest, http_extension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::JobEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, source_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, spec_version_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, data_content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, path_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, source_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, spec_version_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, data_content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventCERequest, extensions_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry, entry_id_),
  offsetof(::dapr::proto::runtime::v1::TopicEventBulkRequestEntryDefaultTypeInternal, bytes_),
  offsetof(::dapr::proto::runtime::v1::TopicEventBulkRequestEntryDefaultTypeInternal, cloud_event_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry, content_type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry, event_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, entries_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, type_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkResponseEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkResponseEntry, entry_id_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkResponseEntry, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventBulkResponse, statuses_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, store_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, states_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, to_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, concurrency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse, subscriptions_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, pubsub_name_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, routes_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, dead_letter_topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, bulk_subscribe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRoutes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRoutes, rules_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRoutes, default__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRule, match_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRule, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkSubscribeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkSubscribeConfig, enabled_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkSubscribeConfig, max_messages_count_),
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::BulkSubscribeConfig, max_await_duration_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ListInputBindingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::ListInputBindingsResponse, bindings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::proto::runtime::v1::HealthCheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dapr::proto::runtime::v1::JobEventRequest)},
  { 10, -1, sizeof(::dapr::proto::runtime::v1::JobEventResponse)},
  { 15, -1, sizeof(::dapr::proto::runtime::v1::TopicEventRequest)},
  { 30, -1, sizeof(::dapr::proto::runtime::v1::TopicEventResponse)},
  { 36, -1, sizeof(::dapr::proto::runtime::v1::TopicEventCERequest)},
  { 48, 55, sizeof(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse)},
  { 57, -1, sizeof(::dapr::proto::runtime::v1::TopicEventBulkRequestEntry)},
  { 68, 75, sizeof(::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse)},
  { 77, -1, sizeof(::dapr::proto::runtime::v1::TopicEventBulkRequest)},
  { 89, -1, sizeof(::dapr::proto::runtime::v1::TopicEventBulkResponseEntry)},
  { 96, -1, sizeof(::dapr::proto::runtime::v1::TopicEventBulkResponse)},
  { 102, 109, sizeof(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse)},
  { 111, -1, sizeof(::dapr::proto::runtime::v1::BindingEventRequest)},
  { 119, -1, sizeof(::dapr::proto::runtime::v1::BindingEventResponse)},
  { 129, -1, sizeof(::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse)},
  { 135, 142, sizeof(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse)},
  { 144, -1, sizeof(::dapr::proto::runtime::v1::TopicSubscription)},
  { 155, -1, sizeof(::dapr::proto::runtime::v1::TopicRoutes)},
  { 162, -1, sizeof(::dapr::proto::runtime::v1::TopicRule)},
  { 169, -1, sizeof(::dapr::proto::runtime::v1::BulkSubscribeConfig)},
  { 177, -1, sizeof(::dapr::proto::runtime::v1::ListInputBindingsResponse)},
  { 183, -1, sizeof(::dapr::proto::runtime::v1::HealthCheckResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_JobEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_JobEventResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventCERequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventBulkRequestEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventBulkRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventBulkRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventBulkResponseEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicEventBulkResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BindingEventRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BindingEventRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BindingEventResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ListTopicSubscriptionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicSubscription_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicSubscription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicRoutes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_TopicRule_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_BulkSubscribeConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_ListInputBindingsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::proto::runtime::v1::_HealthCheckResponse_default_instance_),
};

const char descriptor_table_protodef_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'dapr/proto/runtime/v1/appcallback.prot"
  "o\022\025dapr.proto.runtime.v1\032\031google/protobu"
  "f/any.proto\032\033google/protobuf/empty.proto"
  "\032!dapr/proto/common/v1/common.proto\032\034goo"
  "gle/protobuf/struct.proto\"\246\001\n\017JobEventRe"
  "quest\022\014\n\004name\030\001 \001(\t\022\"\n\004data\030\002 \001(\0132\024.goog"
  "le.protobuf.Any\022\016\n\006method\030\003 \001(\t\022\024\n\014conte"
  "nt_type\030\004 \001(\t\022;\n\016http_extension\030\005 \001(\0132#."
  "dapr.proto.common.v1.HTTPExtension\"\022\n\020Jo"
  "bEventResponse\"\333\001\n\021TopicEventRequest\022\n\n\002"
  "id\030\001 \001(\t\022\016\n\006source\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\024"
  "\n\014spec_version\030\004 \001(\t\022\031\n\021data_content_typ"
  "e\030\005 \001(\t\022\014\n\004data\030\007 \001(\014\022\r\n\005topic\030\006 \001(\t\022\023\n\013"
  "pubsub_name\030\010 \001(\t\022\014\n\004path\030\t \001(\t\022+\n\nexten"
  "sions\030\n \001(\0132\027.google.protobuf.Struct\"\246\001\n"
  "\022TopicEventResponse\022R\n\006status\030\001 \001(\0162B.da"
  "pr.proto.runtime.v1.TopicEventResponse.T"
  "opicEventResponseStatus\"<\n\030TopicEventRes"
  "ponseStatus\022\013\n\007SUCCESS\020\000\022\t\n\005RETRY\020\001\022\010\n\004D"
  "ROP\020\002\"\253\001\n\023TopicEventCERequest\022\n\n\002id\030\001 \001("
  "\t\022\016\n\006source\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\024\n\014spec_"
  "version\030\004 \001(\t\022\031\n\021data_content_type\030\005 \001(\t"
  "\022\014\n\004data\030\006 \001(\014\022+\n\nextensions\030\007 \001(\0132\027.goo"
  "gle.protobuf.Struct\"\245\002\n\032TopicEventBulkRe"
  "questEntry\022\020\n\010entry_id\030\001 \001(\t\022\017\n\005bytes\030\002 "
  "\001(\014H\000\022A\n\013cloud_event\030\003 \001(\0132*.dapr.proto."
  "runtime.v1.TopicEventCERequestH\000\022\024\n\014cont"
  "ent_type\030\004 \001(\t\022Q\n\010metadata\030\005 \003(\0132\?.dapr."
  "proto.runtime.v1.TopicEventBulkRequestEn"
  "try.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003ke"
  "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\007\n\005event\"\246\002\n\025"
  "TopicEventBulkRequest\022\n\n\002id\030\001 \001(\t\022B\n\007ent"
  "ries\030\002 \003(\01321.dapr.proto.runtime.v1.Topic"
  "EventBulkRequestEntry\022L\n\010metadata\030\003 \003(\0132"
  ":.dapr.proto.runtime.v1.TopicEventBulkRe"
  "quest.MetadataEntry\022\r\n\005topic\030\004 \001(\t\022\023\n\013pu"
  "bsub_name\030\005 \001(\t\022\014\n\004type\030\006 \001(\t\022\014\n\004path\030\007 "
  "\001(\t\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
  "ue\030\002 \001(\t:\0028\001\"\203\001\n\033TopicEventBulkResponseE"
  "ntry\022\020\n\010entry_id\030\001 \001(\t\022R\n\006status\030\002 \001(\0162B"
  ".dapr.proto.runtime.v1.TopicEventRespons"
  "e.TopicEventResponseStatus\"^\n\026TopicEvent"
  "BulkResponse\022D\n\010statuses\030\001 \003(\01322.dapr.pr"
  "oto.runtime.v1.TopicEventBulkResponseEnt"
  "ry\"\256\001\n\023BindingEventRequest\022\014\n\004name\030\001 \001(\t"
  "\022\014\n\004data\030\002 \001(\014\022J\n\010metadata\030\003 \003(\01328.dapr."
  "proto.runtime.v1.BindingEventRequest.Met"
  "adataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
  "\022\r\n\005value\030\002 \001(\t:\0028\001\"\210\002\n\024BindingEventResp"
  "onse\022\022\n\nstore_name\030\001 \001(\t\022/\n\006states\030\002 \003(\013"
  "2\037.dapr.proto.common.v1.StateItem\022\n\n\002to\030"
  "\003 \003(\t\022\014\n\004data\030\004 \001(\014\022X\n\013concurrency\030\005 \001(\016"
  "2C.dapr.proto.runtime.v1.BindingEventRes"
  "ponse.BindingEventConcurrency\"7\n\027Binding"
  "EventConcurrency\022\016\n\nSEQUENTIAL\020\000\022\014\n\010PARA"
  "LLEL\020\001\"a\n\036ListTopicSubscriptionsResponse"
  "\022\?\n\rsubscriptions\030\001 \003(\0132(.dapr.proto.run"
  "time.v1.TopicSubscription\"\305\002\n\021TopicSubsc"
  "ription\022\023\n\013pubsub_name\030\001 \001(\t\022\r\n\005topic\030\002 "
  "\001(\t\022H\n\010metadata\030\003 \003(\01326.dapr.proto.runti"
  "me.v1.TopicSubscription.MetadataEntry\0222\n"
  "\006routes\030\005 \001(\0132\".dapr.proto.runtime.v1.To"
  "picRoutes\022\031\n\021dead_letter_topic\030\006 \001(\t\022B\n\016"
  "bulk_subscribe\030\007 \001(\0132*.dapr.proto.runtim"
  "e.v1.BulkSubscribeConfig\032/\n\rMetadataEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"O\n\013Top"
  "icRoutes\022/\n\005rules\030\001 \003(\0132 .dapr.proto.run"
  "time.v1.TopicRule\022\017\n\007default\030\002 \001(\t\"(\n\tTo"
  "picRule\022\r\n\005match\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\"a\n\023"
  "BulkSubscribeConfig\022\017\n\007enabled\030\001 \001(\010\022\032\n\022"
  "max_messages_count\030\002 \001(\005\022\035\n\025max_await_du"
  "ration_ms\030\003 \001(\005\"-\n\031ListInputBindingsResp"
  "onse\022\020\n\010bindings\030\001 \003(\t\"\025\n\023HealthCheckRes"
  "ponse2\206\004\n\013AppCallback\022W\n\010OnInvoke\022#.dapr"
  ".proto.common.v1.InvokeRequest\032$.dapr.pr"
  "oto.common.v1.InvokeResponse\"\000\022i\n\026ListTo"
  "picSubscriptions\022\026.google.protobuf.Empty"
  "\0325.dapr.proto.runtime.v1.ListTopicSubscr"
  "iptionsResponse\"\000\022e\n\014OnTopicEvent\022(.dapr"
  ".proto.runtime.v1.TopicEventRequest\032).da"
  "pr.proto.runtime.v1.TopicEventResponse\"\000"
  "\022_\n\021ListInputBindings\022\026.google.protobuf."
  "Empty\0320.dapr.proto.runtime.v1.ListInputB"
  "indingsResponse\"\000\022k\n\016OnBindingEvent\022*.da"
  "pr.proto.runtime.v1.BindingEventRequest\032"
  "+.dapr.proto.runtime.v1.BindingEventResp"
  "onse\"\0002m\n\026AppCallbackHealthCheck\022S\n\013Heal"
  "thCheck\022\026.google.protobuf.Empty\032*.dapr.p"
  "roto.runtime.v1.HealthCheckResponse\"\0002\360\001"
  "\n\020AppCallbackAlpha\022w\n\026OnBulkTopicEventAl"
  "pha1\022,.dapr.proto.runtime.v1.TopicEventB"
  "ulkRequest\032-.dapr.proto.runtime.v1.Topic"
  "EventBulkResponse\"\000\022c\n\020OnJobEventAlpha1\022"
  "&.dapr.proto.runtime.v1.JobEventRequest\032"
  "\'.dapr.proto.runtime.v1.JobEventResponse"
  "By\n\nio.dapr.v1B\025DaprAppCallbackProtosZ1g"
  "ithub.com/dapr/dapr/pkg/proto/runtime/v1"
  ";runtime\252\002 Dapr.AppCallback.Autogen.Grpc"
  ".v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto_deps[4] = {
  &::descriptor_table_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto_sccs[22] = {
  &scc_info_BindingEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_BindingEventRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_BindingEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_HealthCheckResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_JobEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_JobEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_ListInputBindingsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_ListTopicSubscriptionsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventBulkRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventBulkRequest_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventBulkRequestEntry_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventBulkResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
  &scc_info_TopicSubscription_MetadataEntry_DoNotUse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto = {
  false, false, descriptor_table_protodef_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto, "dapr/proto/runtime/v1/appcallback.proto", 3931,
  &descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto_once, descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto_sccs, descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto_deps, 22, 4,
  schemas, file_default_instances, TableStruct_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::offsets,
  file_level_metadata_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto, 22, file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto, file_level_service_descriptors_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto)), true);
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TopicEventResponse_TopicEventResponseStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto[0];
}
bool TopicEventResponse_TopicEventResponseStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TopicEventResponse_TopicEventResponseStatus TopicEventResponse::SUCCESS;
constexpr TopicEventResponse_TopicEventResponseStatus TopicEventResponse::RETRY;
constexpr TopicEventResponse_TopicEventResponseStatus TopicEventResponse::DROP;
constexpr TopicEventResponse_TopicEventResponseStatus TopicEventResponse::TopicEventResponseStatus_MIN;
constexpr TopicEventResponse_TopicEventResponseStatus TopicEventResponse::TopicEventResponseStatus_MAX;
constexpr int TopicEventResponse::TopicEventResponseStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BindingEventResponse_BindingEventConcurrency_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto);
  return file_level_enum_descriptors_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto[1];
}
bool BindingEventResponse_BindingEventConcurrency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr BindingEventResponse_BindingEventConcurrency BindingEventResponse::SEQUENTIAL;
constexpr BindingEventResponse_BindingEventConcurrency BindingEventResponse::PARALLEL;
constexpr BindingEventResponse_BindingEventConcurrency BindingEventResponse::BindingEventConcurrency_MIN;
constexpr BindingEventResponse_BindingEventConcurrency BindingEventResponse::BindingEventConcurrency_MAX;
constexpr int BindingEventResponse::BindingEventConcurrency_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void JobEventRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_JobEventRequest_default_instance_._instance.get_mutable()->data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
  ::dapr::proto::runtime::v1::_JobEventRequest_default_instance_._instance.get_mutable()->http_extension_ = const_cast< ::dapr::proto::common::v1::HTTPExtension*>(
      ::dapr::proto::common::v1::HTTPExtension::internal_default_instance());
}
class JobEventRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& data(const JobEventRequest* msg);
  static const ::dapr::proto::common::v1::HTTPExtension& http_extension(const JobEventRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
JobEventRequest::_Internal::data(const JobEventRequest* msg) {
  return *msg->data_;
}
const ::dapr::proto::common::v1::HTTPExtension&
JobEventRequest::_Internal::http_extension(const JobEventRequest* msg) {
  return *msg->http_extension_;
}
void JobEventRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
void JobEventRequest::clear_http_extension() {
  if (GetArena() == nullptr && http_extension_ != nullptr) {
    delete http_extension_;
  }
  http_extension_ = nullptr;
}
JobEventRequest::JobEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.JobEventRequest)
}
JobEventRequest::JobEventRequest(const JobEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method().empty()) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method(),
      GetArena());
  }
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content_type().empty()) {
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content_type(),
      GetArena());
  }
  if (from._internal_has_data()) {
    data_ = new PROTOBUF_NAMESPACE_ID::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from._internal_has_http_extension()) {
    http_extension_ = new ::dapr::proto::common::v1::HTTPExtension(*from.http_extension_);
  } else {
    http_extension_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.JobEventRequest)
}

void JobEventRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_extension_) -
      reinterpret_cast<char*>(&data_)) + sizeof(http_extension_));
}

JobEventRequest::~JobEventRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.JobEventRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete http_extension_;
}

void JobEventRequest::ArenaDtor(void* object) {
  JobEventRequest* _this = reinterpret_cast< JobEventRequest* >(object);
  (void)_this;
}
void JobEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobEventRequest& JobEventRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void JobEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.JobEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  if (GetArena() == nullptr && http_extension_ != nullptr) {
    delete http_extension_;
  }
  http_extension_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.JobEventRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string method = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.JobEventRequest.method"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.JobEventRequest.content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.common.v1.HTTPExtension http_extension = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_http_extension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobEventRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.JobEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.JobEventRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.JobEventRequest.method");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_method(), target);
  }

  // string content_type = 4;
  if (this->content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.JobEventRequest.content_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_content_type(), target);
  }

  // .dapr.proto.common.v1.HTTPExtension http_extension = 5;
  if (this->has_http_extension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::http_extension(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.JobEventRequest)
  return target;
}

size_t JobEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.JobEventRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string method = 3;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // string content_type = 4;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .dapr.proto.common.v1.HTTPExtension http_extension = 5;
  if (this->has_http_extension()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *http_extension_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobEventRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.JobEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JobEventRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobEventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.JobEventRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.JobEventRequest)
    MergeFrom(*source);
  }
}

void JobEventRequest::MergeFrom(const JobEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.JobEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.method().size() > 0) {
    _internal_set_method(from._internal_method());
  }
  if (from.content_type().size() > 0) {
    _internal_set_content_type(from._internal_content_type());
  }
  if (from.has_data()) {
    _internal_mutable_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_data());
  }
  if (from.has_http_extension()) {
    _internal_mutable_http_extension()->::dapr::proto::common::v1::HTTPExtension::MergeFrom(from._internal_http_extension());
  }
}

void JobEventRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.JobEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobEventRequest::CopyFrom(const JobEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.JobEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobEventRequest::IsInitialized() const {
  return true;
}

void JobEventRequest::InternalSwap(JobEventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  method_.Swap(&other->method_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.Swap(&other->content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobEventRequest, http_extension_)
      + sizeof(JobEventRequest::http_extension_)
      - PROTOBUF_FIELD_OFFSET(JobEventRequest, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobEventRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobEventResponse::InitAsDefaultInstance() {
}
class JobEventResponse::_Internal {
 public:
};

JobEventResponse::JobEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.JobEventResponse)
}
JobEventResponse::JobEventResponse(const JobEventResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.JobEventResponse)
}

void JobEventResponse::SharedCtor() {
}

JobEventResponse::~JobEventResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.JobEventResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobEventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobEventResponse::ArenaDtor(void* object) {
  JobEventResponse* _this = reinterpret_cast< JobEventResponse* >(object);
  (void)_this;
}
void JobEventResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobEventResponse& JobEventResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void JobEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.JobEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobEventResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobEventResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.JobEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.JobEventResponse)
  return target;
}

size_t JobEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.JobEventResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobEventResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.JobEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JobEventResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobEventResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.JobEventResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.JobEventResponse)
    MergeFrom(*source);
  }
}

void JobEventResponse::MergeFrom(const JobEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.JobEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void JobEventResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.JobEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobEventResponse::CopyFrom(const JobEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.JobEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobEventResponse::IsInitialized() const {
  return true;
}

void JobEventResponse::InternalSwap(JobEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JobEventResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicEventRequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TopicEventRequest_default_instance_._instance.get_mutable()->extensions_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class TopicEventRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& extensions(const TopicEventRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
TopicEventRequest::_Internal::extensions(const TopicEventRequest* msg) {
  return *msg->extensions_;
}
void TopicEventRequest::clear_extensions() {
  if (GetArena() == nullptr && extensions_ != nullptr) {
    delete extensions_;
  }
  extensions_ = nullptr;
}
TopicEventRequest::TopicEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventRequest)
}
TopicEventRequest::TopicEventRequest(const TopicEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  spec_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spec_version().empty()) {
    spec_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_spec_version(),
      GetArena());
  }
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_content_type().empty()) {
    data_content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_content_type(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  if (from._internal_has_extensions()) {
    extensions_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.extensions_);
  } else {
    extensions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventRequest)
}

void TopicEventRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spec_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extensions_ = nullptr;
}

TopicEventRequest::~TopicEventRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spec_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extensions_;
}

void TopicEventRequest::ArenaDtor(void* object) {
  TopicEventRequest* _this = reinterpret_cast< TopicEventRequest* >(object);
  (void)_this;
}
void TopicEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventRequest& TopicEventRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  spec_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && extensions_ != nullptr) {
    delete extensions_;
  }
  extensions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spec_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_spec_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.spec_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_content_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_data_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.data_content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pubsub_name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct extensions = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_extensions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.source");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_source(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spec_version().data(), static_cast<int>(this->_internal_spec_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.spec_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_spec_version(), target);
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_content_type().data(), static_cast<int>(this->_internal_data_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.data_content_type");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_data_content_type(), target);
  }

  // string topic = 6;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.topic");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_topic(), target);
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_data(), target);
  }

  // string pubsub_name = 8;
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_pubsub_name(), target);
  }

  // string path = 9;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.path");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_path(), target);
  }

  // .google.protobuf.Struct extensions = 10;
  if (this->has_extensions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::extensions(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventRequest)
  return target;
}

size_t TopicEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string source = 2;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spec_version());
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_content_type());
  }

  // string topic = 6;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string pubsub_name = 8;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string path = 9;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // .google.protobuf.Struct extensions = 10;
  if (this->has_extensions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extensions_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventRequest)
    MergeFrom(*source);
  }
}

void TopicEventRequest::MergeFrom(const TopicEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.spec_version().size() > 0) {
    _internal_set_spec_version(from._internal_spec_version());
  }
  if (from.data_content_type().size() > 0) {
    _internal_set_data_content_type(from._internal_data_content_type());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.has_extensions()) {
    _internal_mutable_extensions()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extensions());
  }
}

void TopicEventRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventRequest::CopyFrom(const TopicEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventRequest::IsInitialized() const {
  return true;
}

void TopicEventRequest::InternalSwap(TopicEventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  spec_version_.Swap(&other->spec_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_content_type_.Swap(&other->data_content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(extensions_, other->extensions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicEventResponse::InitAsDefaultInstance() {
}
class TopicEventResponse::_Internal {
 public:
};

TopicEventResponse::TopicEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventResponse)
}
TopicEventResponse::TopicEventResponse(const TopicEventResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventResponse)
}

void TopicEventResponse::SharedCtor() {
  status_ = 0;
}

TopicEventResponse::~TopicEventResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TopicEventResponse::ArenaDtor(void* object) {
  TopicEventResponse* _this = reinterpret_cast< TopicEventResponse* >(object);
  (void)_this;
}
void TopicEventResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventResponse& TopicEventResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::dapr::proto::runtime::v1::TopicEventResponse_TopicEventResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventResponse)
  return target;
}

size_t TopicEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventResponse)
    MergeFrom(*source);
  }
}

void TopicEventResponse::MergeFrom(const TopicEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void TopicEventResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventResponse::CopyFrom(const TopicEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventResponse::IsInitialized() const {
  return true;
}

void TopicEventResponse::InternalSwap(TopicEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicEventCERequest::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TopicEventCERequest_default_instance_._instance.get_mutable()->extensions_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class TopicEventCERequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Struct& extensions(const TopicEventCERequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Struct&
TopicEventCERequest::_Internal::extensions(const TopicEventCERequest* msg) {
  return *msg->extensions_;
}
void TopicEventCERequest::clear_extensions() {
  if (GetArena() == nullptr && extensions_ != nullptr) {
    delete extensions_;
  }
  extensions_ = nullptr;
}
TopicEventCERequest::TopicEventCERequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventCERequest)
}
TopicEventCERequest::TopicEventCERequest(const TopicEventCERequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  spec_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spec_version().empty()) {
    spec_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_spec_version(),
      GetArena());
  }
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_content_type().empty()) {
    data_content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_content_type(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  if (from._internal_has_extensions()) {
    extensions_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.extensions_);
  } else {
    extensions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventCERequest)
}

void TopicEventCERequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spec_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extensions_ = nullptr;
}

TopicEventCERequest::~TopicEventCERequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventCERequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventCERequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spec_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extensions_;
}

void TopicEventCERequest::ArenaDtor(void* object) {
  TopicEventCERequest* _this = reinterpret_cast< TopicEventCERequest* >(object);
  (void)_this;
}
void TopicEventCERequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventCERequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventCERequest& TopicEventCERequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventCERequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventCERequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventCERequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  spec_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && extensions_ != nullptr) {
    delete extensions_;
  }
  extensions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventCERequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventCERequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventCERequest.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventCERequest.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spec_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_spec_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventCERequest.spec_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_content_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_data_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventCERequest.data_content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct extensions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_extensions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventCERequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventCERequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventCERequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventCERequest.source");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_source(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventCERequest.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spec_version().data(), static_cast<int>(this->_internal_spec_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventCERequest.spec_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_spec_version(), target);
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_content_type().data(), static_cast<int>(this->_internal_data_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventCERequest.data_content_type");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_data_content_type(), target);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_data(), target);
  }

  // .google.protobuf.Struct extensions = 7;
  if (this->has_extensions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::extensions(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventCERequest)
  return target;
}

size_t TopicEventCERequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventCERequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string source = 2;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spec_version());
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_content_type());
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .google.protobuf.Struct extensions = 7;
  if (this->has_extensions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extensions_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventCERequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventCERequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventCERequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventCERequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventCERequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventCERequest)
    MergeFrom(*source);
  }
}

void TopicEventCERequest::MergeFrom(const TopicEventCERequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventCERequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.spec_version().size() > 0) {
    _internal_set_spec_version(from._internal_spec_version());
  }
  if (from.data_content_type().size() > 0) {
    _internal_set_data_content_type(from._internal_data_content_type());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_extensions()) {
    _internal_mutable_extensions()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extensions());
  }
}

void TopicEventCERequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventCERequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventCERequest::CopyFrom(const TopicEventCERequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventCERequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventCERequest::IsInitialized() const {
  return true;
}

void TopicEventCERequest::InternalSwap(TopicEventCERequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  spec_version_.Swap(&other->spec_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_content_type_.Swap(&other->data_content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(extensions_, other->extensions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventCERequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse() {}
TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::MergeFrom(const TopicEventBulkRequestEntry_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TopicEventBulkRequestEntry::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TopicEventBulkRequestEntry_default_instance_.bytes_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::dapr::proto::runtime::v1::_TopicEventBulkRequestEntry_default_instance_.cloud_event_ = const_cast< ::dapr::proto::runtime::v1::TopicEventCERequest*>(
      ::dapr::proto::runtime::v1::TopicEventCERequest::internal_default_instance());
}
class TopicEventBulkRequestEntry::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::TopicEventCERequest& cloud_event(const TopicEventBulkRequestEntry* msg);
};

const ::dapr::proto::runtime::v1::TopicEventCERequest&
TopicEventBulkRequestEntry::_Internal::cloud_event(const TopicEventBulkRequestEntry* msg) {
  return *msg->event_.cloud_event_;
}
void TopicEventBulkRequestEntry::set_allocated_cloud_event(::dapr::proto::runtime::v1::TopicEventCERequest* cloud_event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_event();
  if (cloud_event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cloud_event);
    if (message_arena != submessage_arena) {
      cloud_event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cloud_event, submessage_arena);
    }
    set_has_cloud_event();
    event_.cloud_event_ = cloud_event;
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TopicEventBulkRequestEntry.cloud_event)
}
TopicEventBulkRequestEntry::TopicEventBulkRequestEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
}
TopicEventBulkRequestEntry::TopicEventBulkRequestEntry(const TopicEventBulkRequestEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_entry_id().empty()) {
    entry_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_entry_id(),
      GetArena());
  }
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content_type().empty()) {
    content_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_content_type(),
      GetArena());
  }
  clear_has_event();
  switch (from.event_case()) {
    case kBytes: {
      _internal_set_bytes(from._internal_bytes());
      break;
    }
    case kCloudEvent: {
      _internal_mutable_cloud_event()->::dapr::proto::runtime::v1::TopicEventCERequest::MergeFrom(from._internal_cloud_event());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
}

void TopicEventBulkRequestEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_event();
}

TopicEventBulkRequestEntry::~TopicEventBulkRequestEntry() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventBulkRequestEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  entry_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_event()) {
    clear_event();
  }
}

void TopicEventBulkRequestEntry::ArenaDtor(void* object) {
  TopicEventBulkRequestEntry* _this = reinterpret_cast< TopicEventBulkRequestEntry* >(object);
  (void)_this;
}
void TopicEventBulkRequestEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventBulkRequestEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventBulkRequestEntry& TopicEventBulkRequestEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventBulkRequestEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventBulkRequestEntry::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  switch (event_case()) {
    case kBytes: {
      event_.bytes_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kCloudEvent: {
      if (GetArena() == nullptr) {
        delete event_.cloud_event_;
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void TopicEventBulkRequestEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  entry_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_event();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventBulkRequestEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string entry_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_entry_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequestEntry.entry_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.TopicEventCERequest cloud_event = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloud_event(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_content_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequestEntry.content_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventBulkRequestEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entry_id().data(), static_cast<int>(this->_internal_entry_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequestEntry.entry_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entry_id(), target);
  }

  // bytes bytes = 2;
  if (_internal_has_bytes()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_bytes(), target);
  }

  // .dapr.proto.runtime.v1.TopicEventCERequest cloud_event = 3;
  if (_internal_has_cloud_event()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::cloud_event(this), target, stream);
  }

  // string content_type = 4;
  if (this->content_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content_type().data(), static_cast<int>(this->_internal_content_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequestEntry.content_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_content_type(), target);
  }

  // map<string, string> metadata = 5;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicEventBulkRequestEntry.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicEventBulkRequestEntry.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  return target;
}

size_t TopicEventBulkRequestEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += TopicEventBulkRequestEntry_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entry_id());
  }

  // string content_type = 4;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content_type());
  }

  switch (event_case()) {
    // bytes bytes = 2;
    case kBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes());
      break;
    }
    // .dapr.proto.runtime.v1.TopicEventCERequest cloud_event = 3;
    case kCloudEvent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.cloud_event_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventBulkRequestEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventBulkRequestEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventBulkRequestEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
    MergeFrom(*source);
  }
}

void TopicEventBulkRequestEntry::MergeFrom(const TopicEventBulkRequestEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.entry_id().size() > 0) {
    _internal_set_entry_id(from._internal_entry_id());
  }
  if (from.content_type().size() > 0) {
    _internal_set_content_type(from._internal_content_type());
  }
  switch (from.event_case()) {
    case kBytes: {
      _internal_set_bytes(from._internal_bytes());
      break;
    }
    case kCloudEvent: {
      _internal_mutable_cloud_event()->::dapr::proto::runtime::v1::TopicEventCERequest::MergeFrom(from._internal_cloud_event());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void TopicEventBulkRequestEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventBulkRequestEntry::CopyFrom(const TopicEventBulkRequestEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkRequestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventBulkRequestEntry::IsInitialized() const {
  return true;
}

void TopicEventBulkRequestEntry::InternalSwap(TopicEventBulkRequestEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  entry_id_.Swap(&other->entry_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_.Swap(&other->content_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(event_, other->event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventBulkRequestEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TopicEventBulkRequest_MetadataEntry_DoNotUse::TopicEventBulkRequest_MetadataEntry_DoNotUse() {}
TopicEventBulkRequest_MetadataEntry_DoNotUse::TopicEventBulkRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TopicEventBulkRequest_MetadataEntry_DoNotUse::MergeFrom(const TopicEventBulkRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TopicEventBulkRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TopicEventBulkRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TopicEventBulkRequest::InitAsDefaultInstance() {
}
class TopicEventBulkRequest::_Internal {
 public:
};

TopicEventBulkRequest::TopicEventBulkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventBulkRequest)
}
TopicEventBulkRequest::TopicEventBulkRequest(const TopicEventBulkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventBulkRequest)
}

void TopicEventBulkRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicEventBulkRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TopicEventBulkRequest::~TopicEventBulkRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventBulkRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventBulkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TopicEventBulkRequest::ArenaDtor(void* object) {
  TopicEventBulkRequest* _this = reinterpret_cast< TopicEventBulkRequest* >(object);
  (void)_this;
}
void TopicEventBulkRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventBulkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventBulkRequest& TopicEventBulkRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventBulkRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventBulkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  metadata_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventBulkRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.runtime.v1.TopicEventBulkRequestEntry entries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string topic = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequest.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pubsub_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequest.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequest.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventBulkRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // repeated .dapr.proto.runtime.v1.TopicEventBulkRequestEntry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_entries(i), target, stream);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicEventBulkRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicEventBulkRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TopicEventBulkRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = TopicEventBulkRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string topic = 4;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequest.topic");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_topic(), target);
  }

  // string pubsub_name = 5;
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequest.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_pubsub_name(), target);
  }

  // string type = 6;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequest.type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_type(), target);
  }

  // string path = 7;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkRequest.path");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventBulkRequest)
  return target;
}

size_t TopicEventBulkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicEventBulkRequestEntry entries = 2;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += TopicEventBulkRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string topic = 4;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // string pubsub_name = 5;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string type = 6;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string path = 7;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventBulkRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventBulkRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventBulkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventBulkRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventBulkRequest)
    MergeFrom(*source);
  }
}

void TopicEventBulkRequest::MergeFrom(const TopicEventBulkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  metadata_.MergeFrom(from.metadata_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void TopicEventBulkRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventBulkRequest::CopyFrom(const TopicEventBulkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventBulkRequest::IsInitialized() const {
  return true;
}

void TopicEventBulkRequest::InternalSwap(TopicEventBulkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  metadata_.Swap(&other->metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventBulkRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicEventBulkResponseEntry::InitAsDefaultInstance() {
}
class TopicEventBulkResponseEntry::_Internal {
 public:
};

TopicEventBulkResponseEntry::TopicEventBulkResponseEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
}
TopicEventBulkResponseEntry::TopicEventBulkResponseEntry(const TopicEventBulkResponseEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_entry_id().empty()) {
    entry_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_entry_id(),
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
}

void TopicEventBulkResponseEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  entry_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

TopicEventBulkResponseEntry::~TopicEventBulkResponseEntry() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventBulkResponseEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  entry_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TopicEventBulkResponseEntry::ArenaDtor(void* object) {
  TopicEventBulkResponseEntry* _this = reinterpret_cast< TopicEventBulkResponseEntry* >(object);
  (void)_this;
}
void TopicEventBulkResponseEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventBulkResponseEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventBulkResponseEntry& TopicEventBulkResponseEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventBulkResponseEntry_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventBulkResponseEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventBulkResponseEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string entry_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_entry_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicEventBulkResponseEntry.entry_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::dapr::proto::runtime::v1::TopicEventResponse_TopicEventResponseStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventBulkResponseEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entry_id().data(), static_cast<int>(this->_internal_entry_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventBulkResponseEntry.entry_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entry_id(), target);
  }

  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  return target;
}

size_t TopicEventBulkResponseEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entry_id = 1;
  if (this->entry_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entry_id());
  }

  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventBulkResponseEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventBulkResponseEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventBulkResponseEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
    MergeFrom(*source);
  }
}

void TopicEventBulkResponseEntry::MergeFrom(const TopicEventBulkResponseEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entry_id().size() > 0) {
    _internal_set_entry_id(from._internal_entry_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void TopicEventBulkResponseEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventBulkResponseEntry::CopyFrom(const TopicEventBulkResponseEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkResponseEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventBulkResponseEntry::IsInitialized() const {
  return true;
}

void TopicEventBulkResponseEntry::InternalSwap(TopicEventBulkResponseEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entry_id_.Swap(&other->entry_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventBulkResponseEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicEventBulkResponse::InitAsDefaultInstance() {
}
class TopicEventBulkResponse::_Internal {
 public:
};

TopicEventBulkResponse::TopicEventBulkResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  statuses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicEventBulkResponse)
}
TopicEventBulkResponse::TopicEventBulkResponse(const TopicEventBulkResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      statuses_(from.statuses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventBulkResponse)
}

void TopicEventBulkResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicEventBulkResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
}

TopicEventBulkResponse::~TopicEventBulkResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventBulkResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicEventBulkResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TopicEventBulkResponse::ArenaDtor(void* object) {
  TopicEventBulkResponse* _this = reinterpret_cast< TopicEventBulkResponse* >(object);
  (void)_this;
}
void TopicEventBulkResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicEventBulkResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicEventBulkResponse& TopicEventBulkResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicEventBulkResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicEventBulkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statuses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicEventBulkResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.TopicEventBulkResponseEntry statuses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_statuses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicEventBulkResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicEventBulkResponseEntry statuses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_statuses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_statuses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventBulkResponse)
  return target;
}

size_t TopicEventBulkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicEventBulkResponseEntry statuses = 1;
  total_size += 1UL * this->_internal_statuses_size();
  for (const auto& msg : this->statuses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventBulkResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventBulkResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicEventBulkResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventBulkResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventBulkResponse)
    MergeFrom(*source);
  }
}

void TopicEventBulkResponse::MergeFrom(const TopicEventBulkResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statuses_.MergeFrom(from.statuses_);
}

void TopicEventBulkResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventBulkResponse::CopyFrom(const TopicEventBulkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventBulkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventBulkResponse::IsInitialized() const {
  return true;
}

void TopicEventBulkResponse::InternalSwap(TopicEventBulkResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  statuses_.InternalSwap(&other->statuses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicEventBulkResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

BindingEventRequest_MetadataEntry_DoNotUse::BindingEventRequest_MetadataEntry_DoNotUse() {}
BindingEventRequest_MetadataEntry_DoNotUse::BindingEventRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BindingEventRequest_MetadataEntry_DoNotUse::MergeFrom(const BindingEventRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BindingEventRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void BindingEventRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void BindingEventRequest::InitAsDefaultInstance() {
}
class BindingEventRequest::_Internal {
 public:
};

BindingEventRequest::BindingEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BindingEventRequest)
}
BindingEventRequest::BindingEventRequest(const BindingEventRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BindingEventRequest)
}

void BindingEventRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BindingEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BindingEventRequest::~BindingEventRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BindingEventRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BindingEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BindingEventRequest::ArenaDtor(void* object) {
  BindingEventRequest* _this = reinterpret_cast< BindingEventRequest* >(object);
  (void)_this;
}
void BindingEventRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BindingEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BindingEventRequest& BindingEventRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BindingEventRequest_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void BindingEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BindingEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BindingEventRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BindingEventRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BindingEventRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BindingEventRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = BindingEventRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = BindingEventRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BindingEventRequest)
  return target;
}

size_t BindingEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BindingEventRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += BindingEventRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BindingEventRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingEventRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BindingEventRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BindingEventRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BindingEventRequest)
    MergeFrom(*source);
  }
}

void BindingEventRequest::MergeFrom(const BindingEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
}

void BindingEventRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingEventRequest::CopyFrom(const BindingEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingEventRequest::IsInitialized() const {
  return true;
}

void BindingEventRequest::InternalSwap(BindingEventRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BindingEventRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BindingEventResponse::InitAsDefaultInstance() {
}
class BindingEventResponse::_Internal {
 public:
};

void BindingEventResponse::clear_states() {
  states_.Clear();
}
BindingEventResponse::BindingEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  states_(arena),
  to_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BindingEventResponse)
}
BindingEventResponse::BindingEventResponse(const BindingEventResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      states_(from.states_),
      to_(from.to_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_store_name().empty()) {
    store_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_store_name(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  concurrency_ = from.concurrency_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BindingEventResponse)
}

void BindingEventResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BindingEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  store_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  concurrency_ = 0;
}

BindingEventResponse::~BindingEventResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BindingEventResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BindingEventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BindingEventResponse::ArenaDtor(void* object) {
  BindingEventResponse* _this = reinterpret_cast< BindingEventResponse* >(object);
  (void)_this;
}
void BindingEventResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BindingEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BindingEventResponse& BindingEventResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BindingEventResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void BindingEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BindingEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  to_.Clear();
  store_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  concurrency_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BindingEventResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string store_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_store_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BindingEventResponse.store_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .dapr.proto.common.v1.StateItem states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_to();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.BindingEventResponse.to"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_concurrency(static_cast<::dapr::proto::runtime::v1::BindingEventResponse_BindingEventConcurrency>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BindingEventResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BindingEventResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_store_name().data(), static_cast<int>(this->_internal_store_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventResponse.store_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_store_name(), target);
  }

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_states(i), target, stream);
  }

  // repeated string to = 3;
  for (int i = 0, n = this->_internal_to_size(); i < n; i++) {
    const auto& s = this->_internal_to(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventResponse.to");
    target = stream->WriteString(3, s, target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
  if (this->concurrency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_concurrency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BindingEventResponse)
  return target;
}

size_t BindingEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BindingEventResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string to = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(to_.size());
  for (int i = 0, n = to_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      to_.Get(i));
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_store_name());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
  if (this->concurrency() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_concurrency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BindingEventResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingEventResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BindingEventResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BindingEventResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BindingEventResponse)
    MergeFrom(*source);
  }
}

void BindingEventResponse::MergeFrom(const BindingEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  to_.MergeFrom(from.to_);
  if (from.store_name().size() > 0) {
    _internal_set_store_name(from._internal_store_name());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.concurrency() != 0) {
    _internal_set_concurrency(from._internal_concurrency());
  }
}

void BindingEventResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingEventResponse::CopyFrom(const BindingEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingEventResponse::IsInitialized() const {
  return true;
}

void BindingEventResponse::InternalSwap(BindingEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  states_.InternalSwap(&other->states_);
  to_.InternalSwap(&other->to_);
  store_name_.Swap(&other->store_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(concurrency_, other->concurrency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BindingEventResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListTopicSubscriptionsResponse::InitAsDefaultInstance() {
}
class ListTopicSubscriptionsResponse::_Internal {
 public:
};

ListTopicSubscriptionsResponse::ListTopicSubscriptionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subscriptions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
}
ListTopicSubscriptionsResponse::ListTopicSubscriptionsResponse(const ListTopicSubscriptionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subscriptions_(from.subscriptions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
}

void ListTopicSubscriptionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListTopicSubscriptionsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
}

ListTopicSubscriptionsResponse::~ListTopicSubscriptionsResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTopicSubscriptionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListTopicSubscriptionsResponse::ArenaDtor(void* object) {
  ListTopicSubscriptionsResponse* _this = reinterpret_cast< ListTopicSubscriptionsResponse* >(object);
  (void)_this;
}
void ListTopicSubscriptionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTopicSubscriptionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListTopicSubscriptionsResponse& ListTopicSubscriptionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListTopicSubscriptionsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void ListTopicSubscriptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTopicSubscriptionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subscriptions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTopicSubscriptionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subscriptions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_subscriptions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  return target;
}

size_t ListTopicSubscriptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
  total_size += 1UL * this->_internal_subscriptions_size();
  for (const auto& msg : this->subscriptions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTopicSubscriptionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTopicSubscriptionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTopicSubscriptionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
    MergeFrom(*source);
  }
}

void ListTopicSubscriptionsResponse::MergeFrom(const ListTopicSubscriptionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscriptions_.MergeFrom(from.subscriptions_);
}

void ListTopicSubscriptionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTopicSubscriptionsResponse::CopyFrom(const ListTopicSubscriptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTopicSubscriptionsResponse::IsInitialized() const {
  return true;
}

void ListTopicSubscriptionsResponse::InternalSwap(ListTopicSubscriptionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subscriptions_.InternalSwap(&other->subscriptions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTopicSubscriptionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TopicSubscription_MetadataEntry_DoNotUse::TopicSubscription_MetadataEntry_DoNotUse() {}
TopicSubscription_MetadataEntry_DoNotUse::TopicSubscription_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TopicSubscription_MetadataEntry_DoNotUse::MergeFrom(const TopicSubscription_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TopicSubscription_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TopicSubscription_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void TopicSubscription::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TopicSubscription_default_instance_._instance.get_mutable()->routes_ = const_cast< ::dapr::proto::runtime::v1::TopicRoutes*>(
      ::dapr::proto::runtime::v1::TopicRoutes::internal_default_instance());
  ::dapr::proto::runtime::v1::_TopicSubscription_default_instance_._instance.get_mutable()->bulk_subscribe_ = const_cast< ::dapr::proto::runtime::v1::BulkSubscribeConfig*>(
      ::dapr::proto::runtime::v1::BulkSubscribeConfig::internal_default_instance());
}
class TopicSubscription::_Internal {
 public:
  static const ::dapr::proto::runtime::v1::TopicRoutes& routes(const TopicSubscription* msg);
  static const ::dapr::proto::runtime::v1::BulkSubscribeConfig& bulk_subscribe(const TopicSubscription* msg);
};

const ::dapr::proto::runtime::v1::TopicRoutes&
TopicSubscription::_Internal::routes(const TopicSubscription* msg) {
  return *msg->routes_;
}
const ::dapr::proto::runtime::v1::BulkSubscribeConfig&
TopicSubscription::_Internal::bulk_subscribe(const TopicSubscription* msg) {
  return *msg->bulk_subscribe_;
}
TopicSubscription::TopicSubscription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicSubscription)
}
TopicSubscription::TopicSubscription(const TopicSubscription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubsub_name().empty()) {
    pubsub_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pubsub_name(),
      GetArena());
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic(),
      GetArena());
  }
  dead_letter_topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dead_letter_topic().empty()) {
    dead_letter_topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dead_letter_topic(),
      GetArena());
  }
  if (from._internal_has_routes()) {
    routes_ = new ::dapr::proto::runtime::v1::TopicRoutes(*from.routes_);
  } else {
    routes_ = nullptr;
  }
  if (from._internal_has_bulk_subscribe()) {
    bulk_subscribe_ = new ::dapr::proto::runtime::v1::BulkSubscribeConfig(*from.bulk_subscribe_);
  } else {
    bulk_subscribe_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicSubscription)
}

void TopicSubscription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  pubsub_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&routes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bulk_subscribe_) -
      reinterpret_cast<char*>(&routes_)) + sizeof(bulk_subscribe_));
}

TopicSubscription::~TopicSubscription() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicSubscription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicSubscription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pubsub_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routes_;
  if (this != internal_default_instance()) delete bulk_subscribe_;
}

void TopicSubscription::ArenaDtor(void* object) {
  TopicSubscription* _this = reinterpret_cast< TopicSubscription* >(object);
  (void)_this;
}
void TopicSubscription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicSubscription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicSubscription& TopicSubscription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicSubscription_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicSubscription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  pubsub_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dead_letter_topic_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && routes_ != nullptr) {
    delete routes_;
  }
  routes_ = nullptr;
  if (GetArena() == nullptr && bulk_subscribe_ != nullptr) {
    delete bulk_subscribe_;
  }
  bulk_subscribe_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicSubscription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string pubsub_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pubsub_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicSubscription.pubsub_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicSubscription.topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_routes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dead_letter_topic = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_dead_letter_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicSubscription.dead_letter_topic"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .dapr.proto.runtime.v1.BulkSubscribeConfig bulk_subscribe = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bulk_subscribe(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicSubscription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicSubscription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pubsub_name().data(), static_cast<int>(this->_internal_pubsub_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.pubsub_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pubsub_name(), target);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.topic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_topic(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TopicSubscription_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = TopicSubscription_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
  if (this->has_routes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::routes(this), target, stream);
  }

  // string dead_letter_topic = 6;
  if (this->dead_letter_topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dead_letter_topic().data(), static_cast<int>(this->_internal_dead_letter_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.dead_letter_topic");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_dead_letter_topic(), target);
  }

  // .dapr.proto.runtime.v1.BulkSubscribeConfig bulk_subscribe = 7;
  if (this->has_bulk_subscribe()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::bulk_subscribe(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicSubscription)
  return target;
}

size_t TopicSubscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicSubscription)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += TopicSubscription_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pubsub_name());
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // string dead_letter_topic = 6;
  if (this->dead_letter_topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dead_letter_topic());
  }

  // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
  if (this->has_routes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *routes_);
  }

  // .dapr.proto.runtime.v1.BulkSubscribeConfig bulk_subscribe = 7;
  if (this->has_bulk_subscribe()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bulk_subscribe_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicSubscription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicSubscription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicSubscription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicSubscription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicSubscription)
    MergeFrom(*source);
  }
}

void TopicSubscription::MergeFrom(const TopicSubscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.pubsub_name().size() > 0) {
    _internal_set_pubsub_name(from._internal_pubsub_name());
  }
  if (from.topic().size() > 0) {
    _internal_set_topic(from._internal_topic());
  }
  if (from.dead_letter_topic().size() > 0) {
    _internal_set_dead_letter_topic(from._internal_dead_letter_topic());
  }
  if (from.has_routes()) {
    _internal_mutable_routes()->::dapr::proto::runtime::v1::TopicRoutes::MergeFrom(from._internal_routes());
  }
  if (from.has_bulk_subscribe()) {
    _internal_mutable_bulk_subscribe()->::dapr::proto::runtime::v1::BulkSubscribeConfig::MergeFrom(from._internal_bulk_subscribe());
  }
}

void TopicSubscription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicSubscription::CopyFrom(const TopicSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicSubscription::IsInitialized() const {
  return true;
}

void TopicSubscription::InternalSwap(TopicSubscription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  pubsub_name_.Swap(&other->pubsub_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dead_letter_topic_.Swap(&other->dead_letter_topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TopicSubscription, bulk_subscribe_)
      + sizeof(TopicSubscription::bulk_subscribe_)
      - PROTOBUF_FIELD_OFFSET(TopicSubscription, routes_)>(
          reinterpret_cast<char*>(&routes_),
          reinterpret_cast<char*>(&other->routes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicSubscription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicRoutes::InitAsDefaultInstance() {
}
class TopicRoutes::_Internal {
 public:
};

TopicRoutes::TopicRoutes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rules_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicRoutes)
}
TopicRoutes::TopicRoutes(const TopicRoutes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_().empty()) {
    default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_default_(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicRoutes)
}

void TopicRoutes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TopicRoutes::~TopicRoutes() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicRoutes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicRoutes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  default__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TopicRoutes::ArenaDtor(void* object) {
  TopicRoutes* _this = reinterpret_cast< TopicRoutes* >(object);
  (void)_this;
}
void TopicRoutes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicRoutes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicRoutes& TopicRoutes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicRoutes_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicRoutes::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicRoutes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  default__.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicRoutes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_default_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicRoutes.default"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicRoutes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicRoutes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rules_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_rules(i), target, stream);
  }

  // string default = 2;
  if (this->default_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRoutes.default");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_default_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicRoutes)
  return target;
}

size_t TopicRoutes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicRoutes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
  total_size += 1UL * this->_internal_rules_size();
  for (const auto& msg : this->rules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string default = 2;
  if (this->default_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicRoutes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicRoutes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicRoutes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicRoutes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicRoutes)
    MergeFrom(*source);
  }
}

void TopicRoutes::MergeFrom(const TopicRoutes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  if (from.default_().size() > 0) {
    _internal_set_default_(from._internal_default_());
  }
}

void TopicRoutes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicRoutes::CopyFrom(const TopicRoutes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicRoutes::IsInitialized() const {
  return true;
}

void TopicRoutes::InternalSwap(TopicRoutes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rules_.InternalSwap(&other->rules_);
  default__.Swap(&other->default__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicRoutes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TopicRule::InitAsDefaultInstance() {
}
class TopicRule::_Internal {
 public:
};

TopicRule::TopicRule(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.TopicRule)
}
TopicRule::TopicRule(const TopicRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  match_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_match().empty()) {
    match_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_match(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicRule)
}

void TopicRule::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  match_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TopicRule::~TopicRule() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicRule)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TopicRule::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  match_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TopicRule::ArenaDtor(void* object) {
  TopicRule* _this = reinterpret_cast< TopicRule* >(object);
  (void)_this;
}
void TopicRule::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TopicRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TopicRule& TopicRule::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TopicRule_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void TopicRule::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicRule::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string match = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_match();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicRule.match"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.TopicRule.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TopicRule::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string match = 1;
  if (this->match().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_match().data(), static_cast<int>(this->_internal_match().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRule.match");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_match(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRule.path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicRule)
  return target;
}

size_t TopicRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicRule)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string match = 1;
  if (this->match().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_match());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicRule::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicRule)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicRule* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TopicRule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicRule)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicRule)
    MergeFrom(*source);
  }
}

void TopicRule::MergeFrom(const TopicRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match().size() > 0) {
    _internal_set_match(from._internal_match());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void TopicRule::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicRule::CopyFrom(const TopicRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicRule::IsInitialized() const {
  return true;
}

void TopicRule::InternalSwap(TopicRule* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  match_.Swap(&other->match_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicRule::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BulkSubscribeConfig::InitAsDefaultInstance() {
}
class BulkSubscribeConfig::_Internal {
 public:
};

BulkSubscribeConfig::BulkSubscribeConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.BulkSubscribeConfig)
}
BulkSubscribeConfig::BulkSubscribeConfig(const BulkSubscribeConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_await_duration_ms_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(max_await_duration_ms_));
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BulkSubscribeConfig)
}

void BulkSubscribeConfig::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_await_duration_ms_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(max_await_duration_ms_));
}

BulkSubscribeConfig::~BulkSubscribeConfig() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BulkSubscribeConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulkSubscribeConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BulkSubscribeConfig::ArenaDtor(void* object) {
  BulkSubscribeConfig* _this = reinterpret_cast< BulkSubscribeConfig* >(object);
  (void)_this;
}
void BulkSubscribeConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulkSubscribeConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkSubscribeConfig& BulkSubscribeConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkSubscribeConfig_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void BulkSubscribeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_await_duration_ms_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(max_await_duration_ms_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulkSubscribeConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_messages_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_messages_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_await_duration_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          max_await_duration_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkSubscribeConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_enabled(), target);
  }

  // int32 max_messages_count = 2;
  if (this->max_messages_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_max_messages_count(), target);
  }

  // int32 max_await_duration_ms = 3;
  if (this->max_await_duration_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_max_await_duration_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BulkSubscribeConfig)
  return target;
}

size_t BulkSubscribeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // int32 max_messages_count = 2;
  if (this->max_messages_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_messages_count());
  }

  // int32 max_await_duration_ms = 3;
  if (this->max_await_duration_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_await_duration_ms());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkSubscribeConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkSubscribeConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkSubscribeConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BulkSubscribeConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BulkSubscribeConfig)
    MergeFrom(*source);
  }
}

void BulkSubscribeConfig::MergeFrom(const BulkSubscribeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    _internal_set_enabled(from._internal_enabled());
  }
  if (from.max_messages_count() != 0) {
    _internal_set_max_messages_count(from._internal_max_messages_count());
  }
  if (from.max_await_duration_ms() != 0) {
    _internal_set_max_await_duration_ms(from._internal_max_await_duration_ms());
  }
}

void BulkSubscribeConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkSubscribeConfig::CopyFrom(const BulkSubscribeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BulkSubscribeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkSubscribeConfig::IsInitialized() const {
  return true;
}

void BulkSubscribeConfig::InternalSwap(BulkSubscribeConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BulkSubscribeConfig, max_await_duration_ms_)
      + sizeof(BulkSubscribeConfig::max_await_duration_ms_)
      - PROTOBUF_FIELD_OFFSET(BulkSubscribeConfig, enabled_)>(
          reinterpret_cast<char*>(&enabled_),
          reinterpret_cast<char*>(&other->enabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkSubscribeConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListInputBindingsResponse::InitAsDefaultInstance() {
}
class ListInputBindingsResponse::_Internal {
 public:
};

ListInputBindingsResponse::ListInputBindingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  bindings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.ListInputBindingsResponse)
}
ListInputBindingsResponse::ListInputBindingsResponse(const ListInputBindingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bindings_(from.bindings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ListInputBindingsResponse)
}

void ListInputBindingsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListInputBindingsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
}

ListInputBindingsResponse::~ListInputBindingsResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ListInputBindingsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListInputBindingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListInputBindingsResponse::ArenaDtor(void* object) {
  ListInputBindingsResponse* _this = reinterpret_cast< ListInputBindingsResponse* >(object);
  (void)_this;
}
void ListInputBindingsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListInputBindingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListInputBindingsResponse& ListInputBindingsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListInputBindingsResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void ListInputBindingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListInputBindingsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string bindings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bindings();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.proto.runtime.v1.ListInputBindingsResponse.bindings"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListInputBindingsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string bindings = 1;
  for (int i = 0, n = this->_internal_bindings_size(); i < n; i++) {
    const auto& s = this->_internal_bindings(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ListInputBindingsResponse.bindings");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ListInputBindingsResponse)
  return target;
}

size_t ListInputBindingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string bindings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bindings_.size());
  for (int i = 0, n = bindings_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bindings_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInputBindingsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInputBindingsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListInputBindingsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ListInputBindingsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ListInputBindingsResponse)
    MergeFrom(*source);
  }
}

void ListInputBindingsResponse::MergeFrom(const ListInputBindingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
}

void ListInputBindingsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInputBindingsResponse::CopyFrom(const ListInputBindingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInputBindingsResponse::IsInitialized() const {
  return true;
}

void ListInputBindingsResponse::InternalSwap(ListInputBindingsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bindings_.InternalSwap(&other->bindings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListInputBindingsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HealthCheckResponse::InitAsDefaultInstance() {
}
class HealthCheckResponse::_Internal {
 public:
};

HealthCheckResponse::HealthCheckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapr.proto.runtime.v1.HealthCheckResponse)
}
HealthCheckResponse::HealthCheckResponse(const HealthCheckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.HealthCheckResponse)
}

void HealthCheckResponse::SharedCtor() {
}

HealthCheckResponse::~HealthCheckResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.HealthCheckResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthCheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HealthCheckResponse::ArenaDtor(void* object) {
  HealthCheckResponse* _this = reinterpret_cast< HealthCheckResponse* >(object);
  (void)_this;
}
void HealthCheckResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthCheckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthCheckResponse& HealthCheckResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthCheckResponse_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto.base);
  return *internal_default_instance();
}


void HealthCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.HealthCheckResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthCheckResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthCheckResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.HealthCheckResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.HealthCheckResponse)
  return target;
}

size_t HealthCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.HealthCheckResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthCheckResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.HealthCheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthCheckResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthCheckResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.HealthCheckResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.HealthCheckResponse)
    MergeFrom(*source);
  }
}

void HealthCheckResponse::MergeFrom(const HealthCheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.HealthCheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HealthCheckResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.HealthCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthCheckResponse::CopyFrom(const HealthCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.HealthCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthCheckResponse::IsInitialized() const {
  return true;
}

void HealthCheckResponse::InternalSwap(HealthCheckResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthCheckResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::JobEventRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::JobEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::JobEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::JobEventResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::JobEventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::JobEventResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventCERequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventCERequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventCERequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventBulkRequestEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventBulkRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventBulkRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventBulkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventBulkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventBulkResponseEntry* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventBulkResponseEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventBulkResponseEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicEventBulkResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventBulkResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicEventBulkResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BindingEventRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BindingEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BindingEventRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BindingEventResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BindingEventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BindingEventResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicSubscription* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicSubscription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicSubscription >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicRoutes* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicRoutes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicRoutes >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::TopicRule* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::TopicRule >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::BulkSubscribeConfig* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BulkSubscribeConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::BulkSubscribeConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::ListInputBindingsResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ListInputBindingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::ListInputBindingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::proto::runtime::v1::HealthCheckResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::HealthCheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dapr::proto::runtime::v1::HealthCheckResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
