// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dapr/proto/runtime/v1/dapr.proto
// Original file comments:
//
// Copyright 2021 The Dapr Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto__INCLUDED
#define GRPC_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto__INCLUDED

#include "dapr/proto/runtime/v1/dapr.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {

// Dapr service provides APIs to user application to access Dapr building blocks.
class Dapr final {
 public:
  static constexpr char const* service_full_name() {
    return "dapr.proto.runtime.v1.Dapr";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Invokes a method on a remote Dapr app.
    // Deprecated: Use proxy mode service invocation instead.
    virtual ::grpc::Status InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::dapr::proto::common::v1::InvokeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>> AsyncInvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>>(AsyncInvokeServiceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>> PrepareAsyncInvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>>(PrepareAsyncInvokeServiceRaw(context, request, cq));
    }
    // Gets the state for a specific key.
    virtual ::grpc::Status GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::dapr::proto::runtime::v1::GetStateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetStateResponse>> AsyncGetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetStateResponse>>(AsyncGetStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetStateResponse>> PrepareAsyncGetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetStateResponse>>(PrepareAsyncGetStateRaw(context, request, cq));
    }
    // Gets a bulk of state items for a list of keys
    virtual ::grpc::Status GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkStateResponse>> AsyncGetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkStateResponse>>(AsyncGetBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkStateResponse>> PrepareAsyncGetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkStateResponse>>(PrepareAsyncGetBulkStateRaw(context, request, cq));
    }
    // Saves the state for a specific key.
    virtual ::grpc::Status SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSaveStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSaveStateRaw(context, request, cq));
    }
    // Queries the state.
    virtual ::grpc::Status QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::dapr::proto::runtime::v1::QueryStateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::QueryStateResponse>> AsyncQueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::QueryStateResponse>>(AsyncQueryStateAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::QueryStateResponse>> PrepareAsyncQueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::QueryStateResponse>>(PrepareAsyncQueryStateAlpha1Raw(context, request, cq));
    }
    // Deletes the state for a specific key.
    virtual ::grpc::Status DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteStateRaw(context, request, cq));
    }
    // Deletes a bulk of state items for a list of keys
    virtual ::grpc::Status DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteBulkStateRaw(context, request, cq));
    }
    // Executes transactions for a specified store
    virtual ::grpc::Status ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncExecuteStateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncExecuteStateTransactionRaw(context, request, cq));
    }
    // Publishes events to the specific topic.
    virtual ::grpc::Status PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPublishEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPublishEventRaw(context, request, cq));
    }
    // Bulk Publishes multiple events to the specified topic.
    virtual ::grpc::Status BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::dapr::proto::runtime::v1::BulkPublishResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::BulkPublishResponse>> AsyncBulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::BulkPublishResponse>>(AsyncBulkPublishEventAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::BulkPublishResponse>> PrepareAsyncBulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::BulkPublishResponse>>(PrepareAsyncBulkPublishEventAlpha1Raw(context, request, cq));
    }
    // SubscribeTopicEventsAlpha1 subscribes to a PubSub topic and receives topic
    // events from it.
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>> SubscribeTopicEventsAlpha1(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>>(SubscribeTopicEventsAlpha1Raw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>> AsyncSubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>>(AsyncSubscribeTopicEventsAlpha1Raw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>> PrepareAsyncSubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>>(PrepareAsyncSubscribeTopicEventsAlpha1Raw(context, cq));
    }
    // Invokes binding data to specific output bindings
    virtual ::grpc::Status InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeBindingResponse>> AsyncInvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeBindingResponse>>(AsyncInvokeBindingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeBindingResponse>> PrepareAsyncInvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeBindingResponse>>(PrepareAsyncInvokeBindingRaw(context, request, cq));
    }
    // Gets secrets from secret stores.
    virtual ::grpc::Status GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::dapr::proto::runtime::v1::GetSecretResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetSecretResponse>> AsyncGetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetSecretResponse>>(AsyncGetSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetSecretResponse>> PrepareAsyncGetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetSecretResponse>>(PrepareAsyncGetSecretRaw(context, request, cq));
    }
    // Gets a bulk of secrets
    virtual ::grpc::Status GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkSecretResponse>> AsyncGetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkSecretResponse>>(AsyncGetBulkSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkSecretResponse>> PrepareAsyncGetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkSecretResponse>>(PrepareAsyncGetBulkSecretRaw(context, request, cq));
    }
    // Register an actor timer.
    virtual ::grpc::Status RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRegisterActorTimerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRegisterActorTimerRaw(context, request, cq));
    }
    // Unregister an actor timer.
    virtual ::grpc::Status UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUnregisterActorTimerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUnregisterActorTimerRaw(context, request, cq));
    }
    // Register an actor reminder.
    virtual ::grpc::Status RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRegisterActorReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRegisterActorReminderRaw(context, request, cq));
    }
    // Unregister an actor reminder.
    virtual ::grpc::Status UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUnregisterActorReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUnregisterActorReminderRaw(context, request, cq));
    }
    // Gets the state for a specific actor.
    virtual ::grpc::Status GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::dapr::proto::runtime::v1::GetActorStateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetActorStateResponse>> AsyncGetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetActorStateResponse>>(AsyncGetActorStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetActorStateResponse>> PrepareAsyncGetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetActorStateResponse>>(PrepareAsyncGetActorStateRaw(context, request, cq));
    }
    // Executes state transactions for a specified actor
    virtual ::grpc::Status ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncExecuteActorStateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncExecuteActorStateTransactionRaw(context, request, cq));
    }
    // InvokeActor calls a method on an actor.
    virtual ::grpc::Status InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::dapr::proto::runtime::v1::InvokeActorResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeActorResponse>> AsyncInvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeActorResponse>>(AsyncInvokeActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeActorResponse>> PrepareAsyncInvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeActorResponse>>(PrepareAsyncInvokeActorRaw(context, request, cq));
    }
    // GetConfiguration gets configuration from configuration store.
    virtual ::grpc::Status GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>> AsyncGetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(AsyncGetConfigurationAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>> PrepareAsyncGetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(PrepareAsyncGetConfigurationAlpha1Raw(context, request, cq));
    }
    // GetConfiguration gets configuration from configuration store.
    virtual ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    // SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
    std::unique_ptr< ::grpc::ClientReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> SubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(SubscribeConfigurationAlpha1Raw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> AsyncSubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(AsyncSubscribeConfigurationAlpha1Raw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> PrepareAsyncSubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(PrepareAsyncSubscribeConfigurationAlpha1Raw(context, request, cq));
    }
    // SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
    std::unique_ptr< ::grpc::ClientReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> SubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(SubscribeConfigurationRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> AsyncSubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(AsyncSubscribeConfigurationRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> PrepareAsyncSubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(PrepareAsyncSubscribeConfigurationRaw(context, request, cq));
    }
    // UnSubscribeConfiguration unsubscribe the subscription of configuration
    virtual ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> AsyncUnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(AsyncUnsubscribeConfigurationAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> PrepareAsyncUnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(PrepareAsyncUnsubscribeConfigurationAlpha1Raw(context, request, cq));
    }
    // UnSubscribeConfiguration unsubscribe the subscription of configuration
    virtual ::grpc::Status UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> AsyncUnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(AsyncUnsubscribeConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> PrepareAsyncUnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(PrepareAsyncUnsubscribeConfigurationRaw(context, request, cq));
    }
    // TryLockAlpha1 tries to get a lock with an expiry.
    virtual ::grpc::Status TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::dapr::proto::runtime::v1::TryLockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::TryLockResponse>> AsyncTryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::TryLockResponse>>(AsyncTryLockAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::TryLockResponse>> PrepareAsyncTryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::TryLockResponse>>(PrepareAsyncTryLockAlpha1Raw(context, request, cq));
    }
    // UnlockAlpha1 unlocks a lock.
    virtual ::grpc::Status UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::dapr::proto::runtime::v1::UnlockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnlockResponse>> AsyncUnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnlockResponse>>(AsyncUnlockAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnlockResponse>> PrepareAsyncUnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnlockResponse>>(PrepareAsyncUnlockAlpha1Raw(context, request, cq));
    }
    // EncryptAlpha1 encrypts a message using the Dapr encryption scheme and a key stored in the vault.
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>> EncryptAlpha1(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>>(EncryptAlpha1Raw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>> AsyncEncryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>>(AsyncEncryptAlpha1Raw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>> PrepareAsyncEncryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>>(PrepareAsyncEncryptAlpha1Raw(context, cq));
    }
    // DecryptAlpha1 decrypts a message using the Dapr encryption scheme and a key stored in the vault.
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>> DecryptAlpha1(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>>(DecryptAlpha1Raw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>> AsyncDecryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>>(AsyncDecryptAlpha1Raw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>> PrepareAsyncDecryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>>(PrepareAsyncDecryptAlpha1Raw(context, cq));
    }
    // Gets metadata of the sidecar
    virtual ::grpc::Status GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::dapr::proto::runtime::v1::GetMetadataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetMetadataResponse>> AsyncGetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetMetadataResponse>>(AsyncGetMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetMetadataResponse>> PrepareAsyncGetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetMetadataResponse>>(PrepareAsyncGetMetadataRaw(context, request, cq));
    }
    // Sets value in extended metadata of the sidecar
    virtual ::grpc::Status SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetMetadataRaw(context, request, cq));
    }
    // SubtleGetKeyAlpha1 returns the public part of an asymmetric key stored in the vault.
    virtual ::grpc::Status SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>> AsyncSubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>>(AsyncSubtleGetKeyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>> PrepareAsyncSubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>>(PrepareAsyncSubtleGetKeyAlpha1Raw(context, request, cq));
    }
    // SubtleEncryptAlpha1 encrypts a small message using a key stored in the vault.
    virtual ::grpc::Status SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleEncryptResponse>> AsyncSubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleEncryptResponse>>(AsyncSubtleEncryptAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleEncryptResponse>> PrepareAsyncSubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleEncryptResponse>>(PrepareAsyncSubtleEncryptAlpha1Raw(context, request, cq));
    }
    // SubtleDecryptAlpha1 decrypts a small message using a key stored in the vault.
    virtual ::grpc::Status SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleDecryptResponse>> AsyncSubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleDecryptResponse>>(AsyncSubtleDecryptAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleDecryptResponse>> PrepareAsyncSubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleDecryptResponse>>(PrepareAsyncSubtleDecryptAlpha1Raw(context, request, cq));
    }
    // SubtleWrapKeyAlpha1 wraps a key using a key stored in the vault.
    virtual ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>> AsyncSubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>>(AsyncSubtleWrapKeyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>> PrepareAsyncSubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>>(PrepareAsyncSubtleWrapKeyAlpha1Raw(context, request, cq));
    }
    // SubtleUnwrapKeyAlpha1 unwraps a key using a key stored in the vault.
    virtual ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>> AsyncSubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>>(AsyncSubtleUnwrapKeyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>> PrepareAsyncSubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>>(PrepareAsyncSubtleUnwrapKeyAlpha1Raw(context, request, cq));
    }
    // SubtleSignAlpha1 signs a message using a key stored in the vault.
    virtual ::grpc::Status SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::dapr::proto::runtime::v1::SubtleSignResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleSignResponse>> AsyncSubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleSignResponse>>(AsyncSubtleSignAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleSignResponse>> PrepareAsyncSubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleSignResponse>>(PrepareAsyncSubtleSignAlpha1Raw(context, request, cq));
    }
    // SubtleVerifyAlpha1 verifies the signature of a message using a key stored in the vault.
    virtual ::grpc::Status SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleVerifyResponse>> AsyncSubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleVerifyResponse>>(AsyncSubtleVerifyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleVerifyResponse>> PrepareAsyncSubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleVerifyResponse>>(PrepareAsyncSubtleVerifyAlpha1Raw(context, request, cq));
    }
    // Starts a new instance of a workflow
    virtual ::grpc::Status StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>> AsyncStartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(AsyncStartWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>> PrepareAsyncStartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(PrepareAsyncStartWorkflowAlpha1Raw(context, request, cq));
    }
    // Gets details about a started workflow instance
    virtual ::grpc::Status GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>> AsyncGetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(AsyncGetWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>> PrepareAsyncGetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(PrepareAsyncGetWorkflowAlpha1Raw(context, request, cq));
    }
    // Purge Workflow
    virtual ::grpc::Status PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPurgeWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPurgeWorkflowAlpha1Raw(context, request, cq));
    }
    // Terminates a running workflow instance
    virtual ::grpc::Status TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncTerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncTerminateWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncTerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncTerminateWorkflowAlpha1Raw(context, request, cq));
    }
    // Pauses a running workflow instance
    virtual ::grpc::Status PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPauseWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPauseWorkflowAlpha1Raw(context, request, cq));
    }
    // Resumes a paused workflow instance
    virtual ::grpc::Status ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncResumeWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncResumeWorkflowAlpha1Raw(context, request, cq));
    }
    // Raise an event to a running workflow instance
    virtual ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRaiseEventWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRaiseEventWorkflowAlpha1Raw(context, request, cq));
    }
    // Starts a new instance of a workflow
    virtual ::grpc::Status StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>> AsyncStartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(AsyncStartWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>> PrepareAsyncStartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(PrepareAsyncStartWorkflowBeta1Raw(context, request, cq));
    }
    // Gets details about a started workflow instance
    virtual ::grpc::Status GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>> AsyncGetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(AsyncGetWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>> PrepareAsyncGetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(PrepareAsyncGetWorkflowBeta1Raw(context, request, cq));
    }
    // Purge Workflow
    virtual ::grpc::Status PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPurgeWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPurgeWorkflowBeta1Raw(context, request, cq));
    }
    // Terminates a running workflow instance
    virtual ::grpc::Status TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncTerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncTerminateWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncTerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncTerminateWorkflowBeta1Raw(context, request, cq));
    }
    // Pauses a running workflow instance
    virtual ::grpc::Status PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPauseWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPauseWorkflowBeta1Raw(context, request, cq));
    }
    // Resumes a paused workflow instance
    virtual ::grpc::Status ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncResumeWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncResumeWorkflowBeta1Raw(context, request, cq));
    }
    // Raise an event to a running workflow instance
    virtual ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRaiseEventWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRaiseEventWorkflowBeta1Raw(context, request, cq));
    }
    // Shutdown the sidecar
    virtual ::grpc::Status Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncShutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncShutdownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncShutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncShutdownRaw(context, request, cq));
    }
    // Create and schedule a job
    virtual ::grpc::Status ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::ScheduleJobResponse>> AsyncScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::ScheduleJobResponse>>(AsyncScheduleJobAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::ScheduleJobResponse>> PrepareAsyncScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::ScheduleJobResponse>>(PrepareAsyncScheduleJobAlpha1Raw(context, request, cq));
    }
    // Gets a scheduled job
    virtual ::grpc::Status GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::dapr::proto::runtime::v1::GetJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetJobResponse>> AsyncGetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetJobResponse>>(AsyncGetJobAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetJobResponse>> PrepareAsyncGetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetJobResponse>>(PrepareAsyncGetJobAlpha1Raw(context, request, cq));
    }
    // Delete a job
    virtual ::grpc::Status DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::dapr::proto::runtime::v1::DeleteJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::DeleteJobResponse>> AsyncDeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::DeleteJobResponse>>(AsyncDeleteJobAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::DeleteJobResponse>> PrepareAsyncDeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::DeleteJobResponse>>(PrepareAsyncDeleteJobAlpha1Raw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Invokes a method on a remote Dapr app.
      // Deprecated: Use proxy mode service invocation instead.
      virtual void InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InvokeService(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::common::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InvokeService(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InvokeService(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets the state for a specific key.
      virtual void GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets a bulk of state items for a list of keys
      virtual void GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Saves the state for a specific key.
      virtual void SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SaveState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SaveState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Queries the state.
      virtual void QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryStateAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void QueryStateAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void QueryStateAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deletes the state for a specific key.
      virtual void DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Deletes a bulk of state items for a list of keys
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Executes transactions for a specified store
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ExecuteStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Publishes events to the specific topic.
      virtual void PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PublishEvent(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PublishEvent(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PublishEvent(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Bulk Publishes multiple events to the specified topic.
      virtual void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubscribeTopicEventsAlpha1 subscribes to a PubSub topic and receives topic
      // events from it.
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1,::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* reactor) = 0;
      #else
      virtual void SubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1,::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* reactor) = 0;
      #endif
      // Invokes binding data to specific output bindings
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InvokeBinding(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets secrets from secret stores.
      virtual void GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets a bulk of secrets
      virtual void GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBulkSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetBulkSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetBulkSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Register an actor timer.
      virtual void RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RegisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RegisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RegisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Unregister an actor timer.
      virtual void UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnregisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnregisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnregisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Register an actor reminder.
      virtual void RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RegisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RegisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RegisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Unregister an actor reminder.
      virtual void UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnregisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnregisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnregisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets the state for a specific actor.
      virtual void GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetActorState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetActorState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetActorState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Executes state transactions for a specified actor
      virtual void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // InvokeActor calls a method on an actor.
      virtual void InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InvokeActor(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InvokeActor(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InvokeActor(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetConfiguration gets configuration from configuration store.
      virtual void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // GetConfiguration gets configuration from configuration store.
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubscribeConfigurationAlpha1(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) = 0;
      #else
      virtual void SubscribeConfigurationAlpha1(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::experimental::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) = 0;
      #endif
      // SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubscribeConfiguration(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) = 0;
      #else
      virtual void SubscribeConfiguration(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::experimental::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) = 0;
      #endif
      // UnSubscribeConfiguration unsubscribe the subscription of configuration
      virtual void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // UnSubscribeConfiguration unsubscribe the subscription of configuration
      virtual void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // TryLockAlpha1 tries to get a lock with an expiry.
      virtual void TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TryLockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TryLockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TryLockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // UnlockAlpha1 unlocks a lock.
      virtual void UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnlockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UnlockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UnlockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // EncryptAlpha1 encrypts a message using the Dapr encryption scheme and a key stored in the vault.
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void EncryptAlpha1(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dapr::proto::runtime::v1::EncryptRequest,::dapr::proto::runtime::v1::EncryptResponse>* reactor) = 0;
      #else
      virtual void EncryptAlpha1(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::dapr::proto::runtime::v1::EncryptRequest,::dapr::proto::runtime::v1::EncryptResponse>* reactor) = 0;
      #endif
      // DecryptAlpha1 decrypts a message using the Dapr encryption scheme and a key stored in the vault.
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DecryptAlpha1(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dapr::proto::runtime::v1::DecryptRequest,::dapr::proto::runtime::v1::DecryptResponse>* reactor) = 0;
      #else
      virtual void DecryptAlpha1(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::dapr::proto::runtime::v1::DecryptRequest,::dapr::proto::runtime::v1::DecryptResponse>* reactor) = 0;
      #endif
      // Gets metadata of the sidecar
      virtual void GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Sets value in extended metadata of the sidecar
      virtual void SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleGetKeyAlpha1 returns the public part of an asymmetric key stored in the vault.
      virtual void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleEncryptAlpha1 encrypts a small message using a key stored in the vault.
      virtual void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleDecryptAlpha1 decrypts a small message using a key stored in the vault.
      virtual void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleWrapKeyAlpha1 wraps a key using a key stored in the vault.
      virtual void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleUnwrapKeyAlpha1 unwraps a key using a key stored in the vault.
      virtual void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleSignAlpha1 signs a message using a key stored in the vault.
      virtual void SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleSignAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleSignAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleSignAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // SubtleVerifyAlpha1 verifies the signature of a message using a key stored in the vault.
      virtual void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Starts a new instance of a workflow
      virtual void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets details about a started workflow instance
      virtual void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Purge Workflow
      virtual void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Terminates a running workflow instance
      virtual void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Pauses a running workflow instance
      virtual void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Resumes a paused workflow instance
      virtual void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Raise an event to a running workflow instance
      virtual void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Starts a new instance of a workflow
      virtual void StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets details about a started workflow instance
      virtual void GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Purge Workflow
      virtual void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Terminates a running workflow instance
      virtual void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Pauses a running workflow instance
      virtual void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Resumes a paused workflow instance
      virtual void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Raise an event to a running workflow instance
      virtual void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Shutdown the sidecar
      virtual void Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Shutdown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Shutdown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Shutdown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Create and schedule a job
      virtual void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Gets a scheduled job
      virtual void GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Delete a job
      virtual void DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>* AsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>* PrepareAsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetStateResponse>* AsyncGetStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetStateResponse>* PrepareAsyncGetStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkStateResponse>* AsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkStateResponse>* PrepareAsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSaveStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSaveStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::QueryStateResponse>* AsyncQueryStateAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::QueryStateResponse>* PrepareAsyncQueryStateAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPublishEventRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPublishEventRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::BulkPublishResponse>* AsyncBulkPublishEventAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::BulkPublishResponse>* PrepareAsyncBulkPublishEventAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* SubscribeTopicEventsAlpha1Raw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* AsyncSubscribeTopicEventsAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* PrepareAsyncSubscribeTopicEventsAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeBindingResponse>* AsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeBindingResponse>* PrepareAsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetSecretResponse>* AsyncGetSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetSecretResponse>* PrepareAsyncGetSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkSecretResponse>* AsyncGetBulkSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetBulkSecretResponse>* PrepareAsyncGetBulkSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRegisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRegisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUnregisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUnregisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRegisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRegisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUnregisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUnregisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetActorStateResponse>* AsyncGetActorStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetActorStateResponse>* PrepareAsyncGetActorStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncExecuteActorStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncExecuteActorStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeActorResponse>* AsyncInvokeActorRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::InvokeActorResponse>* PrepareAsyncInvokeActorRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>* AsyncGetConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>* PrepareAsyncGetConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* AsyncSubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* PrepareAsyncSubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* AsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* PrepareAsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* AsyncUnsubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* PrepareAsyncUnsubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* AsyncUnsubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* PrepareAsyncUnsubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::TryLockResponse>* AsyncTryLockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::TryLockResponse>* PrepareAsyncTryLockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnlockResponse>* AsyncUnlockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::UnlockResponse>* PrepareAsyncUnlockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* EncryptAlpha1Raw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* AsyncEncryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* PrepareAsyncEncryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* DecryptAlpha1Raw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* AsyncDecryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* PrepareAsyncDecryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetMetadataResponse>* AsyncGetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetMetadataResponse>* PrepareAsyncGetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* AsyncSubtleGetKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* PrepareAsyncSubtleGetKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleEncryptResponse>* AsyncSubtleEncryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleEncryptResponse>* PrepareAsyncSubtleEncryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleDecryptResponse>* AsyncSubtleDecryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleDecryptResponse>* PrepareAsyncSubtleDecryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* AsyncSubtleWrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* PrepareAsyncSubtleWrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* AsyncSubtleUnwrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* PrepareAsyncSubtleUnwrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleSignResponse>* AsyncSubtleSignAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleSignResponse>* PrepareAsyncSubtleSignAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleVerifyResponse>* AsyncSubtleVerifyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::SubtleVerifyResponse>* PrepareAsyncSubtleVerifyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>* AsyncStartWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>* PrepareAsyncStartWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>* AsyncGetWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>* PrepareAsyncGetWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPurgeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPurgeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncTerminateWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncTerminateWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPauseWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPauseWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncResumeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncResumeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRaiseEventWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRaiseEventWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>* AsyncStartWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::StartWorkflowResponse>* PrepareAsyncStartWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>* AsyncGetWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetWorkflowResponse>* PrepareAsyncGetWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPurgeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPurgeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncTerminateWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncTerminateWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPauseWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPauseWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncResumeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncResumeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRaiseEventWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRaiseEventWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncShutdownRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncShutdownRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::ScheduleJobResponse>* AsyncScheduleJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::ScheduleJobResponse>* PrepareAsyncScheduleJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetJobResponse>* AsyncGetJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::GetJobResponse>* PrepareAsyncGetJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::DeleteJobResponse>* AsyncDeleteJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::runtime::v1::DeleteJobResponse>* PrepareAsyncDeleteJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::dapr::proto::common::v1::InvokeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>> AsyncInvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>>(AsyncInvokeServiceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>> PrepareAsyncInvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>>(PrepareAsyncInvokeServiceRaw(context, request, cq));
    }
    ::grpc::Status GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::dapr::proto::runtime::v1::GetStateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetStateResponse>> AsyncGetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetStateResponse>>(AsyncGetStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetStateResponse>> PrepareAsyncGetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetStateResponse>>(PrepareAsyncGetStateRaw(context, request, cq));
    }
    ::grpc::Status GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkStateResponse>> AsyncGetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkStateResponse>>(AsyncGetBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkStateResponse>> PrepareAsyncGetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkStateResponse>>(PrepareAsyncGetBulkStateRaw(context, request, cq));
    }
    ::grpc::Status SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSaveStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSaveStateRaw(context, request, cq));
    }
    ::grpc::Status QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::dapr::proto::runtime::v1::QueryStateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::QueryStateResponse>> AsyncQueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::QueryStateResponse>>(AsyncQueryStateAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::QueryStateResponse>> PrepareAsyncQueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::QueryStateResponse>>(PrepareAsyncQueryStateAlpha1Raw(context, request, cq));
    }
    ::grpc::Status DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteStateRaw(context, request, cq));
    }
    ::grpc::Status DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteBulkStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteBulkStateRaw(context, request, cq));
    }
    ::grpc::Status ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncExecuteStateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncExecuteStateTransactionRaw(context, request, cq));
    }
    ::grpc::Status PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPublishEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPublishEventRaw(context, request, cq));
    }
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::dapr::proto::runtime::v1::BulkPublishResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::BulkPublishResponse>> AsyncBulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::BulkPublishResponse>>(AsyncBulkPublishEventAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::BulkPublishResponse>> PrepareAsyncBulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::BulkPublishResponse>>(PrepareAsyncBulkPublishEventAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>> SubscribeTopicEventsAlpha1(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>>(SubscribeTopicEventsAlpha1Raw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>> AsyncSubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>>(AsyncSubscribeTopicEventsAlpha1Raw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>> PrepareAsyncSubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>>(PrepareAsyncSubscribeTopicEventsAlpha1Raw(context, cq));
    }
    ::grpc::Status InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeBindingResponse>> AsyncInvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeBindingResponse>>(AsyncInvokeBindingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeBindingResponse>> PrepareAsyncInvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeBindingResponse>>(PrepareAsyncInvokeBindingRaw(context, request, cq));
    }
    ::grpc::Status GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::dapr::proto::runtime::v1::GetSecretResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetSecretResponse>> AsyncGetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetSecretResponse>>(AsyncGetSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetSecretResponse>> PrepareAsyncGetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetSecretResponse>>(PrepareAsyncGetSecretRaw(context, request, cq));
    }
    ::grpc::Status GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkSecretResponse>> AsyncGetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkSecretResponse>>(AsyncGetBulkSecretRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkSecretResponse>> PrepareAsyncGetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkSecretResponse>>(PrepareAsyncGetBulkSecretRaw(context, request, cq));
    }
    ::grpc::Status RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRegisterActorTimerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRegisterActorTimerRaw(context, request, cq));
    }
    ::grpc::Status UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUnregisterActorTimerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUnregisterActorTimerRaw(context, request, cq));
    }
    ::grpc::Status RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRegisterActorReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRegisterActorReminderRaw(context, request, cq));
    }
    ::grpc::Status UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUnregisterActorReminderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUnregisterActorReminderRaw(context, request, cq));
    }
    ::grpc::Status GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::dapr::proto::runtime::v1::GetActorStateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetActorStateResponse>> AsyncGetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetActorStateResponse>>(AsyncGetActorStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetActorStateResponse>> PrepareAsyncGetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetActorStateResponse>>(PrepareAsyncGetActorStateRaw(context, request, cq));
    }
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncExecuteActorStateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncExecuteActorStateTransactionRaw(context, request, cq));
    }
    ::grpc::Status InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::dapr::proto::runtime::v1::InvokeActorResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeActorResponse>> AsyncInvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeActorResponse>>(AsyncInvokeActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeActorResponse>> PrepareAsyncInvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeActorResponse>>(PrepareAsyncInvokeActorRaw(context, request, cq));
    }
    ::grpc::Status GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>> AsyncGetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(AsyncGetConfigurationAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>> PrepareAsyncGetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(PrepareAsyncGetConfigurationAlpha1Raw(context, request, cq));
    }
    ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> SubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(SubscribeConfigurationAlpha1Raw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> AsyncSubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(AsyncSubscribeConfigurationAlpha1Raw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> PrepareAsyncSubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(PrepareAsyncSubscribeConfigurationAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> SubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(SubscribeConfigurationRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> AsyncSubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(AsyncSubscribeConfigurationRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>> PrepareAsyncSubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>>(PrepareAsyncSubscribeConfigurationRaw(context, request, cq));
    }
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> AsyncUnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(AsyncUnsubscribeConfigurationAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> PrepareAsyncUnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(PrepareAsyncUnsubscribeConfigurationAlpha1Raw(context, request, cq));
    }
    ::grpc::Status UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> AsyncUnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(AsyncUnsubscribeConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>> PrepareAsyncUnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>>(PrepareAsyncUnsubscribeConfigurationRaw(context, request, cq));
    }
    ::grpc::Status TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::dapr::proto::runtime::v1::TryLockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::TryLockResponse>> AsyncTryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::TryLockResponse>>(AsyncTryLockAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::TryLockResponse>> PrepareAsyncTryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::TryLockResponse>>(PrepareAsyncTryLockAlpha1Raw(context, request, cq));
    }
    ::grpc::Status UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::dapr::proto::runtime::v1::UnlockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnlockResponse>> AsyncUnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnlockResponse>>(AsyncUnlockAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnlockResponse>> PrepareAsyncUnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnlockResponse>>(PrepareAsyncUnlockAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>> EncryptAlpha1(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>>(EncryptAlpha1Raw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>> AsyncEncryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>>(AsyncEncryptAlpha1Raw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>> PrepareAsyncEncryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>>(PrepareAsyncEncryptAlpha1Raw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>> DecryptAlpha1(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>>(DecryptAlpha1Raw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>> AsyncDecryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>>(AsyncDecryptAlpha1Raw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>> PrepareAsyncDecryptAlpha1(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>>(PrepareAsyncDecryptAlpha1Raw(context, cq));
    }
    ::grpc::Status GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::dapr::proto::runtime::v1::GetMetadataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetMetadataResponse>> AsyncGetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetMetadataResponse>>(AsyncGetMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetMetadataResponse>> PrepareAsyncGetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetMetadataResponse>>(PrepareAsyncGetMetadataRaw(context, request, cq));
    }
    ::grpc::Status SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetMetadataRaw(context, request, cq));
    }
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>> AsyncSubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>>(AsyncSubtleGetKeyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>> PrepareAsyncSubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>>(PrepareAsyncSubtleGetKeyAlpha1Raw(context, request, cq));
    }
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleEncryptResponse>> AsyncSubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleEncryptResponse>>(AsyncSubtleEncryptAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleEncryptResponse>> PrepareAsyncSubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleEncryptResponse>>(PrepareAsyncSubtleEncryptAlpha1Raw(context, request, cq));
    }
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleDecryptResponse>> AsyncSubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleDecryptResponse>>(AsyncSubtleDecryptAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleDecryptResponse>> PrepareAsyncSubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleDecryptResponse>>(PrepareAsyncSubtleDecryptAlpha1Raw(context, request, cq));
    }
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>> AsyncSubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>>(AsyncSubtleWrapKeyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>> PrepareAsyncSubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>>(PrepareAsyncSubtleWrapKeyAlpha1Raw(context, request, cq));
    }
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>> AsyncSubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>>(AsyncSubtleUnwrapKeyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>> PrepareAsyncSubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>>(PrepareAsyncSubtleUnwrapKeyAlpha1Raw(context, request, cq));
    }
    ::grpc::Status SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::dapr::proto::runtime::v1::SubtleSignResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleSignResponse>> AsyncSubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleSignResponse>>(AsyncSubtleSignAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleSignResponse>> PrepareAsyncSubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleSignResponse>>(PrepareAsyncSubtleSignAlpha1Raw(context, request, cq));
    }
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleVerifyResponse>> AsyncSubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleVerifyResponse>>(AsyncSubtleVerifyAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleVerifyResponse>> PrepareAsyncSubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleVerifyResponse>>(PrepareAsyncSubtleVerifyAlpha1Raw(context, request, cq));
    }
    ::grpc::Status StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>> AsyncStartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(AsyncStartWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>> PrepareAsyncStartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(PrepareAsyncStartWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>> AsyncGetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(AsyncGetWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>> PrepareAsyncGetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(PrepareAsyncGetWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPurgeWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPurgeWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncTerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncTerminateWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncTerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncTerminateWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPauseWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPauseWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncResumeWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncResumeWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRaiseEventWorkflowAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRaiseEventWorkflowAlpha1Raw(context, request, cq));
    }
    ::grpc::Status StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>> AsyncStartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(AsyncStartWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>> PrepareAsyncStartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>>(PrepareAsyncStartWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>> AsyncGetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(AsyncGetWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>> PrepareAsyncGetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>>(PrepareAsyncGetWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPurgeWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPurgeWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncTerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncTerminateWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncTerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncTerminateWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPauseWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPauseWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncResumeWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncResumeWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRaiseEventWorkflowBeta1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRaiseEventWorkflowBeta1Raw(context, request, cq));
    }
    ::grpc::Status Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncShutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncShutdownRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncShutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncShutdownRaw(context, request, cq));
    }
    ::grpc::Status ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::ScheduleJobResponse>> AsyncScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::ScheduleJobResponse>>(AsyncScheduleJobAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::ScheduleJobResponse>> PrepareAsyncScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::ScheduleJobResponse>>(PrepareAsyncScheduleJobAlpha1Raw(context, request, cq));
    }
    ::grpc::Status GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::dapr::proto::runtime::v1::GetJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetJobResponse>> AsyncGetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetJobResponse>>(AsyncGetJobAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetJobResponse>> PrepareAsyncGetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetJobResponse>>(PrepareAsyncGetJobAlpha1Raw(context, request, cq));
    }
    ::grpc::Status DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::dapr::proto::runtime::v1::DeleteJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::DeleteJobResponse>> AsyncDeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::DeleteJobResponse>>(AsyncDeleteJobAlpha1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::DeleteJobResponse>> PrepareAsyncDeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::DeleteJobResponse>>(PrepareAsyncDeleteJobAlpha1Raw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) override;
      void InvokeService(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::common::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InvokeService(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InvokeService(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InvokeService(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::common::v1::InvokeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetStateResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SaveState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SaveState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SaveState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SaveState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, std::function<void(::grpc::Status)>) override;
      void QueryStateAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void QueryStateAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void QueryStateAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void QueryStateAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::QueryStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteBulkState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteBulkState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ExecuteStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PublishEvent(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PublishEvent(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PublishEvent(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PublishEvent(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, std::function<void(::grpc::Status)>) override;
      void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void BulkPublishEventAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1,::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* reactor) override;
      #else
      void SubscribeTopicEventsAlpha1(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1,::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* reactor) override;
      #endif
      void InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)>) override;
      void InvokeBinding(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InvokeBinding(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InvokeBinding(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InvokeBinding(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBulkSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBulkSecret(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetBulkSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetBulkSecret(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RegisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RegisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RegisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RegisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UnregisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnregisterActorTimer(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnregisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnregisterActorTimer(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RegisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RegisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RegisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RegisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UnregisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnregisterActorReminder(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnregisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnregisterActorReminder(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetActorState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetActorState(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetActorState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetActorState(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ExecuteActorStateTransaction(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, std::function<void(::grpc::Status)>) override;
      void InvokeActor(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InvokeActor(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InvokeActor(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InvokeActor(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubscribeConfigurationAlpha1(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) override;
      #else
      void SubscribeConfigurationAlpha1(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::experimental::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubscribeConfiguration(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) override;
      #else
      void SubscribeConfiguration(::grpc::ClientContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::experimental::ClientReadReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* reactor) override;
      #endif
      void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnsubscribeConfigurationAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnsubscribeConfiguration(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)>) override;
      void TryLockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::TryLockResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TryLockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TryLockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TryLockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::TryLockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)>) override;
      void UnlockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnlockResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnlockAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UnlockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UnlockAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::UnlockResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void EncryptAlpha1(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dapr::proto::runtime::v1::EncryptRequest,::dapr::proto::runtime::v1::EncryptResponse>* reactor) override;
      #else
      void EncryptAlpha1(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::dapr::proto::runtime::v1::EncryptRequest,::dapr::proto::runtime::v1::EncryptResponse>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DecryptAlpha1(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dapr::proto::runtime::v1::DecryptRequest,::dapr::proto::runtime::v1::DecryptResponse>* reactor) override;
      #else
      void DecryptAlpha1(::grpc::ClientContext* context, ::grpc::experimental::ClientBidiReactor< ::dapr::proto::runtime::v1::DecryptRequest,::dapr::proto::runtime::v1::DecryptResponse>* reactor) override;
      #endif
      void GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SetMetadata(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SetMetadata(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleGetKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleEncryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleDecryptAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleWrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleUnwrapKeyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleSignAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleSignAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleSignAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleSignAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, std::function<void(::grpc::Status)>) override;
      void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void SubtleVerifyAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PurgeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TerminateWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PauseWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ResumeWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RaiseEventWorkflowAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      void StartWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      void GetWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PurgeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void TerminateWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PauseWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ResumeWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RaiseEventWorkflowBeta1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Shutdown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Shutdown(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Shutdown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Shutdown(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, std::function<void(::grpc::Status)>) override;
      void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ScheduleJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response, std::function<void(::grpc::Status)>) override;
      void GetJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetJobResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::GetJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteJobAlpha1(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteJobAlpha1(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>* AsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>* PrepareAsyncInvokeServiceRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetStateResponse>* AsyncGetStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetStateResponse>* PrepareAsyncGetStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkStateResponse>* AsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkStateResponse>* PrepareAsyncGetBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSaveStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSaveStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::QueryStateResponse>* AsyncQueryStateAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::QueryStateResponse>* PrepareAsyncQueryStateAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteBulkStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncExecuteStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPublishEventRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPublishEventRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::BulkPublishResponse>* AsyncBulkPublishEventAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::BulkPublishResponse>* PrepareAsyncBulkPublishEventAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* SubscribeTopicEventsAlpha1Raw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* AsyncSubscribeTopicEventsAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* PrepareAsyncSubscribeTopicEventsAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeBindingResponse>* AsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeBindingResponse>* PrepareAsyncInvokeBindingRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetSecretResponse>* AsyncGetSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetSecretResponse>* PrepareAsyncGetSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkSecretResponse>* AsyncGetBulkSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetBulkSecretResponse>* PrepareAsyncGetBulkSecretRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRegisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRegisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUnregisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUnregisterActorTimerRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRegisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRegisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUnregisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUnregisterActorReminderRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetActorStateResponse>* AsyncGetActorStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetActorStateResponse>* PrepareAsyncGetActorStateRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncExecuteActorStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncExecuteActorStateTransactionRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeActorResponse>* AsyncInvokeActorRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::InvokeActorResponse>* PrepareAsyncInvokeActorRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>* AsyncGetConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>* PrepareAsyncGetConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) override;
    ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* AsyncSubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* PrepareAsyncSubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request) override;
    ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* AsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* PrepareAsyncSubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* AsyncUnsubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* PrepareAsyncUnsubscribeConfigurationAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* AsyncUnsubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* PrepareAsyncUnsubscribeConfigurationRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::TryLockResponse>* AsyncTryLockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::TryLockResponse>* PrepareAsyncTryLockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TryLockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnlockResponse>* AsyncUnlockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::UnlockResponse>* PrepareAsyncUnlockAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::UnlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* EncryptAlpha1Raw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* AsyncEncryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* PrepareAsyncEncryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* DecryptAlpha1Raw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* AsyncDecryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* PrepareAsyncDecryptAlpha1Raw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetMetadataResponse>* AsyncGetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetMetadataResponse>* PrepareAsyncGetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetMetadataRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* AsyncSubtleGetKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* PrepareAsyncSubtleGetKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleEncryptResponse>* AsyncSubtleEncryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleEncryptResponse>* PrepareAsyncSubtleEncryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleDecryptResponse>* AsyncSubtleDecryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleDecryptResponse>* PrepareAsyncSubtleDecryptAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* AsyncSubtleWrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* PrepareAsyncSubtleWrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* AsyncSubtleUnwrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* PrepareAsyncSubtleUnwrapKeyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleSignResponse>* AsyncSubtleSignAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleSignResponse>* PrepareAsyncSubtleSignAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleVerifyResponse>* AsyncSubtleVerifyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::SubtleVerifyResponse>* PrepareAsyncSubtleVerifyAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>* AsyncStartWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>* PrepareAsyncStartWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>* AsyncGetWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>* PrepareAsyncGetWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPurgeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPurgeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncTerminateWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncTerminateWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPauseWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPauseWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncResumeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncResumeWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRaiseEventWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRaiseEventWorkflowAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>* AsyncStartWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::StartWorkflowResponse>* PrepareAsyncStartWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>* AsyncGetWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetWorkflowResponse>* PrepareAsyncGetWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPurgeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPurgeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncTerminateWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncTerminateWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPauseWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPauseWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncResumeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncResumeWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRaiseEventWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRaiseEventWorkflowBeta1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncShutdownRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncShutdownRaw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::ScheduleJobResponse>* AsyncScheduleJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::ScheduleJobResponse>* PrepareAsyncScheduleJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetJobResponse>* AsyncGetJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::GetJobResponse>* PrepareAsyncGetJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::GetJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::DeleteJobResponse>* AsyncDeleteJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::runtime::v1::DeleteJobResponse>* PrepareAsyncDeleteJobAlpha1Raw(::grpc::ClientContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_InvokeService_;
    const ::grpc::internal::RpcMethod rpcmethod_GetState_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBulkState_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveState_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryStateAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteState_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBulkState_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteStateTransaction_;
    const ::grpc::internal::RpcMethod rpcmethod_PublishEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_BulkPublishEventAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeTopicEventsAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_InvokeBinding_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSecret_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBulkSecret_;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterActorTimer_;
    const ::grpc::internal::RpcMethod rpcmethod_UnregisterActorTimer_;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterActorReminder_;
    const ::grpc::internal::RpcMethod rpcmethod_UnregisterActorReminder_;
    const ::grpc::internal::RpcMethod rpcmethod_GetActorState_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteActorStateTransaction_;
    const ::grpc::internal::RpcMethod rpcmethod_InvokeActor_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfigurationAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeConfigurationAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_UnsubscribeConfigurationAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_UnsubscribeConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_TryLockAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_UnlockAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_EncryptAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_DecryptAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMetadata_;
    const ::grpc::internal::RpcMethod rpcmethod_SetMetadata_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleGetKeyAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleEncryptAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleDecryptAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleWrapKeyAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleUnwrapKeyAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleSignAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_SubtleVerifyAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_StartWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_PurgeWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_TerminateWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_PauseWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_ResumeWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_RaiseEventWorkflowAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_StartWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_PurgeWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_TerminateWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_PauseWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_ResumeWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_RaiseEventWorkflowBeta1_;
    const ::grpc::internal::RpcMethod rpcmethod_Shutdown_;
    const ::grpc::internal::RpcMethod rpcmethod_ScheduleJobAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_GetJobAlpha1_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteJobAlpha1_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Invokes a method on a remote Dapr app.
    // Deprecated: Use proxy mode service invocation instead.
    virtual ::grpc::Status InvokeService(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response);
    // Gets the state for a specific key.
    virtual ::grpc::Status GetState(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response);
    // Gets a bulk of state items for a list of keys
    virtual ::grpc::Status GetBulkState(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response);
    // Saves the state for a specific key.
    virtual ::grpc::Status SaveState(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response);
    // Queries the state.
    virtual ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response);
    // Deletes the state for a specific key.
    virtual ::grpc::Status DeleteState(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response);
    // Deletes a bulk of state items for a list of keys
    virtual ::grpc::Status DeleteBulkState(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response);
    // Executes transactions for a specified store
    virtual ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response);
    // Publishes events to the specific topic.
    virtual ::grpc::Status PublishEvent(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response);
    // Bulk Publishes multiple events to the specified topic.
    virtual ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response);
    // SubscribeTopicEventsAlpha1 subscribes to a PubSub topic and receives topic
    // events from it.
    virtual ::grpc::Status SubscribeTopicEventsAlpha1(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* stream);
    // Invokes binding data to specific output bindings
    virtual ::grpc::Status InvokeBinding(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response);
    // Gets secrets from secret stores.
    virtual ::grpc::Status GetSecret(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response);
    // Gets a bulk of secrets
    virtual ::grpc::Status GetBulkSecret(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response);
    // Register an actor timer.
    virtual ::grpc::Status RegisterActorTimer(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response);
    // Unregister an actor timer.
    virtual ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response);
    // Register an actor reminder.
    virtual ::grpc::Status RegisterActorReminder(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response);
    // Unregister an actor reminder.
    virtual ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response);
    // Gets the state for a specific actor.
    virtual ::grpc::Status GetActorState(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response);
    // Executes state transactions for a specified actor
    virtual ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response);
    // InvokeActor calls a method on an actor.
    virtual ::grpc::Status InvokeActor(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response);
    // GetConfiguration gets configuration from configuration store.
    virtual ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response);
    // GetConfiguration gets configuration from configuration store.
    virtual ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response);
    // SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
    virtual ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* writer);
    // SubscribeConfiguration gets configuration from configuration store and subscribe the updates event by grpc stream
    virtual ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* writer);
    // UnSubscribeConfiguration unsubscribe the subscription of configuration
    virtual ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response);
    // UnSubscribeConfiguration unsubscribe the subscription of configuration
    virtual ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response);
    // TryLockAlpha1 tries to get a lock with an expiry.
    virtual ::grpc::Status TryLockAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response);
    // UnlockAlpha1 unlocks a lock.
    virtual ::grpc::Status UnlockAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response);
    // EncryptAlpha1 encrypts a message using the Dapr encryption scheme and a key stored in the vault.
    virtual ::grpc::Status EncryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* stream);
    // DecryptAlpha1 decrypts a message using the Dapr encryption scheme and a key stored in the vault.
    virtual ::grpc::Status DecryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* stream);
    // Gets metadata of the sidecar
    virtual ::grpc::Status GetMetadata(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response);
    // Sets value in extended metadata of the sidecar
    virtual ::grpc::Status SetMetadata(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response);
    // SubtleGetKeyAlpha1 returns the public part of an asymmetric key stored in the vault.
    virtual ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response);
    // SubtleEncryptAlpha1 encrypts a small message using a key stored in the vault.
    virtual ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response);
    // SubtleDecryptAlpha1 decrypts a small message using a key stored in the vault.
    virtual ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response);
    // SubtleWrapKeyAlpha1 wraps a key using a key stored in the vault.
    virtual ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response);
    // SubtleUnwrapKeyAlpha1 unwraps a key using a key stored in the vault.
    virtual ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response);
    // SubtleSignAlpha1 signs a message using a key stored in the vault.
    virtual ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response);
    // SubtleVerifyAlpha1 verifies the signature of a message using a key stored in the vault.
    virtual ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response);
    // Starts a new instance of a workflow
    virtual ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response);
    // Gets details about a started workflow instance
    virtual ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response);
    // Purge Workflow
    virtual ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Terminates a running workflow instance
    virtual ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Pauses a running workflow instance
    virtual ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Resumes a paused workflow instance
    virtual ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Raise an event to a running workflow instance
    virtual ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Starts a new instance of a workflow
    virtual ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response);
    // Gets details about a started workflow instance
    virtual ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response);
    // Purge Workflow
    virtual ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Terminates a running workflow instance
    virtual ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Pauses a running workflow instance
    virtual ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Resumes a paused workflow instance
    virtual ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Raise an event to a running workflow instance
    virtual ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response);
    // Shutdown the sidecar
    virtual ::grpc::Status Shutdown(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response);
    // Create and schedule a job
    virtual ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response);
    // Gets a scheduled job
    virtual ::grpc::Status GetJobAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response);
    // Delete a job
    virtual ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InvokeService() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeService(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::common::v1::InvokeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetState() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetState(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetStateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBulkState() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkState(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetBulkStateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SaveState() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveState(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SaveStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryStateAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryStateAlpha1() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_QueryStateAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryStateAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::QueryStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::QueryStateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteState() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteState(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBulkState(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteStateTransaction(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PublishEvent() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishEvent(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::PublishEventRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BulkPublishEventAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BulkPublishEventAlpha1() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_BulkPublishEventAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBulkPublishEventAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::BulkPublishResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeTopicEventsAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeTopicEventsAlpha1() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SubscribeTopicEventsAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTopicEventsAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTopicEventsAlpha1(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(10, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeBinding(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::InvokeBindingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSecret() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSecret(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetSecretRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetSecretResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBulkSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBulkSecret() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetBulkSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkSecret(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetBulkSecretResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterActorTimer() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_RegisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterActorTimer(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnregisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnregisterActorTimer() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_UnregisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnregisterActorTimer(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterActorReminder() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_RegisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterActorReminder(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnregisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnregisterActorReminder() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_UnregisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnregisterActorReminder(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetActorState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetActorState() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetActorState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActorState(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetActorStateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteActorStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteActorStateTransaction() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_ExecuteActorStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteActorStateTransaction(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InvokeActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InvokeActor() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_InvokeActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeActor(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeActor(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::InvokeActorResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfigurationAlpha1() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_GetConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfigurationAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_SubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeConfigurationAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ServerAsyncWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(23, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeConfiguration(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request, ::grpc::ServerAsyncWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(24, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnsubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnsubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_UnsubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnsubscribeConfigurationAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnsubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnsubscribeConfiguration() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_UnsubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnsubscribeConfiguration(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TryLockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TryLockAlpha1() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_TryLockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryLockAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::TryLockRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::TryLockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnlockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnlockAlpha1() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_UnlockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::UnlockRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::UnlockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EncryptAlpha1() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_EncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EncryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEncryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(29, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DecryptAlpha1() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_DecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDecryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(30, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMetadata() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_GetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMetadata(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetMetadataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetMetadata() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_SetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMetadata(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleGetKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleGetKeyAlpha1() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_SubtleGetKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleGetKeyAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleEncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleEncryptAlpha1() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_SubtleEncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleEncryptAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleEncryptResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleDecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleDecryptAlpha1() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_SubtleDecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleDecryptAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleDecryptResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleWrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleWrapKeyAlpha1() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_SubtleWrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleWrapKeyAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleUnwrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleUnwrapKeyAlpha1() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_SubtleUnwrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleUnwrapKeyAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleSignAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleSignAlpha1() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_SubtleSignAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleSignAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleSignResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubtleVerifyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubtleVerifyAlpha1() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_SubtleVerifyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleVerifyAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::SubtleVerifyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_StartWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::StartWorkflowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_GetWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetWorkflowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PurgeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PurgeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_PurgeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPurgeWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TerminateWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TerminateWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_TerminateWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminateWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PauseWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PauseWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_PauseWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPauseWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResumeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResumeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_ResumeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResumeWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RaiseEventWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RaiseEventWorkflowAlpha1() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_RaiseEventWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRaiseEventWorkflowAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_StartWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::StartWorkflowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_GetWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetWorkflowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PurgeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PurgeWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_PurgeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPurgeWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TerminateWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TerminateWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_TerminateWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminateWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PauseWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PauseWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_PauseWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPauseWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResumeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResumeWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_ResumeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResumeWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RaiseEventWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RaiseEventWorkflowBeta1() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_RaiseEventWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRaiseEventWorkflowBeta1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Shutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Shutdown() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_Shutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Shutdown(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutdown(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::ShutdownRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ScheduleJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ScheduleJobAlpha1() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_ScheduleJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestScheduleJobAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::ScheduleJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetJobAlpha1() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_GetJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetJobAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::GetJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::GetJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteJobAlpha1() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_DeleteJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteJobAlpha1(::grpc::ServerContext* context, ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::runtime::v1::DeleteJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_InvokeService<WithAsyncMethod_GetState<WithAsyncMethod_GetBulkState<WithAsyncMethod_SaveState<WithAsyncMethod_QueryStateAlpha1<WithAsyncMethod_DeleteState<WithAsyncMethod_DeleteBulkState<WithAsyncMethod_ExecuteStateTransaction<WithAsyncMethod_PublishEvent<WithAsyncMethod_BulkPublishEventAlpha1<WithAsyncMethod_SubscribeTopicEventsAlpha1<WithAsyncMethod_InvokeBinding<WithAsyncMethod_GetSecret<WithAsyncMethod_GetBulkSecret<WithAsyncMethod_RegisterActorTimer<WithAsyncMethod_UnregisterActorTimer<WithAsyncMethod_RegisterActorReminder<WithAsyncMethod_UnregisterActorReminder<WithAsyncMethod_GetActorState<WithAsyncMethod_ExecuteActorStateTransaction<WithAsyncMethod_InvokeActor<WithAsyncMethod_GetConfigurationAlpha1<WithAsyncMethod_GetConfiguration<WithAsyncMethod_SubscribeConfigurationAlpha1<WithAsyncMethod_SubscribeConfiguration<WithAsyncMethod_UnsubscribeConfigurationAlpha1<WithAsyncMethod_UnsubscribeConfiguration<WithAsyncMethod_TryLockAlpha1<WithAsyncMethod_UnlockAlpha1<WithAsyncMethod_EncryptAlpha1<WithAsyncMethod_DecryptAlpha1<WithAsyncMethod_GetMetadata<WithAsyncMethod_SetMetadata<WithAsyncMethod_SubtleGetKeyAlpha1<WithAsyncMethod_SubtleEncryptAlpha1<WithAsyncMethod_SubtleDecryptAlpha1<WithAsyncMethod_SubtleWrapKeyAlpha1<WithAsyncMethod_SubtleUnwrapKeyAlpha1<WithAsyncMethod_SubtleSignAlpha1<WithAsyncMethod_SubtleVerifyAlpha1<WithAsyncMethod_StartWorkflowAlpha1<WithAsyncMethod_GetWorkflowAlpha1<WithAsyncMethod_PurgeWorkflowAlpha1<WithAsyncMethod_TerminateWorkflowAlpha1<WithAsyncMethod_PauseWorkflowAlpha1<WithAsyncMethod_ResumeWorkflowAlpha1<WithAsyncMethod_RaiseEventWorkflowAlpha1<WithAsyncMethod_StartWorkflowBeta1<WithAsyncMethod_GetWorkflowBeta1<WithAsyncMethod_PurgeWorkflowBeta1<WithAsyncMethod_TerminateWorkflowBeta1<WithAsyncMethod_PauseWorkflowBeta1<WithAsyncMethod_ResumeWorkflowBeta1<WithAsyncMethod_RaiseEventWorkflowBeta1<WithAsyncMethod_Shutdown<WithAsyncMethod_ScheduleJobAlpha1<WithAsyncMethod_GetJobAlpha1<WithAsyncMethod_DeleteJobAlpha1<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InvokeService() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::InvokeServiceRequest, ::dapr::proto::common::v1::InvokeResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::InvokeServiceRequest* request, ::dapr::proto::common::v1::InvokeResponse* response) { return this->InvokeService(context, request, response); }));}
    void SetMessageAllocatorFor_InvokeService(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::InvokeServiceRequest, ::dapr::proto::common::v1::InvokeResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::InvokeServiceRequest, ::dapr::proto::common::v1::InvokeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InvokeService(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InvokeService(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetStateRequest, ::dapr::proto::runtime::v1::GetStateResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetStateRequest* request, ::dapr::proto::runtime::v1::GetStateResponse* response) { return this->GetState(context, request, response); }));}
    void SetMessageAllocatorFor_GetState(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetStateRequest, ::dapr::proto::runtime::v1::GetStateResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetStateRequest, ::dapr::proto::runtime::v1::GetStateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetState(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetBulkState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetBulkStateRequest, ::dapr::proto::runtime::v1::GetBulkStateResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetBulkStateRequest* request, ::dapr::proto::runtime::v1::GetBulkStateResponse* response) { return this->GetBulkState(context, request, response); }));}
    void SetMessageAllocatorFor_GetBulkState(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetBulkStateRequest, ::dapr::proto::runtime::v1::GetBulkStateResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetBulkStateRequest, ::dapr::proto::runtime::v1::GetBulkStateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBulkState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SaveState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SaveStateRequest* request, ::google::protobuf::Empty* response) { return this->SaveState(context, request, response); }));}
    void SetMessageAllocatorFor_SaveState(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SaveState(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SaveState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_QueryStateAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_QueryStateAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::QueryStateRequest, ::dapr::proto::runtime::v1::QueryStateResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::QueryStateRequest* request, ::dapr::proto::runtime::v1::QueryStateResponse* response) { return this->QueryStateAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_QueryStateAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::QueryStateRequest, ::dapr::proto::runtime::v1::QueryStateResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::QueryStateRequest, ::dapr::proto::runtime::v1::QueryStateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_QueryStateAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* QueryStateAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* QueryStateAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::DeleteStateRequest* request, ::google::protobuf::Empty* response) { return this->DeleteState(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteState(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteState(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteBulkState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* request, ::google::protobuf::Empty* response) { return this->DeleteBulkState(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteBulkState(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteBulkState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ExecuteStateTransaction() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* request, ::google::protobuf::Empty* response) { return this->ExecuteStateTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteStateTransaction(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ExecuteStateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ExecuteStateTransaction(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PublishEvent() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::PublishEventRequest* request, ::google::protobuf::Empty* response) { return this->PublishEvent(context, request, response); }));}
    void SetMessageAllocatorFor_PublishEvent(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PublishEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PublishEvent(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_BulkPublishEventAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_BulkPublishEventAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::BulkPublishRequest, ::dapr::proto::runtime::v1::BulkPublishResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::BulkPublishRequest* request, ::dapr::proto::runtime::v1::BulkPublishResponse* response) { return this->BulkPublishEventAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_BulkPublishEventAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::BulkPublishRequest, ::dapr::proto::runtime::v1::BulkPublishResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(9);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::BulkPublishRequest, ::dapr::proto::runtime::v1::BulkPublishResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_BulkPublishEventAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* BulkPublishEventAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* BulkPublishEventAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubscribeTopicEventsAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubscribeTopicEventsAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc_impl::internal::CallbackBidiHandler< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context) { return this->SubscribeTopicEventsAlpha1(context); }));
    }
    ~ExperimentalWithCallbackMethod_SubscribeTopicEventsAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTopicEventsAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerBidiReactor< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* SubscribeTopicEventsAlpha1(
      ::grpc::CallbackServerContext* /*context*/)
    #else
    virtual ::grpc::experimental::ServerBidiReactor< ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1>* SubscribeTopicEventsAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InvokeBinding() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::InvokeBindingRequest, ::dapr::proto::runtime::v1::InvokeBindingResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::InvokeBindingRequest* request, ::dapr::proto::runtime::v1::InvokeBindingResponse* response) { return this->InvokeBinding(context, request, response); }));}
    void SetMessageAllocatorFor_InvokeBinding(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::InvokeBindingRequest, ::dapr::proto::runtime::v1::InvokeBindingResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::InvokeBindingRequest, ::dapr::proto::runtime::v1::InvokeBindingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InvokeBinding(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InvokeBinding(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetSecret() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetSecretRequest, ::dapr::proto::runtime::v1::GetSecretResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetSecretRequest* request, ::dapr::proto::runtime::v1::GetSecretResponse* response) { return this->GetSecret(context, request, response); }));}
    void SetMessageAllocatorFor_GetSecret(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetSecretRequest, ::dapr::proto::runtime::v1::GetSecretResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetSecretRequest, ::dapr::proto::runtime::v1::GetSecretResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetSecret(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetBulkSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetBulkSecret() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetBulkSecretRequest, ::dapr::proto::runtime::v1::GetBulkSecretResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* request, ::dapr::proto::runtime::v1::GetBulkSecretResponse* response) { return this->GetBulkSecret(context, request, response); }));}
    void SetMessageAllocatorFor_GetBulkSecret(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetBulkSecretRequest, ::dapr::proto::runtime::v1::GetBulkSecretResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(13);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetBulkSecretRequest, ::dapr::proto::runtime::v1::GetBulkSecretResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetBulkSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBulkSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBulkSecret(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RegisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RegisterActorTimer() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(14,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RegisterActorTimerRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* request, ::google::protobuf::Empty* response) { return this->RegisterActorTimer(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterActorTimer(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::RegisterActorTimerRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(14);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RegisterActorTimerRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RegisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RegisterActorTimer(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RegisterActorTimer(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UnregisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UnregisterActorTimer() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(15,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnregisterActorTimerRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* request, ::google::protobuf::Empty* response) { return this->UnregisterActorTimer(context, request, response); }));}
    void SetMessageAllocatorFor_UnregisterActorTimer(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::UnregisterActorTimerRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(15);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnregisterActorTimerRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UnregisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnregisterActorTimer(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnregisterActorTimer(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RegisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RegisterActorReminder() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(16,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RegisterActorReminderRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* request, ::google::protobuf::Empty* response) { return this->RegisterActorReminder(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterActorReminder(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::RegisterActorReminderRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(16);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RegisterActorReminderRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RegisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RegisterActorReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RegisterActorReminder(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UnregisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UnregisterActorReminder() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(17,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnregisterActorReminderRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* request, ::google::protobuf::Empty* response) { return this->UnregisterActorReminder(context, request, response); }));}
    void SetMessageAllocatorFor_UnregisterActorReminder(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::UnregisterActorReminderRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(17);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnregisterActorReminderRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UnregisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnregisterActorReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnregisterActorReminder(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetActorState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetActorState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(18,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetActorStateRequest, ::dapr::proto::runtime::v1::GetActorStateResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetActorStateRequest* request, ::dapr::proto::runtime::v1::GetActorStateResponse* response) { return this->GetActorState(context, request, response); }));}
    void SetMessageAllocatorFor_GetActorState(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetActorStateRequest, ::dapr::proto::runtime::v1::GetActorStateResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(18);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetActorStateRequest, ::dapr::proto::runtime::v1::GetActorStateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetActorState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetActorState(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetActorState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ExecuteActorStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ExecuteActorStateTransaction() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(19,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* request, ::google::protobuf::Empty* response) { return this->ExecuteActorStateTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteActorStateTransaction(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(19);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ExecuteActorStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ExecuteActorStateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ExecuteActorStateTransaction(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InvokeActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InvokeActor() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(20,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::InvokeActorRequest, ::dapr::proto::runtime::v1::InvokeActorResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::InvokeActorRequest* request, ::dapr::proto::runtime::v1::InvokeActorResponse* response) { return this->InvokeActor(context, request, response); }));}
    void SetMessageAllocatorFor_InvokeActor(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::InvokeActorRequest, ::dapr::proto::runtime::v1::InvokeActorResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(20);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::InvokeActorRequest, ::dapr::proto::runtime::v1::InvokeActorResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InvokeActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeActor(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InvokeActor(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InvokeActor(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetConfigurationAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(21,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response) { return this->GetConfigurationAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfigurationAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(21);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetConfigurationAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetConfigurationAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(22,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetConfigurationRequest* request, ::dapr::proto::runtime::v1::GetConfigurationResponse* response) { return this->GetConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfiguration(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(22);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubscribeConfigurationAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(23,
          new ::grpc_impl::internal::CallbackServerStreamingHandler< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest, ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request) { return this->SubscribeConfigurationAlpha1(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_SubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfigurationAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubscribeConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(24,
          new ::grpc_impl::internal::CallbackServerStreamingHandler< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest, ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* request) { return this->SubscribeConfiguration(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* SubscribeConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UnsubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UnsubscribeConfigurationAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(25,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response) { return this->UnsubscribeConfigurationAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_UnsubscribeConfigurationAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(25);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UnsubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnsubscribeConfigurationAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnsubscribeConfigurationAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UnsubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UnsubscribeConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(26,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* request, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* response) { return this->UnsubscribeConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_UnsubscribeConfiguration(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(26);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UnsubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnsubscribeConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnsubscribeConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_TryLockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_TryLockAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(27,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::TryLockRequest, ::dapr::proto::runtime::v1::TryLockResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::TryLockRequest* request, ::dapr::proto::runtime::v1::TryLockResponse* response) { return this->TryLockAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_TryLockAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::TryLockRequest, ::dapr::proto::runtime::v1::TryLockResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(27);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::TryLockRequest, ::dapr::proto::runtime::v1::TryLockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_TryLockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TryLockAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TryLockAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UnlockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UnlockAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(28,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnlockRequest, ::dapr::proto::runtime::v1::UnlockResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::UnlockRequest* request, ::dapr::proto::runtime::v1::UnlockResponse* response) { return this->UnlockAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_UnlockAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::UnlockRequest, ::dapr::proto::runtime::v1::UnlockResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(28);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::UnlockRequest, ::dapr::proto::runtime::v1::UnlockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UnlockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnlockAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnlockAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_EncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_EncryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(29,
          new ::grpc_impl::internal::CallbackBidiHandler< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context) { return this->EncryptAlpha1(context); }));
    }
    ~ExperimentalWithCallbackMethod_EncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EncryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerBidiReactor< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* EncryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/)
    #else
    virtual ::grpc::experimental::ServerBidiReactor< ::dapr::proto::runtime::v1::EncryptRequest, ::dapr::proto::runtime::v1::EncryptResponse>* EncryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DecryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(30,
          new ::grpc_impl::internal::CallbackBidiHandler< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context) { return this->DecryptAlpha1(context); }));
    }
    ~ExperimentalWithCallbackMethod_DecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerBidiReactor< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* DecryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/)
    #else
    virtual ::grpc::experimental::ServerBidiReactor< ::dapr::proto::runtime::v1::DecryptRequest, ::dapr::proto::runtime::v1::DecryptResponse>* DecryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetMetadata() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(31,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetMetadataRequest, ::dapr::proto::runtime::v1::GetMetadataResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetMetadataRequest* request, ::dapr::proto::runtime::v1::GetMetadataResponse* response) { return this->GetMetadata(context, request, response); }));}
    void SetMessageAllocatorFor_GetMetadata(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetMetadataRequest, ::dapr::proto::runtime::v1::GetMetadataResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(31);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetMetadataRequest, ::dapr::proto::runtime::v1::GetMetadataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetMetadata(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SetMetadata() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(32,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SetMetadataRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SetMetadataRequest* request, ::google::protobuf::Empty* response) { return this->SetMetadata(context, request, response); }));}
    void SetMessageAllocatorFor_SetMetadata(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SetMetadataRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(32);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SetMetadataRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SetMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SetMetadata(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleGetKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleGetKeyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(33,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleGetKeyRequest, ::dapr::proto::runtime::v1::SubtleGetKeyResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* request, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* response) { return this->SubtleGetKeyAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleGetKeyAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleGetKeyRequest, ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(33);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleGetKeyRequest, ::dapr::proto::runtime::v1::SubtleGetKeyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleGetKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleGetKeyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleGetKeyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleEncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleEncryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(34,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleEncryptRequest, ::dapr::proto::runtime::v1::SubtleEncryptResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* request, ::dapr::proto::runtime::v1::SubtleEncryptResponse* response) { return this->SubtleEncryptAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleEncryptAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleEncryptRequest, ::dapr::proto::runtime::v1::SubtleEncryptResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(34);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleEncryptRequest, ::dapr::proto::runtime::v1::SubtleEncryptResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleEncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleEncryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleEncryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleDecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleDecryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(35,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleDecryptRequest, ::dapr::proto::runtime::v1::SubtleDecryptResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* request, ::dapr::proto::runtime::v1::SubtleDecryptResponse* response) { return this->SubtleDecryptAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleDecryptAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleDecryptRequest, ::dapr::proto::runtime::v1::SubtleDecryptResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(35);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleDecryptRequest, ::dapr::proto::runtime::v1::SubtleDecryptResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleDecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleDecryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleDecryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleWrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleWrapKeyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(36,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleWrapKeyRequest, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* response) { return this->SubtleWrapKeyAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleWrapKeyAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleWrapKeyRequest, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(36);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleWrapKeyRequest, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleWrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleWrapKeyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleWrapKeyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleUnwrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleUnwrapKeyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(37,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* request, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* response) { return this->SubtleUnwrapKeyAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleUnwrapKeyAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(37);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleUnwrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleUnwrapKeyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleUnwrapKeyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleSignAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleSignAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(38,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleSignRequest, ::dapr::proto::runtime::v1::SubtleSignResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleSignRequest* request, ::dapr::proto::runtime::v1::SubtleSignResponse* response) { return this->SubtleSignAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleSignAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleSignRequest, ::dapr::proto::runtime::v1::SubtleSignResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(38);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleSignRequest, ::dapr::proto::runtime::v1::SubtleSignResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleSignAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleSignAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleSignAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_SubtleVerifyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_SubtleVerifyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(39,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleVerifyRequest, ::dapr::proto::runtime::v1::SubtleVerifyResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* request, ::dapr::proto::runtime::v1::SubtleVerifyResponse* response) { return this->SubtleVerifyAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_SubtleVerifyAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::SubtleVerifyRequest, ::dapr::proto::runtime::v1::SubtleVerifyResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(39);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::SubtleVerifyRequest, ::dapr::proto::runtime::v1::SubtleVerifyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_SubtleVerifyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleVerifyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleVerifyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(40,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response) { return this->StartWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_StartWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(40);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(41,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response) { return this->GetWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_GetWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(41);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PurgeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PurgeWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(42,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->PurgeWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_PurgeWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(42);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PurgeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PurgeWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PurgeWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_TerminateWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_TerminateWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(43,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->TerminateWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_TerminateWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(43);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_TerminateWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TerminateWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TerminateWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PauseWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PauseWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(44,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->PauseWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_PauseWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(44);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PauseWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PauseWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PauseWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ResumeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ResumeWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(45,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->ResumeWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_ResumeWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(45);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ResumeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResumeWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResumeWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RaiseEventWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RaiseEventWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(46,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->RaiseEventWorkflowAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_RaiseEventWorkflowAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(46);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RaiseEventWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RaiseEventWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RaiseEventWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(47,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::StartWorkflowRequest* request, ::dapr::proto::runtime::v1::StartWorkflowResponse* response) { return this->StartWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_StartWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(47);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(48,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetWorkflowRequest* request, ::dapr::proto::runtime::v1::GetWorkflowResponse* response) { return this->GetWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_GetWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(48);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PurgeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PurgeWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(49,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->PurgeWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_PurgeWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(49);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PurgeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PurgeWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PurgeWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_TerminateWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_TerminateWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(50,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->TerminateWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_TerminateWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(50);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_TerminateWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TerminateWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TerminateWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PauseWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PauseWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(51,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->PauseWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_PauseWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(51);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PauseWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PauseWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PauseWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ResumeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ResumeWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(52,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->ResumeWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_ResumeWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(52);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ResumeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResumeWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResumeWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RaiseEventWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RaiseEventWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(53,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* request, ::google::protobuf::Empty* response) { return this->RaiseEventWorkflowBeta1(context, request, response); }));}
    void SetMessageAllocatorFor_RaiseEventWorkflowBeta1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(53);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RaiseEventWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RaiseEventWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RaiseEventWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Shutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Shutdown() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(54,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ShutdownRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::ShutdownRequest* request, ::google::protobuf::Empty* response) { return this->Shutdown(context, request, response); }));}
    void SetMessageAllocatorFor_Shutdown(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::ShutdownRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(54);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ShutdownRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Shutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Shutdown(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Shutdown(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Shutdown(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ScheduleJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ScheduleJobAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(55,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ScheduleJobRequest, ::dapr::proto::runtime::v1::ScheduleJobResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::ScheduleJobRequest* request, ::dapr::proto::runtime::v1::ScheduleJobResponse* response) { return this->ScheduleJobAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_ScheduleJobAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::ScheduleJobRequest, ::dapr::proto::runtime::v1::ScheduleJobResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(55);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::ScheduleJobRequest, ::dapr::proto::runtime::v1::ScheduleJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ScheduleJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ScheduleJobAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ScheduleJobAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetJobAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(56,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetJobRequest, ::dapr::proto::runtime::v1::GetJobResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::GetJobRequest* request, ::dapr::proto::runtime::v1::GetJobResponse* response) { return this->GetJobAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_GetJobAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::GetJobRequest, ::dapr::proto::runtime::v1::GetJobResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(56);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(56);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::GetJobRequest, ::dapr::proto::runtime::v1::GetJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetJobAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetJobAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteJobAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(57,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::DeleteJobRequest, ::dapr::proto::runtime::v1::DeleteJobResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::dapr::proto::runtime::v1::DeleteJobRequest* request, ::dapr::proto::runtime::v1::DeleteJobResponse* response) { return this->DeleteJobAlpha1(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteJobAlpha1(
        ::grpc::experimental::MessageAllocator< ::dapr::proto::runtime::v1::DeleteJobRequest, ::dapr::proto::runtime::v1::DeleteJobResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(57);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(57);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::dapr::proto::runtime::v1::DeleteJobRequest, ::dapr::proto::runtime::v1::DeleteJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteJobAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteJobAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_InvokeService<ExperimentalWithCallbackMethod_GetState<ExperimentalWithCallbackMethod_GetBulkState<ExperimentalWithCallbackMethod_SaveState<ExperimentalWithCallbackMethod_QueryStateAlpha1<ExperimentalWithCallbackMethod_DeleteState<ExperimentalWithCallbackMethod_DeleteBulkState<ExperimentalWithCallbackMethod_ExecuteStateTransaction<ExperimentalWithCallbackMethod_PublishEvent<ExperimentalWithCallbackMethod_BulkPublishEventAlpha1<ExperimentalWithCallbackMethod_SubscribeTopicEventsAlpha1<ExperimentalWithCallbackMethod_InvokeBinding<ExperimentalWithCallbackMethod_GetSecret<ExperimentalWithCallbackMethod_GetBulkSecret<ExperimentalWithCallbackMethod_RegisterActorTimer<ExperimentalWithCallbackMethod_UnregisterActorTimer<ExperimentalWithCallbackMethod_RegisterActorReminder<ExperimentalWithCallbackMethod_UnregisterActorReminder<ExperimentalWithCallbackMethod_GetActorState<ExperimentalWithCallbackMethod_ExecuteActorStateTransaction<ExperimentalWithCallbackMethod_InvokeActor<ExperimentalWithCallbackMethod_GetConfigurationAlpha1<ExperimentalWithCallbackMethod_GetConfiguration<ExperimentalWithCallbackMethod_SubscribeConfigurationAlpha1<ExperimentalWithCallbackMethod_SubscribeConfiguration<ExperimentalWithCallbackMethod_UnsubscribeConfigurationAlpha1<ExperimentalWithCallbackMethod_UnsubscribeConfiguration<ExperimentalWithCallbackMethod_TryLockAlpha1<ExperimentalWithCallbackMethod_UnlockAlpha1<ExperimentalWithCallbackMethod_EncryptAlpha1<ExperimentalWithCallbackMethod_DecryptAlpha1<ExperimentalWithCallbackMethod_GetMetadata<ExperimentalWithCallbackMethod_SetMetadata<ExperimentalWithCallbackMethod_SubtleGetKeyAlpha1<ExperimentalWithCallbackMethod_SubtleEncryptAlpha1<ExperimentalWithCallbackMethod_SubtleDecryptAlpha1<ExperimentalWithCallbackMethod_SubtleWrapKeyAlpha1<ExperimentalWithCallbackMethod_SubtleUnwrapKeyAlpha1<ExperimentalWithCallbackMethod_SubtleSignAlpha1<ExperimentalWithCallbackMethod_SubtleVerifyAlpha1<ExperimentalWithCallbackMethod_StartWorkflowAlpha1<ExperimentalWithCallbackMethod_GetWorkflowAlpha1<ExperimentalWithCallbackMethod_PurgeWorkflowAlpha1<ExperimentalWithCallbackMethod_TerminateWorkflowAlpha1<ExperimentalWithCallbackMethod_PauseWorkflowAlpha1<ExperimentalWithCallbackMethod_ResumeWorkflowAlpha1<ExperimentalWithCallbackMethod_RaiseEventWorkflowAlpha1<ExperimentalWithCallbackMethod_StartWorkflowBeta1<ExperimentalWithCallbackMethod_GetWorkflowBeta1<ExperimentalWithCallbackMethod_PurgeWorkflowBeta1<ExperimentalWithCallbackMethod_TerminateWorkflowBeta1<ExperimentalWithCallbackMethod_PauseWorkflowBeta1<ExperimentalWithCallbackMethod_ResumeWorkflowBeta1<ExperimentalWithCallbackMethod_RaiseEventWorkflowBeta1<ExperimentalWithCallbackMethod_Shutdown<ExperimentalWithCallbackMethod_ScheduleJobAlpha1<ExperimentalWithCallbackMethod_GetJobAlpha1<ExperimentalWithCallbackMethod_DeleteJobAlpha1<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_InvokeService<ExperimentalWithCallbackMethod_GetState<ExperimentalWithCallbackMethod_GetBulkState<ExperimentalWithCallbackMethod_SaveState<ExperimentalWithCallbackMethod_QueryStateAlpha1<ExperimentalWithCallbackMethod_DeleteState<ExperimentalWithCallbackMethod_DeleteBulkState<ExperimentalWithCallbackMethod_ExecuteStateTransaction<ExperimentalWithCallbackMethod_PublishEvent<ExperimentalWithCallbackMethod_BulkPublishEventAlpha1<ExperimentalWithCallbackMethod_SubscribeTopicEventsAlpha1<ExperimentalWithCallbackMethod_InvokeBinding<ExperimentalWithCallbackMethod_GetSecret<ExperimentalWithCallbackMethod_GetBulkSecret<ExperimentalWithCallbackMethod_RegisterActorTimer<ExperimentalWithCallbackMethod_UnregisterActorTimer<ExperimentalWithCallbackMethod_RegisterActorReminder<ExperimentalWithCallbackMethod_UnregisterActorReminder<ExperimentalWithCallbackMethod_GetActorState<ExperimentalWithCallbackMethod_ExecuteActorStateTransaction<ExperimentalWithCallbackMethod_InvokeActor<ExperimentalWithCallbackMethod_GetConfigurationAlpha1<ExperimentalWithCallbackMethod_GetConfiguration<ExperimentalWithCallbackMethod_SubscribeConfigurationAlpha1<ExperimentalWithCallbackMethod_SubscribeConfiguration<ExperimentalWithCallbackMethod_UnsubscribeConfigurationAlpha1<ExperimentalWithCallbackMethod_UnsubscribeConfiguration<ExperimentalWithCallbackMethod_TryLockAlpha1<ExperimentalWithCallbackMethod_UnlockAlpha1<ExperimentalWithCallbackMethod_EncryptAlpha1<ExperimentalWithCallbackMethod_DecryptAlpha1<ExperimentalWithCallbackMethod_GetMetadata<ExperimentalWithCallbackMethod_SetMetadata<ExperimentalWithCallbackMethod_SubtleGetKeyAlpha1<ExperimentalWithCallbackMethod_SubtleEncryptAlpha1<ExperimentalWithCallbackMethod_SubtleDecryptAlpha1<ExperimentalWithCallbackMethod_SubtleWrapKeyAlpha1<ExperimentalWithCallbackMethod_SubtleUnwrapKeyAlpha1<ExperimentalWithCallbackMethod_SubtleSignAlpha1<ExperimentalWithCallbackMethod_SubtleVerifyAlpha1<ExperimentalWithCallbackMethod_StartWorkflowAlpha1<ExperimentalWithCallbackMethod_GetWorkflowAlpha1<ExperimentalWithCallbackMethod_PurgeWorkflowAlpha1<ExperimentalWithCallbackMethod_TerminateWorkflowAlpha1<ExperimentalWithCallbackMethod_PauseWorkflowAlpha1<ExperimentalWithCallbackMethod_ResumeWorkflowAlpha1<ExperimentalWithCallbackMethod_RaiseEventWorkflowAlpha1<ExperimentalWithCallbackMethod_StartWorkflowBeta1<ExperimentalWithCallbackMethod_GetWorkflowBeta1<ExperimentalWithCallbackMethod_PurgeWorkflowBeta1<ExperimentalWithCallbackMethod_TerminateWorkflowBeta1<ExperimentalWithCallbackMethod_PauseWorkflowBeta1<ExperimentalWithCallbackMethod_ResumeWorkflowBeta1<ExperimentalWithCallbackMethod_RaiseEventWorkflowBeta1<ExperimentalWithCallbackMethod_Shutdown<ExperimentalWithCallbackMethod_ScheduleJobAlpha1<ExperimentalWithCallbackMethod_GetJobAlpha1<ExperimentalWithCallbackMethod_DeleteJobAlpha1<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InvokeService() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetState() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBulkState() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SaveState() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryStateAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryStateAlpha1() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_QueryStateAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteState() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PublishEvent() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BulkPublishEventAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BulkPublishEventAlpha1() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_BulkPublishEventAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeTopicEventsAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeTopicEventsAlpha1() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SubscribeTopicEventsAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTopicEventsAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSecret() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBulkSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBulkSecret() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetBulkSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RegisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterActorTimer() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_RegisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnregisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnregisterActorTimer() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_UnregisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RegisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterActorReminder() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_RegisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnregisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnregisterActorReminder() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_UnregisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetActorState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetActorState() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetActorState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteActorStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteActorStateTransaction() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_ExecuteActorStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InvokeActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InvokeActor() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_InvokeActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeActor(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfigurationAlpha1() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_GetConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_SubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnsubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnsubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_UnsubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnsubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnsubscribeConfiguration() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_UnsubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TryLockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TryLockAlpha1() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_TryLockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnlockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnlockAlpha1() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_UnlockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EncryptAlpha1() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_EncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EncryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DecryptAlpha1() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_DecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMetadata() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_GetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetMetadata() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_SetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleGetKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleGetKeyAlpha1() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_SubtleGetKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleEncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleEncryptAlpha1() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_SubtleEncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleDecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleDecryptAlpha1() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_SubtleDecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleWrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleWrapKeyAlpha1() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_SubtleWrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleUnwrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleUnwrapKeyAlpha1() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_SubtleUnwrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleSignAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleSignAlpha1() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_SubtleSignAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubtleVerifyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubtleVerifyAlpha1() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_SubtleVerifyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_StartWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_GetWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PurgeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PurgeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_PurgeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TerminateWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TerminateWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_TerminateWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PauseWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PauseWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_PauseWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResumeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResumeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_ResumeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RaiseEventWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RaiseEventWorkflowAlpha1() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_RaiseEventWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_StartWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_GetWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PurgeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PurgeWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_PurgeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TerminateWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TerminateWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_TerminateWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PauseWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PauseWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_PauseWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResumeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResumeWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_ResumeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RaiseEventWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RaiseEventWorkflowBeta1() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_RaiseEventWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Shutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Shutdown() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_Shutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Shutdown(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ScheduleJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ScheduleJobAlpha1() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_ScheduleJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetJobAlpha1() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_GetJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteJobAlpha1() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_DeleteJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InvokeService() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeService(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetState() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBulkState() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SaveState() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryStateAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryStateAlpha1() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_QueryStateAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryStateAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteState() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBulkState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteStateTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PublishEvent() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BulkPublishEventAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BulkPublishEventAlpha1() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_BulkPublishEventAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBulkPublishEventAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeTopicEventsAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeTopicEventsAlpha1() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SubscribeTopicEventsAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTopicEventsAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTopicEventsAlpha1(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(10, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeBinding(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSecret() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSecret(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBulkSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBulkSecret() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetBulkSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkSecret(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterActorTimer() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_RegisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterActorTimer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnregisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnregisterActorTimer() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_UnregisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnregisterActorTimer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterActorReminder() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_RegisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterActorReminder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnregisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnregisterActorReminder() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_UnregisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnregisterActorReminder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetActorState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetActorState() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetActorState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActorState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteActorStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteActorStateTransaction() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_ExecuteActorStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteActorStateTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InvokeActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InvokeActor() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_InvokeActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeActor(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInvokeActor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfigurationAlpha1() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_GetConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfigurationAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_SubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeConfigurationAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(23, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(24, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnsubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnsubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_UnsubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnsubscribeConfigurationAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnsubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnsubscribeConfiguration() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_UnsubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnsubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TryLockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TryLockAlpha1() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_TryLockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryLockAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnlockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnlockAlpha1() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_UnlockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EncryptAlpha1() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_EncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EncryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEncryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(29, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DecryptAlpha1() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_DecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDecryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(30, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMetadata() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_GetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMetadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetMetadata() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_SetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMetadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleGetKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleGetKeyAlpha1() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_SubtleGetKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleGetKeyAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleEncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleEncryptAlpha1() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_SubtleEncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleEncryptAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleDecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleDecryptAlpha1() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_SubtleDecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleDecryptAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleWrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleWrapKeyAlpha1() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_SubtleWrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleWrapKeyAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleUnwrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleUnwrapKeyAlpha1() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_SubtleUnwrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleUnwrapKeyAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleSignAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleSignAlpha1() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_SubtleSignAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleSignAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubtleVerifyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubtleVerifyAlpha1() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_SubtleVerifyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubtleVerifyAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_StartWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_GetWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PurgeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PurgeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_PurgeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPurgeWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TerminateWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TerminateWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_TerminateWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminateWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PauseWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PauseWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_PauseWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPauseWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResumeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResumeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_ResumeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResumeWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RaiseEventWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RaiseEventWorkflowAlpha1() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_RaiseEventWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRaiseEventWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_StartWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_GetWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PurgeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PurgeWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_PurgeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPurgeWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TerminateWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TerminateWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_TerminateWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminateWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PauseWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PauseWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_PauseWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPauseWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResumeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResumeWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_ResumeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResumeWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RaiseEventWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RaiseEventWorkflowBeta1() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_RaiseEventWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRaiseEventWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Shutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Shutdown() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_Shutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Shutdown(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutdown(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ScheduleJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ScheduleJobAlpha1() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_ScheduleJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestScheduleJobAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetJobAlpha1() {
      ::grpc::Service::MarkMethodRaw(56);
    }
    ~WithRawMethod_GetJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetJobAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteJobAlpha1() {
      ::grpc::Service::MarkMethodRaw(57);
    }
    ~WithRawMethod_DeleteJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteJobAlpha1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InvokeService() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InvokeService(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InvokeService(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InvokeService(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetState(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetBulkState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBulkState(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBulkState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SaveState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SaveState(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SaveState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SaveState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_QueryStateAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_QueryStateAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryStateAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_QueryStateAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* QueryStateAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* QueryStateAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteState(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteBulkState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteBulkState(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteBulkState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteBulkState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ExecuteStateTransaction() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteStateTransaction(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ExecuteStateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ExecuteStateTransaction(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PublishEvent() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PublishEvent(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PublishEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PublishEvent(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_BulkPublishEventAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_BulkPublishEventAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BulkPublishEventAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_BulkPublishEventAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* BulkPublishEventAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* BulkPublishEventAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubscribeTopicEventsAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubscribeTopicEventsAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc_impl::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context) { return this->SubscribeTopicEventsAlpha1(context); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubscribeTopicEventsAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTopicEventsAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::SubscribeTopicEventsResponseAlpha1, ::dapr::proto::runtime::v1::SubscribeTopicEventsRequestAlpha1>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* SubscribeTopicEventsAlpha1(
      ::grpc::CallbackServerContext* /*context*/)
    #else
    virtual ::grpc::experimental::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* SubscribeTopicEventsAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InvokeBinding() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InvokeBinding(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InvokeBinding(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InvokeBinding(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetSecret() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSecret(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetSecret(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetBulkSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetBulkSecret() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBulkSecret(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetBulkSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetBulkSecret(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetBulkSecret(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RegisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RegisterActorTimer() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(14,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterActorTimer(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RegisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RegisterActorTimer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RegisterActorTimer(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UnregisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UnregisterActorTimer() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(15,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnregisterActorTimer(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UnregisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnregisterActorTimer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnregisterActorTimer(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RegisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RegisterActorReminder() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(16,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterActorReminder(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RegisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RegisterActorReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RegisterActorReminder(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UnregisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UnregisterActorReminder() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(17,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnregisterActorReminder(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UnregisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnregisterActorReminder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnregisterActorReminder(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetActorState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetActorState() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(18,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetActorState(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetActorState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetActorState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetActorState(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ExecuteActorStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ExecuteActorStateTransaction() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(19,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteActorStateTransaction(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ExecuteActorStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ExecuteActorStateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ExecuteActorStateTransaction(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InvokeActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InvokeActor() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(20,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InvokeActor(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InvokeActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InvokeActor(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InvokeActor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InvokeActor(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetConfigurationAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(21,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfigurationAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetConfigurationAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetConfigurationAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(22,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubscribeConfigurationAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(23,
          new ::grpc_impl::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->SubscribeConfigurationAlpha1(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeConfigurationAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeConfigurationAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubscribeConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(24,
          new ::grpc_impl::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->SubscribeConfiguration(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UnsubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UnsubscribeConfigurationAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(25,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnsubscribeConfigurationAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UnsubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnsubscribeConfigurationAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnsubscribeConfigurationAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UnsubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UnsubscribeConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(26,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnsubscribeConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UnsubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnsubscribeConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnsubscribeConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_TryLockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_TryLockAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(27,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TryLockAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_TryLockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TryLockAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TryLockAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UnlockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UnlockAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(28,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnlockAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UnlockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UnlockAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UnlockAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_EncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_EncryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(29,
          new ::grpc_impl::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context) { return this->EncryptAlpha1(context); }));
    }
    ~ExperimentalWithRawCallbackMethod_EncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EncryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::EncryptResponse, ::dapr::proto::runtime::v1::EncryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EncryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/)
    #else
    virtual ::grpc::experimental::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EncryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DecryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(30,
          new ::grpc_impl::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context) { return this->DecryptAlpha1(context); }));
    }
    ~ExperimentalWithRawCallbackMethod_DecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecryptAlpha1(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dapr::proto::runtime::v1::DecryptResponse, ::dapr::proto::runtime::v1::DecryptRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* DecryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/)
    #else
    virtual ::grpc::experimental::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* DecryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetMetadata() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(31,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMetadata(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetMetadata(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SetMetadata() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(32,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetMetadata(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SetMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SetMetadata(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleGetKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleGetKeyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(33,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleGetKeyAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleGetKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleGetKeyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleGetKeyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleEncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleEncryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(34,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleEncryptAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleEncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleEncryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleEncryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleDecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleDecryptAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(35,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleDecryptAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleDecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleDecryptAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleDecryptAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleWrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleWrapKeyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(36,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleWrapKeyAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleWrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleWrapKeyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleWrapKeyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleUnwrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleUnwrapKeyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(37,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleUnwrapKeyAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleUnwrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleUnwrapKeyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleUnwrapKeyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleSignAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleSignAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(38,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleSignAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleSignAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleSignAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleSignAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_SubtleVerifyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_SubtleVerifyAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(39,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubtleVerifyAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_SubtleVerifyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* SubtleVerifyAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* SubtleVerifyAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(40,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(41,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PurgeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PurgeWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(42,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PurgeWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PurgeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PurgeWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PurgeWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_TerminateWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_TerminateWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(43,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TerminateWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_TerminateWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TerminateWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TerminateWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PauseWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PauseWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(44,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PauseWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PauseWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PauseWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PauseWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ResumeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ResumeWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(45,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResumeWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ResumeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResumeWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResumeWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RaiseEventWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RaiseEventWorkflowAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(46,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RaiseEventWorkflowAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RaiseEventWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RaiseEventWorkflowAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RaiseEventWorkflowAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(47,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(48,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PurgeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PurgeWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(49,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PurgeWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PurgeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PurgeWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PurgeWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_TerminateWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_TerminateWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(50,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TerminateWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_TerminateWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* TerminateWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* TerminateWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PauseWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PauseWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(51,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PauseWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PauseWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PauseWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PauseWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ResumeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ResumeWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(52,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResumeWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ResumeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResumeWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResumeWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RaiseEventWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RaiseEventWorkflowBeta1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(53,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RaiseEventWorkflowBeta1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RaiseEventWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RaiseEventWorkflowBeta1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RaiseEventWorkflowBeta1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Shutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Shutdown() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(54,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Shutdown(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Shutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Shutdown(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Shutdown(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Shutdown(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ScheduleJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ScheduleJobAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(55,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ScheduleJobAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ScheduleJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ScheduleJobAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ScheduleJobAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetJobAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(56,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetJobAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetJobAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetJobAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteJobAlpha1() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(57,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteJobAlpha1(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteJobAlpha1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteJobAlpha1(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InvokeService : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InvokeService() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::InvokeServiceRequest, ::dapr::proto::common::v1::InvokeResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::InvokeServiceRequest, ::dapr::proto::common::v1::InvokeResponse>* streamer) {
                       return this->StreamedInvokeService(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InvokeService() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InvokeService(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeServiceRequest* /*request*/, ::dapr::proto::common::v1::InvokeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInvokeService(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::InvokeServiceRequest,::dapr::proto::common::v1::InvokeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetState() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetStateRequest, ::dapr::proto::runtime::v1::GetStateResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetStateRequest, ::dapr::proto::runtime::v1::GetStateResponse>* streamer) {
                       return this->StreamedGetState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetStateRequest,::dapr::proto::runtime::v1::GetStateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBulkState() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetBulkStateRequest, ::dapr::proto::runtime::v1::GetBulkStateResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetBulkStateRequest, ::dapr::proto::runtime::v1::GetBulkStateResponse>* streamer) {
                       return this->StreamedGetBulkState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBulkState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetBulkStateRequest,::dapr::proto::runtime::v1::GetBulkStateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SaveState() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SaveStateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSaveState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SaveState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SaveStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SaveStateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryStateAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryStateAlpha1() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::QueryStateRequest, ::dapr::proto::runtime::v1::QueryStateResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::QueryStateRequest, ::dapr::proto::runtime::v1::QueryStateResponse>* streamer) {
                       return this->StreamedQueryStateAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryStateAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryStateAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::QueryStateRequest* /*request*/, ::dapr::proto::runtime::v1::QueryStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryStateAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::QueryStateRequest,::dapr::proto::runtime::v1::QueryStateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteState() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::DeleteStateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::DeleteStateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBulkState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteBulkState() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::DeleteBulkStateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteBulkState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteBulkState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBulkState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteBulkStateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBulkState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::DeleteBulkStateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteStateTransaction() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedExecuteStateTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteStateTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PublishEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PublishEvent() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::PublishEventRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPublishEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PublishEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PublishEvent(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PublishEventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPublishEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::PublishEventRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BulkPublishEventAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BulkPublishEventAlpha1() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::BulkPublishRequest, ::dapr::proto::runtime::v1::BulkPublishResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::BulkPublishRequest, ::dapr::proto::runtime::v1::BulkPublishResponse>* streamer) {
                       return this->StreamedBulkPublishEventAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BulkPublishEventAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BulkPublishEventAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::BulkPublishRequest* /*request*/, ::dapr::proto::runtime::v1::BulkPublishResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBulkPublishEventAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::BulkPublishRequest,::dapr::proto::runtime::v1::BulkPublishResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InvokeBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InvokeBinding() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::InvokeBindingRequest, ::dapr::proto::runtime::v1::InvokeBindingResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::InvokeBindingRequest, ::dapr::proto::runtime::v1::InvokeBindingResponse>* streamer) {
                       return this->StreamedInvokeBinding(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InvokeBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InvokeBinding(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeBindingRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeBindingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInvokeBinding(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::InvokeBindingRequest,::dapr::proto::runtime::v1::InvokeBindingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSecret() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetSecretRequest, ::dapr::proto::runtime::v1::GetSecretResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetSecretRequest, ::dapr::proto::runtime::v1::GetSecretResponse>* streamer) {
                       return this->StreamedGetSecret(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSecret(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetSecretRequest,::dapr::proto::runtime::v1::GetSecretResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBulkSecret : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBulkSecret() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetBulkSecretRequest, ::dapr::proto::runtime::v1::GetBulkSecretResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetBulkSecretRequest, ::dapr::proto::runtime::v1::GetBulkSecretResponse>* streamer) {
                       return this->StreamedGetBulkSecret(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBulkSecret() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBulkSecret(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetBulkSecretRequest* /*request*/, ::dapr::proto::runtime::v1::GetBulkSecretResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBulkSecret(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetBulkSecretRequest,::dapr::proto::runtime::v1::GetBulkSecretResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterActorTimer() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::RegisterActorTimerRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::RegisterActorTimerRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRegisterActorTimer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterActorTimer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::RegisterActorTimerRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnregisterActorTimer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnregisterActorTimer() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::UnregisterActorTimerRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::UnregisterActorTimerRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUnregisterActorTimer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnregisterActorTimer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnregisterActorTimer(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnregisterActorTimer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::UnregisterActorTimerRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterActorReminder() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::RegisterActorReminderRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::RegisterActorReminderRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRegisterActorReminder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RegisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterActorReminder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::RegisterActorReminderRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnregisterActorReminder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnregisterActorReminder() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::UnregisterActorReminderRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::UnregisterActorReminderRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUnregisterActorReminder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnregisterActorReminder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnregisterActorReminder(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnregisterActorReminder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::UnregisterActorReminderRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetActorState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetActorState() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetActorStateRequest, ::dapr::proto::runtime::v1::GetActorStateResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetActorStateRequest, ::dapr::proto::runtime::v1::GetActorStateResponse>* streamer) {
                       return this->StreamedGetActorState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetActorState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetActorState(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetActorStateRequest* /*request*/, ::dapr::proto::runtime::v1::GetActorStateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetActorState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetActorStateRequest,::dapr::proto::runtime::v1::GetActorStateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteActorStateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteActorStateTransaction() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedExecuteActorStateTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteActorStateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteActorStateTransaction(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteActorStateTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InvokeActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InvokeActor() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::InvokeActorRequest, ::dapr::proto::runtime::v1::InvokeActorResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::InvokeActorRequest, ::dapr::proto::runtime::v1::InvokeActorResponse>* streamer) {
                       return this->StreamedInvokeActor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InvokeActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InvokeActor(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::InvokeActorRequest* /*request*/, ::dapr::proto::runtime::v1::InvokeActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInvokeActor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::InvokeActorRequest,::dapr::proto::runtime::v1::InvokeActorResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfigurationAlpha1() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>* streamer) {
                       return this->StreamedGetConfigurationAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfigurationAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetConfigurationRequest,::dapr::proto::runtime::v1::GetConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetConfigurationRequest, ::dapr::proto::runtime::v1::GetConfigurationResponse>* streamer) {
                       return this->StreamedGetConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetConfigurationRequest,::dapr::proto::runtime::v1::GetConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnsubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnsubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* streamer) {
                       return this->StreamedUnsubscribeConfigurationAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnsubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnsubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnsubscribeConfigurationAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest,::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnsubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnsubscribeConfiguration() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* streamer) {
                       return this->StreamedUnsubscribeConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnsubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnsubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* /*request*/, ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnsubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest,::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TryLockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TryLockAlpha1() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::TryLockRequest, ::dapr::proto::runtime::v1::TryLockResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::TryLockRequest, ::dapr::proto::runtime::v1::TryLockResponse>* streamer) {
                       return this->StreamedTryLockAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TryLockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TryLockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TryLockRequest* /*request*/, ::dapr::proto::runtime::v1::TryLockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTryLockAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::TryLockRequest,::dapr::proto::runtime::v1::TryLockResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnlockAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnlockAlpha1() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::UnlockRequest, ::dapr::proto::runtime::v1::UnlockResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::UnlockRequest, ::dapr::proto::runtime::v1::UnlockResponse>* streamer) {
                       return this->StreamedUnlockAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnlockAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnlockAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::UnlockRequest* /*request*/, ::dapr::proto::runtime::v1::UnlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnlockAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::UnlockRequest,::dapr::proto::runtime::v1::UnlockResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMetadata() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetMetadataRequest, ::dapr::proto::runtime::v1::GetMetadataResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetMetadataRequest, ::dapr::proto::runtime::v1::GetMetadataResponse>* streamer) {
                       return this->StreamedGetMetadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetMetadataRequest* /*request*/, ::dapr::proto::runtime::v1::GetMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMetadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetMetadataRequest,::dapr::proto::runtime::v1::GetMetadataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetMetadata() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SetMetadataRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SetMetadataRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetMetadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetMetadata(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SetMetadataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetMetadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SetMetadataRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleGetKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleGetKeyAlpha1() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleGetKeyRequest, ::dapr::proto::runtime::v1::SubtleGetKeyResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleGetKeyRequest, ::dapr::proto::runtime::v1::SubtleGetKeyResponse>* streamer) {
                       return this->StreamedSubtleGetKeyAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleGetKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleGetKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleGetKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleGetKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleGetKeyAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleGetKeyRequest,::dapr::proto::runtime::v1::SubtleGetKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleEncryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleEncryptAlpha1() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleEncryptRequest, ::dapr::proto::runtime::v1::SubtleEncryptResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleEncryptRequest, ::dapr::proto::runtime::v1::SubtleEncryptResponse>* streamer) {
                       return this->StreamedSubtleEncryptAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleEncryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleEncryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleEncryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleEncryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleEncryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleEncryptRequest,::dapr::proto::runtime::v1::SubtleEncryptResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleDecryptAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleDecryptAlpha1() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleDecryptRequest, ::dapr::proto::runtime::v1::SubtleDecryptResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleDecryptRequest, ::dapr::proto::runtime::v1::SubtleDecryptResponse>* streamer) {
                       return this->StreamedSubtleDecryptAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleDecryptAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleDecryptAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleDecryptRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleDecryptResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleDecryptAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleDecryptRequest,::dapr::proto::runtime::v1::SubtleDecryptResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleWrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleWrapKeyAlpha1() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleWrapKeyRequest, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleWrapKeyRequest, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* streamer) {
                       return this->StreamedSubtleWrapKeyAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleWrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleWrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleWrapKeyAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleWrapKeyRequest,::dapr::proto::runtime::v1::SubtleWrapKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleUnwrapKeyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleUnwrapKeyAlpha1() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* streamer) {
                       return this->StreamedSubtleUnwrapKeyAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleUnwrapKeyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleUnwrapKeyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleUnwrapKeyAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest,::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleSignAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleSignAlpha1() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleSignRequest, ::dapr::proto::runtime::v1::SubtleSignResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleSignRequest, ::dapr::proto::runtime::v1::SubtleSignResponse>* streamer) {
                       return this->StreamedSubtleSignAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleSignAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleSignAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleSignRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleSignResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleSignAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleSignRequest,::dapr::proto::runtime::v1::SubtleSignResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubtleVerifyAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubtleVerifyAlpha1() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::SubtleVerifyRequest, ::dapr::proto::runtime::v1::SubtleVerifyResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::SubtleVerifyRequest, ::dapr::proto::runtime::v1::SubtleVerifyResponse>* streamer) {
                       return this->StreamedSubtleVerifyAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubtleVerifyAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubtleVerifyAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubtleVerifyRequest* /*request*/, ::dapr::proto::runtime::v1::SubtleVerifyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubtleVerifyAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::SubtleVerifyRequest,::dapr::proto::runtime::v1::SubtleVerifyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>* streamer) {
                       return this->StreamedStartWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::StartWorkflowRequest,::dapr::proto::runtime::v1::StartWorkflowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>* streamer) {
                       return this->StreamedGetWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetWorkflowRequest,::dapr::proto::runtime::v1::GetWorkflowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PurgeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PurgeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPurgeWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PurgeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PurgeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPurgeWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::PurgeWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TerminateWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TerminateWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedTerminateWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TerminateWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TerminateWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTerminateWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::TerminateWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PauseWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PauseWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPauseWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PauseWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PauseWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPauseWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::PauseWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResumeWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResumeWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedResumeWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResumeWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResumeWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResumeWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::ResumeWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RaiseEventWorkflowAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RaiseEventWorkflowAlpha1() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRaiseEventWorkflowAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RaiseEventWorkflowAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RaiseEventWorkflowAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRaiseEventWorkflowAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::StartWorkflowRequest, ::dapr::proto::runtime::v1::StartWorkflowResponse>* streamer) {
                       return this->StreamedStartWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::StartWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::StartWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::StartWorkflowRequest,::dapr::proto::runtime::v1::StartWorkflowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetWorkflowRequest, ::dapr::proto::runtime::v1::GetWorkflowResponse>* streamer) {
                       return this->StreamedGetWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetWorkflowRequest* /*request*/, ::dapr::proto::runtime::v1::GetWorkflowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetWorkflowRequest,::dapr::proto::runtime::v1::GetWorkflowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PurgeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PurgeWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::PurgeWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPurgeWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PurgeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PurgeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PurgeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPurgeWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::PurgeWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TerminateWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TerminateWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::TerminateWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedTerminateWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TerminateWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TerminateWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::TerminateWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTerminateWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::TerminateWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PauseWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PauseWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::PauseWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPauseWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PauseWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PauseWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::PauseWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPauseWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::PauseWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResumeWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResumeWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::ResumeWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedResumeWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResumeWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResumeWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ResumeWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResumeWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::ResumeWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RaiseEventWorkflowBeta1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RaiseEventWorkflowBeta1() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRaiseEventWorkflowBeta1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RaiseEventWorkflowBeta1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RaiseEventWorkflowBeta1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRaiseEventWorkflowBeta1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Shutdown : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Shutdown() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::ShutdownRequest, ::google::protobuf::Empty>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::ShutdownRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedShutdown(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Shutdown() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Shutdown(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ShutdownRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShutdown(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::ShutdownRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ScheduleJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ScheduleJobAlpha1() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::ScheduleJobRequest, ::dapr::proto::runtime::v1::ScheduleJobResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::ScheduleJobRequest, ::dapr::proto::runtime::v1::ScheduleJobResponse>* streamer) {
                       return this->StreamedScheduleJobAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ScheduleJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ScheduleJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::ScheduleJobRequest* /*request*/, ::dapr::proto::runtime::v1::ScheduleJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedScheduleJobAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::ScheduleJobRequest,::dapr::proto::runtime::v1::ScheduleJobResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetJobAlpha1() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::GetJobRequest, ::dapr::proto::runtime::v1::GetJobResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::GetJobRequest, ::dapr::proto::runtime::v1::GetJobResponse>* streamer) {
                       return this->StreamedGetJobAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::GetJobRequest* /*request*/, ::dapr::proto::runtime::v1::GetJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetJobAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::GetJobRequest,::dapr::proto::runtime::v1::GetJobResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteJobAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteJobAlpha1() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dapr::proto::runtime::v1::DeleteJobRequest, ::dapr::proto::runtime::v1::DeleteJobResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::dapr::proto::runtime::v1::DeleteJobRequest, ::dapr::proto::runtime::v1::DeleteJobResponse>* streamer) {
                       return this->StreamedDeleteJobAlpha1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteJobAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteJobAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::DeleteJobRequest* /*request*/, ::dapr::proto::runtime::v1::DeleteJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteJobAlpha1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::runtime::v1::DeleteJobRequest,::dapr::proto::runtime::v1::DeleteJobResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_InvokeService<WithStreamedUnaryMethod_GetState<WithStreamedUnaryMethod_GetBulkState<WithStreamedUnaryMethod_SaveState<WithStreamedUnaryMethod_QueryStateAlpha1<WithStreamedUnaryMethod_DeleteState<WithStreamedUnaryMethod_DeleteBulkState<WithStreamedUnaryMethod_ExecuteStateTransaction<WithStreamedUnaryMethod_PublishEvent<WithStreamedUnaryMethod_BulkPublishEventAlpha1<WithStreamedUnaryMethod_InvokeBinding<WithStreamedUnaryMethod_GetSecret<WithStreamedUnaryMethod_GetBulkSecret<WithStreamedUnaryMethod_RegisterActorTimer<WithStreamedUnaryMethod_UnregisterActorTimer<WithStreamedUnaryMethod_RegisterActorReminder<WithStreamedUnaryMethod_UnregisterActorReminder<WithStreamedUnaryMethod_GetActorState<WithStreamedUnaryMethod_ExecuteActorStateTransaction<WithStreamedUnaryMethod_InvokeActor<WithStreamedUnaryMethod_GetConfigurationAlpha1<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_UnsubscribeConfigurationAlpha1<WithStreamedUnaryMethod_UnsubscribeConfiguration<WithStreamedUnaryMethod_TryLockAlpha1<WithStreamedUnaryMethod_UnlockAlpha1<WithStreamedUnaryMethod_GetMetadata<WithStreamedUnaryMethod_SetMetadata<WithStreamedUnaryMethod_SubtleGetKeyAlpha1<WithStreamedUnaryMethod_SubtleEncryptAlpha1<WithStreamedUnaryMethod_SubtleDecryptAlpha1<WithStreamedUnaryMethod_SubtleWrapKeyAlpha1<WithStreamedUnaryMethod_SubtleUnwrapKeyAlpha1<WithStreamedUnaryMethod_SubtleSignAlpha1<WithStreamedUnaryMethod_SubtleVerifyAlpha1<WithStreamedUnaryMethod_StartWorkflowAlpha1<WithStreamedUnaryMethod_GetWorkflowAlpha1<WithStreamedUnaryMethod_PurgeWorkflowAlpha1<WithStreamedUnaryMethod_TerminateWorkflowAlpha1<WithStreamedUnaryMethod_PauseWorkflowAlpha1<WithStreamedUnaryMethod_ResumeWorkflowAlpha1<WithStreamedUnaryMethod_RaiseEventWorkflowAlpha1<WithStreamedUnaryMethod_StartWorkflowBeta1<WithStreamedUnaryMethod_GetWorkflowBeta1<WithStreamedUnaryMethod_PurgeWorkflowBeta1<WithStreamedUnaryMethod_TerminateWorkflowBeta1<WithStreamedUnaryMethod_PauseWorkflowBeta1<WithStreamedUnaryMethod_ResumeWorkflowBeta1<WithStreamedUnaryMethod_RaiseEventWorkflowBeta1<WithStreamedUnaryMethod_Shutdown<WithStreamedUnaryMethod_ScheduleJobAlpha1<WithStreamedUnaryMethod_GetJobAlpha1<WithStreamedUnaryMethod_DeleteJobAlpha1<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeConfigurationAlpha1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeConfigurationAlpha1() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::dapr::proto::runtime::v1::SubscribeConfigurationRequest, ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerSplitStreamer<
                     ::dapr::proto::runtime::v1::SubscribeConfigurationRequest, ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* streamer) {
                       return this->StreamedSubscribeConfigurationAlpha1(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeConfigurationAlpha1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeConfigurationAlpha1(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeConfigurationAlpha1(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest,::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeConfiguration() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::dapr::proto::runtime::v1::SubscribeConfigurationRequest, ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerSplitStreamer<
                     ::dapr::proto::runtime::v1::SubscribeConfigurationRequest, ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* streamer) {
                       return this->StreamedSubscribeConfiguration(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeConfiguration(::grpc::ServerContext* /*context*/, const ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* /*request*/, ::grpc::ServerWriter< ::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeConfiguration(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::dapr::proto::runtime::v1::SubscribeConfigurationRequest,::dapr::proto::runtime::v1::SubscribeConfigurationResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_SubscribeConfigurationAlpha1<WithSplitStreamingMethod_SubscribeConfiguration<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_InvokeService<WithStreamedUnaryMethod_GetState<WithStreamedUnaryMethod_GetBulkState<WithStreamedUnaryMethod_SaveState<WithStreamedUnaryMethod_QueryStateAlpha1<WithStreamedUnaryMethod_DeleteState<WithStreamedUnaryMethod_DeleteBulkState<WithStreamedUnaryMethod_ExecuteStateTransaction<WithStreamedUnaryMethod_PublishEvent<WithStreamedUnaryMethod_BulkPublishEventAlpha1<WithStreamedUnaryMethod_InvokeBinding<WithStreamedUnaryMethod_GetSecret<WithStreamedUnaryMethod_GetBulkSecret<WithStreamedUnaryMethod_RegisterActorTimer<WithStreamedUnaryMethod_UnregisterActorTimer<WithStreamedUnaryMethod_RegisterActorReminder<WithStreamedUnaryMethod_UnregisterActorReminder<WithStreamedUnaryMethod_GetActorState<WithStreamedUnaryMethod_ExecuteActorStateTransaction<WithStreamedUnaryMethod_InvokeActor<WithStreamedUnaryMethod_GetConfigurationAlpha1<WithStreamedUnaryMethod_GetConfiguration<WithSplitStreamingMethod_SubscribeConfigurationAlpha1<WithSplitStreamingMethod_SubscribeConfiguration<WithStreamedUnaryMethod_UnsubscribeConfigurationAlpha1<WithStreamedUnaryMethod_UnsubscribeConfiguration<WithStreamedUnaryMethod_TryLockAlpha1<WithStreamedUnaryMethod_UnlockAlpha1<WithStreamedUnaryMethod_GetMetadata<WithStreamedUnaryMethod_SetMetadata<WithStreamedUnaryMethod_SubtleGetKeyAlpha1<WithStreamedUnaryMethod_SubtleEncryptAlpha1<WithStreamedUnaryMethod_SubtleDecryptAlpha1<WithStreamedUnaryMethod_SubtleWrapKeyAlpha1<WithStreamedUnaryMethod_SubtleUnwrapKeyAlpha1<WithStreamedUnaryMethod_SubtleSignAlpha1<WithStreamedUnaryMethod_SubtleVerifyAlpha1<WithStreamedUnaryMethod_StartWorkflowAlpha1<WithStreamedUnaryMethod_GetWorkflowAlpha1<WithStreamedUnaryMethod_PurgeWorkflowAlpha1<WithStreamedUnaryMethod_TerminateWorkflowAlpha1<WithStreamedUnaryMethod_PauseWorkflowAlpha1<WithStreamedUnaryMethod_ResumeWorkflowAlpha1<WithStreamedUnaryMethod_RaiseEventWorkflowAlpha1<WithStreamedUnaryMethod_StartWorkflowBeta1<WithStreamedUnaryMethod_GetWorkflowBeta1<WithStreamedUnaryMethod_PurgeWorkflowBeta1<WithStreamedUnaryMethod_TerminateWorkflowBeta1<WithStreamedUnaryMethod_PauseWorkflowBeta1<WithStreamedUnaryMethod_ResumeWorkflowBeta1<WithStreamedUnaryMethod_RaiseEventWorkflowBeta1<WithStreamedUnaryMethod_Shutdown<WithStreamedUnaryMethod_ScheduleJobAlpha1<WithStreamedUnaryMethod_GetJobAlpha1<WithStreamedUnaryMethod_DeleteJobAlpha1<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr


#endif  // GRPC_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto__INCLUDED
